Bottom: c312c46ff176f3b420c180e59b11579d495e4ca5
Top:    2b5300b74c1f86bb26882da079ffe9707700ec07
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-25 18:08:22 +0100

draw.c: Split "Gathering" routines from real drawing routines (Polygons)

Moves code from DrawPlainPolygon() into its only caller poly_callback()


---

diff --git a/src/draw.c b/src/draw.c
index 99cae69..20dd691 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -90,8 +90,6 @@ static void DrawEverything (BoxTypePtr);
 static void DrawPPV (int group, const BoxType *);
 static int DrawLayerGroup (int, const BoxType *);
 static void DrawRegularText (LayerTypePtr, TextTypePtr);
-static void DrawPolygonLowLevel (PolygonTypePtr);
-static void DrawPlainPolygon (LayerTypePtr Layer, PolygonTypePtr Polygon);
 static void AddPart (void *);
 static void SetPVColor (PinTypePtr, int);
 static void DrawEMark (ElementTypePtr, LocationType, LocationType, bool);
@@ -818,12 +816,45 @@ clearPin_callback (const BoxType * b, void *cl)
     gui->fill_pcb_pv (Output.pmGC, Output.pmGC, pin, false, true);
   return 1;
 }
+
 static int
 poly_callback (const BoxType * b, void *cl)
 {
   LayerType *layer = cl;
+  PolygonType *polygon = (PolygonType *)b;
+  static char *color;
+
+  if (!polygon->Clipped)
+    return 0;
+
+  if (TEST_FLAG (SELECTEDFLAG, polygon))
+    color = layer->SelectedColor;
+  else if (TEST_FLAG (FOUNDFLAG, polygon))
+    color = PCB->ConnectedColor;
+  else
+    color = layer->Color;
+  gui->set_color (Output.fgGC, color);
+
+  if (gui->thindraw_pcb_polygon != NULL &&
+      (TEST_FLAG (THINDRAWFLAG, PCB) ||
+       TEST_FLAG (THINDRAWPOLYFLAG, PCB)))
+    gui->thindraw_pcb_polygon (Output.fgGC, polygon, clip_box);
+  else
+    gui->fill_pcb_polygon (Output.fgGC, polygon, clip_box);
+
+  /* If checking planes, thin-draw any pieces which have been clipped away */
+  if (gui->thindraw_pcb_polygon != NULL &&
+      TEST_FLAG (CHECKPLANESFLAG, PCB) &&
+      !TEST_FLAG (FULLPOLYFLAG, polygon))
+    {
+      PolygonType poly = *polygon;
+
+      for (poly.Clipped = polygon->Clipped->f;
+           poly.Clipped != polygon->Clipped;
+           poly.Clipped = poly.Clipped->f)
+        gui->thindraw_pcb_polygon (Output.fgGC, &poly, clip_box);
+    }
 
-  DrawPlainPolygon (layer, (PolygonTypePtr) b);
   return 1;
 }
 
@@ -1196,24 +1227,6 @@ DrawTextLowLevel (TextTypePtr Text, int min_line_width)
 }
 
 /* ---------------------------------------------------------------------------
- * lowlevel drawing routine for polygons
- */
-static void
-DrawPolygonLowLevel (PolygonTypePtr Polygon)
-{
-  if (!Polygon->Clipped)
-    return;
-
-  if (Gathering)
-    {
-      AddPart (Polygon);
-      return;
-    }
-
-  printf ("DrawPolygonLowLevel: Called without Gathering set!\n");
-}
-
-/* ---------------------------------------------------------------------------
  * draw a via object
  */
 void
@@ -1403,7 +1416,9 @@ DrawRegularText (LayerTypePtr Layer, TextTypePtr Text)
 void
 DrawPolygon (LayerTypePtr Layer, PolygonTypePtr Polygon)
 {
-  DrawPolygonLowLevel (Polygon);
+  assert (Gathering);
+
+  AddPart (Polygon);
 }
 
 int
@@ -1434,53 +1449,6 @@ thin_callback (PLINE * pl, LayerTypePtr lay, PolygonTypePtr poly)
   return 0;
 }
 
-
-/* ---------------------------------------------------------------------------
- * draws a polygon
- */
-static void
-DrawPlainPolygon (LayerTypePtr Layer, PolygonTypePtr Polygon)
-{
-  static char *color;
-
-  if (!Polygon->Clipped)
-    return;
-
-  if (Gathering)
-    {
-      AddPart (Polygon);
-      return;
-    }
-
-  if (TEST_FLAG (SELECTEDFLAG, Polygon))
-    color = Layer->SelectedColor;
-  else if (TEST_FLAG (FOUNDFLAG, Polygon))
-    color = PCB->ConnectedColor;
-  else
-    color = Layer->Color;
-  gui->set_color (Output.fgGC, color);
-
-  if (gui->thindraw_pcb_polygon != NULL &&
-      (TEST_FLAG (THINDRAWFLAG, PCB) ||
-       TEST_FLAG (THINDRAWPOLYFLAG, PCB)))
-    gui->thindraw_pcb_polygon (Output.fgGC, Polygon, clip_box);
-  else
-    gui->fill_pcb_polygon (Output.fgGC, Polygon, clip_box);
-
-  /* If checking planes, thin-draw any pieces which have been clipped away */
-  if (gui->thindraw_pcb_polygon != NULL &&
-      TEST_FLAG (CHECKPLANESFLAG, PCB) &&
-      !TEST_FLAG (FULLPOLYFLAG, Polygon))
-    {
-      PolygonType poly = *Polygon;
-
-      for (poly.Clipped = Polygon->Clipped->f;
-           poly.Clipped != Polygon->Clipped;
-           poly.Clipped = poly.Clipped->f)
-        gui->thindraw_pcb_polygon (Output.fgGC, &poly, clip_box);
-    }
-}
-
 /* ---------------------------------------------------------------------------
  * draws an element
  */
@@ -1702,7 +1670,9 @@ EraseText (LayerTypePtr Layer, TextTypePtr Text)
 void
 ErasePolygon (PolygonTypePtr Polygon)
 {
-  DrawPolygonLowLevel (Polygon);
+  assert (Gathering);
+
+  AddPart (Polygon);
 }
 
 /* ---------------------------------------------------------------------------
