Bottom: 368848ea60b78ec10bbf4d64aef14b841e84ebcc
Top:    98b331d7a4b5a8540f90349b770d2a2981eac2df
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-08-28 01:26:19 +0100

Remove thindraw_pcb_polygon from the HID API

Just pass call the same function for all polygons, let the HID decide.


---

diff --git a/src/draw.c b/src/draw.c
index 7d7a594..90d2b61 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -914,38 +914,8 @@ poly_callback (const BoxType * b, void *cl)
 {
   struct poly_info *i = cl;
   PolygonType *polygon = (PolygonType *)b;
-  static char *color;
 
-  if (!polygon->Clipped)
-    return 0;
-
-  if (TEST_FLAG (SELECTEDFLAG, polygon))
-    color = i->layer->SelectedColor;
-  else if (TEST_FLAG (FOUNDFLAG, polygon))
-    color = PCB->ConnectedColor;
-  else
-    color = i->layer->Color;
-  gui->set_color (Output.fgGC, color);
-
-  if (gui->thindraw_pcb_polygon != NULL &&
-      (TEST_FLAG (THINDRAWFLAG, PCB) ||
-       TEST_FLAG (THINDRAWPOLYFLAG, PCB)))
-    gui->thindraw_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
-  else
-    gui->fill_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
-
-  /* If checking planes, thin-draw any pieces which have been clipped away */
-  if (gui->thindraw_pcb_polygon != NULL &&
-      TEST_FLAG (CHECKPLANESFLAG, PCB) &&
-      !TEST_FLAG (FULLPOLYFLAG, polygon))
-    {
-      PolygonType poly = *polygon;
-
-      for (poly.Clipped = polygon->Clipped->f;
-           poly.Clipped != polygon->Clipped;
-           poly.Clipped = poly.Clipped->f)
-        gui->thindraw_pcb_polygon (Output.fgGC, &poly, i->drawn_area);
-    }
+  gui->draw_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
 
   return 1;
 }
diff --git a/src/hid.h b/src/hid.h
index b1f532f..ae1f3f8 100644
--- a/src/hid.h
+++ b/src/hid.h
@@ -371,10 +371,8 @@ typedef enum
     void (*draw_rect) (hidGC gc_, Coord x1_, Coord y1_, Coord x2_, Coord y2_);
     void (*fill_circle) (hidGC gc_, Coord cx_, Coord cy_, Coord radius_);
     void (*fill_polygon) (hidGC gc_, int n_coords_, Coord *x_, Coord *y_);
-    void (*fill_pcb_polygon) (hidGC gc_, PolygonType *poly,
+    void (*draw_pcb_polygon) (hidGC gc_, PolygonType *poly,
                               const BoxType *clip_box);
-    void (*thindraw_pcb_polygon) (hidGC gc_, PolygonType *poly,
-                                  const BoxType *clip_box);
     void (*fill_pcb_pad) (hidGC gc_, PadType *pad, bool clip, bool mask);
     void (*thindraw_pcb_pad) (hidGC gc_, PadType *pad, bool clip, bool mask);
     void (*fill_pcb_pv) (hidGC fg_gc, hidGC bg_gc, PinType *pv, bool drawHole, bool mask);
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 21a22e8..695f7f4 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -578,11 +578,30 @@ ghid_fill_polygon (hidGC gc, int n_coords, Coord *x, Coord *y)
 }
 
 void
-ghid_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+ghid_draw_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
   USE_GC (gc);
 
-  hidgl_fill_pcb_polygon (poly, clip_box, gport->view.coord_per_px);
+  if (!poly->Clipped)
+    return;
+
+  if (TEST_FLAG (THINDRAWFLAG, PCB) || TEST_FLAG (THINDRAWPOLYFLAG, PCB))
+    common_thindraw_pcb_polygon (poly, clip_box);
+  else
+    hidgl_fill_pcb_polygon (poly, clip_box);
+
+  /* If checking planes, thin-draw any pieces which have been clipped away */
+  if (TEST_FLAG (CHECKPLANESFLAG, PCB) && !TEST_FLAG (FULLPOLYFLAG, polygon))
+    {
+      PolygonType poly = *polygon;
+
+      for (poly.Clipped = polygon->Clipped->f;
+           poly.Clipped != polygon->Clipped;
+           poly.Clipped = poly.Clipped->f)
+        common_thindraw_pcb_polygon (poly, clip_box);
+    }
+
+
 }
 
 void
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 0c9019d..874a662 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -2143,7 +2143,7 @@ hid_gtk_init ()
   ghid_hid.draw_arc                 = ghid_draw_arc;
   ghid_hid.draw_rect                = ghid_draw_rect;
   ghid_hid.fill_circle              = ghid_fill_circle;
-  ghid_hid.fill_polygon             = ghid_fill_polygon;
+  ghid_hid.draw_polygon             = common_gui_draw_polygon;
   ghid_hid.fill_rect                = ghid_fill_rect;
 
   ghid_hid.calibrate                = ghid_calibrate;
