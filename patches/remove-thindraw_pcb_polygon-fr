Bottom: ce6d06010e69c839677f6d45ffef405228f06e15
Top:    1e479efb3961c022f98691dcc1ffaa9e88f0613a
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-08-28 01:26:19 +0100

Remove thindraw_pcb_polygon from the HID API

Just pass call the same function for all polygons, let the HID decide.


---

diff --git a/src/draw.c b/src/draw.c
index 683d394..8c69e06 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -872,38 +872,8 @@ poly_callback (const BoxType * b, void *cl)
 {
   struct poly_info *i = cl;
   PolygonType *polygon = (PolygonType *)b;
-  static char *color;
 
-  if (!polygon->Clipped)
-    return 0;
-
-  if (TEST_FLAG (SELECTEDFLAG, polygon))
-    color = i->layer->SelectedColor;
-  else if (TEST_FLAG (FOUNDFLAG, polygon))
-    color = PCB->ConnectedColor;
-  else
-    color = i->layer->Color;
-  gui->graphics->set_color (Output.fgGC, color);
-
-  if (gui->thindraw_pcb_polygon != NULL &&
-      (TEST_FLAG (THINDRAWFLAG, PCB) ||
-       TEST_FLAG (THINDRAWPOLYFLAG, PCB)))
-    gui->thindraw_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
-  else
-    gui->fill_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
-
-  /* If checking planes, thin-draw any pieces which have been clipped away */
-  if (gui->thindraw_pcb_polygon != NULL &&
-      TEST_FLAG (CHECKPLANESFLAG, PCB) &&
-      !TEST_FLAG (FULLPOLYFLAG, polygon))
-    {
-      PolygonType poly = *polygon;
-
-      for (poly.Clipped = polygon->Clipped->f;
-           poly.Clipped != polygon->Clipped;
-           poly.Clipped = poly.Clipped->f)
-        gui->thindraw_pcb_polygon (Output.fgGC, &poly, i->drawn_area);
-    }
+  gui->draw_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
 
   return 1;
 }
diff --git a/src/hid.h b/src/hid.h
index d7974e5..258d5e1b 100644
--- a/src/hid.h
+++ b/src/hid.h
@@ -372,10 +372,7 @@ typedef enum
 
     HID_DRAW_API *graphics;
 
-    void (*fill_pcb_polygon) (hidGC gc_, PolygonType *poly,
-                              const BoxType *clip_box);
-    void (*thindraw_pcb_polygon) (hidGC gc_, PolygonType *poly,
-                                  const BoxType *clip_box);
+    void (*draw_pcb_polygon) (hidGC gc_, PolygonType *poly, const BoxType *clip_box);
     void (*fill_pcb_pad) (hidGC gc_, PadType *pad, bool clip, bool mask);
     void (*thindraw_pcb_pad) (hidGC gc_, PadType *pad, bool clip, bool mask);
     void (*fill_pcb_pv) (hidGC fg_gc, hidGC bg_gc, PinType *pv, bool drawHole, bool mask);
diff --git a/src/hid/common/draw_helpers.c b/src/hid/common/draw_helpers.c
index 0d0851d..403a162 100644
--- a/src/hid/common/draw_helpers.c
+++ b/src/hid/common/draw_helpers.c
@@ -140,7 +140,7 @@ should_compute_no_holes (PolygonType *poly, const BoxType *clip_box)
 #undef BOUNDS_INSIDE_CLIP_THRESHOLD
 
 void
-common_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+common_draw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
   if (!poly->NoHolesValid)
     {
@@ -469,8 +469,7 @@ common_thindraw_pcb_pv (hidGC fg_gc, hidGC bg_gc, PinType *pv, bool drawHole, bo
 void
 common_draw_helpers_init (HID *hid)
 {
-  hid->fill_pcb_polygon     = common_fill_pcb_polygon;
-  hid->thindraw_pcb_polygon = common_thindraw_pcb_polygon;
+  hid->draw_pcb_polygon     = common_draw_pcb_polygon;
   hid->fill_pcb_pad         = common_fill_pcb_pad;
   hid->thindraw_pcb_pad     = common_thindraw_pcb_pad;
   hid->fill_pcb_pv          = common_fill_pcb_pv;
diff --git a/src/hid/common/draw_helpers.h b/src/hid/common/draw_helpers.h
index 8243fe4..05bf19d 100644
--- a/src/hid/common/draw_helpers.h
+++ b/src/hid/common/draw_helpers.h
@@ -1,5 +1,4 @@
-void common_fill_pcb_polygon (hidGC gc, PolygonType *poly,
-                              const BoxType *clip_box);
+void common_draw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box);
 void common_thindraw_pcb_polygon (hidGC gc, PolygonType *poly,
                                   const BoxType *clip_box);
 void common_fill_pcb_pad (hidGC gc, PadType *pad, bool clear, bool mask);
diff --git a/src/hid/common/hidnogui.c b/src/hid/common/hidnogui.c
index 0792df9..67b9e3a 100644
--- a/src/hid/common/hidnogui.c
+++ b/src/hid/common/hidnogui.c
@@ -147,7 +147,7 @@ nogui_fill_polygon (hidGC gc, int n_coords, Coord *x, Coord *y)
 }
 
 static void
-nogui_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+nogui_draw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
   CRASH;
 }
@@ -454,7 +454,7 @@ common_nogui_init (HID *hid)
   hid->invalidate_all =       nogui_invalidate_all;
   hid->set_layer =            nogui_set_layer;
   hid->end_layer =            nogui_end_layer;
-  hid->fill_pcb_polygon =     nogui_fill_pcb_polygon;
+  hid->draw_pcb_polygon =     nogui_draw_pcb_polygon;
   hid->fill_pcb_pad =         nogui_fill_pcb_pad;
   hid->thindraw_pcb_pad =     nogui_thindraw_pcb_pad;
   hid->fill_pcb_pv =          nogui_fill_pcb_pv;
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 1913210..a06911e 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -575,20 +575,49 @@ ghid_fill_polygon (hidGC gc, int n_coords, Coord *x, Coord *y)
 }
 
 void
-ghid_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+ghid_draw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
+  static char *color;
   USE_GC (gc);
 
-  hidgl_fill_pcb_polygon (poly, clip_box, gport->view.coord_per_px);
-}
+  if (!poly->Clipped)
+    return;
+
+#if 0
+  if (TEST_FLAG (SELECTEDFLAG, poly))
+    color = layer->SelectedColor;
+  else if (TEST_FLAG (FOUNDFLAG, poly))
+#endif
+    color = PCB->ConnectedColor;
+#if 0
+  else
+    color = layer->Color;
+#endif
+
+  gui->graphics->set_color (Output.fgGC, color);
+
+  if (TEST_FLAG (THINDRAWFLAG, PCB) || TEST_FLAG (THINDRAWPOLYFLAG, PCB))
+    {
+      common_thindraw_pcb_polygon (gc, poly, clip_box);
+      ghid_set_alpha_mult (gc, 0.25);
+      hidgl_fill_pcb_polygon (poly, clip_box, gport->view.coord_per_px);
+      ghid_set_alpha_mult (gc, 1.0);
+    }
+  else
+    hidgl_fill_pcb_polygon (poly, clip_box, gport->view.coord_per_px);
+
+  /* If checking planes, thin-draw any pieces which have been clipped away */
+  if (TEST_FLAG (CHECKPLANESFLAG, PCB) && !TEST_FLAG (FULLPOLYFLAG, poly))
+    {
+      PolygonType piece = *poly;
+
+      for (piece.Clipped = poly->Clipped->f;
+           piece.Clipped != poly->Clipped;
+           piece.Clipped = piece.Clipped->f)
+        common_thindraw_pcb_polygon (gc, &piece, clip_box);
+    }
+
 
-void
-ghid_thindraw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
-{
-  common_thindraw_pcb_polygon (gc, poly, clip_box);
-  ghid_set_alpha_mult (gc, 0.25);
-  ghid_fill_pcb_polygon (gc, poly, clip_box);
-  ghid_set_alpha_mult (gc, 1.0);
 }
 
 void
@@ -789,8 +818,7 @@ ghid_init_renderer (int *argc, char ***argv, GHidPort *port)
 
   /* Setup HID function pointers specific to the GL renderer*/
   ghid_hid.end_layer = ghid_end_layer;
-  ghid_hid.fill_pcb_polygon = ghid_fill_pcb_polygon;
-  ghid_hid.thindraw_pcb_polygon = ghid_thindraw_pcb_polygon;
+  ghid_hid.draw_pcb_polygon = ghid_draw_pcb_polygon;
 }
 
 void
@@ -880,7 +908,7 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
      we can't use the hidgl polygon drawing routine */
   /* TODO: We could use the GLU tessellator though */
   if (hidgl_stencil_bits() == 0)
-    ghid_hid.fill_pcb_polygon = common_fill_pcb_polygon;
+    ghid_hid.draw_pcb_polygon = common_draw_pcb_polygon;
 
   glEnable (GL_BLEND);
   glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
diff --git a/src/hid/ps/ps.c b/src/hid/ps/ps.c
index 5098dbc..c617776 100644
--- a/src/hid/ps/ps.c
+++ b/src/hid/ps/ps.c
@@ -1240,7 +1240,7 @@ ps_fill_polygon (hidGC gc, int n_coords, Coord *x, Coord *y)
 }
 
 static void
-ps_fill_pcb_polygon (hidGC gc, PolygonType * poly, const BoxType * clip_box)
+ps_draw_pcb_polygon (hidGC gc, PolygonType * poly, const BoxType * clip_box)
 {
   /* Ignore clip_box, just draw everything */
 
@@ -1492,7 +1492,7 @@ void ps_ps_init (HID *hid)
   hid->get_export_options = ps_get_export_options;
   hid->do_export          = ps_do_export;
   hid->parse_arguments    = ps_parse_arguments;
-  hid->fill_pcb_polygon   = ps_fill_pcb_polygon;
+  hid->draw_pcb_polygon   = ps_draw_pcb_polygon;
   hid->calibrate          = ps_calibrate;
   hid->set_crosshair      = ps_set_crosshair;
 }
