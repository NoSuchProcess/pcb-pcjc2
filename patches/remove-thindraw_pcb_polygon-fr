Bottom: 5d0346634d3790ea31d6cd57dc0c9b0044fbfae1
Top:    db4b4b0e025559e959e5b6666caaea981a2cda44
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-08-28 01:26:19 +0100

Remove thindraw_pcb_polygon from the HID API

Just pass call the same function for all polygons, let the HID decide.


---

diff --git a/src/hid.h b/src/hid.h
index 501f94b..258d5e1b 100644
--- a/src/hid.h
+++ b/src/hid.h
@@ -372,8 +372,7 @@ typedef enum
 
     HID_DRAW_API *graphics;
 
-    void (*draw_pcb_polygon) (hidGC gc_, PolygonType *poly,
-                              const BoxType *clip_box);
+    void (*draw_pcb_polygon) (hidGC gc_, PolygonType *poly, const BoxType *clip_box);
     void (*fill_pcb_pad) (hidGC gc_, PadType *pad, bool clip, bool mask);
     void (*thindraw_pcb_pad) (hidGC gc_, PadType *pad, bool clip, bool mask);
     void (*fill_pcb_pv) (hidGC fg_gc, hidGC bg_gc, PinType *pv, bool drawHole, bool mask);
diff --git a/src/hid/common/hidnogui.c b/src/hid/common/hidnogui.c
index 0792df9..67b9e3a 100644
--- a/src/hid/common/hidnogui.c
+++ b/src/hid/common/hidnogui.c
@@ -147,7 +147,7 @@ nogui_fill_polygon (hidGC gc, int n_coords, Coord *x, Coord *y)
 }
 
 static void
-nogui_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+nogui_draw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
   CRASH;
 }
@@ -454,7 +454,7 @@ common_nogui_init (HID *hid)
   hid->invalidate_all =       nogui_invalidate_all;
   hid->set_layer =            nogui_set_layer;
   hid->end_layer =            nogui_end_layer;
-  hid->fill_pcb_polygon =     nogui_fill_pcb_polygon;
+  hid->draw_pcb_polygon =     nogui_draw_pcb_polygon;
   hid->fill_pcb_pad =         nogui_fill_pcb_pad;
   hid->thindraw_pcb_pad =     nogui_thindraw_pcb_pad;
   hid->fill_pcb_pv =          nogui_fill_pcb_pv;
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index ddc7970..f34562e 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -811,8 +811,7 @@ ghid_init_renderer (int *argc, char ***argv, GHidPort *port)
 
   /* Setup HID function pointers specific to the GL renderer*/
   ghid_hid.end_layer = ghid_end_layer;
-  ghid_hid.fill_pcb_polygon = ghid_fill_pcb_polygon;
-  ghid_hid.thindraw_pcb_polygon = ghid_thindraw_pcb_polygon;
+/* XXX: ONLY GL SPECIFIC FOR THE FILL ROUTINE  ghid_hid.draw_pcb_polygon = ghid_draw_pcb_polygon; */
 }
 
 void
@@ -902,7 +901,7 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
      we can't use the hidgl polygon drawing routine */
   /* TODO: We could use the GLU tessellator though */
   if (hidgl_stencil_bits() == 0)
-    ghid_hid.fill_pcb_polygon = common_fill_pcb_polygon;
+    ghid_hid.draw_pcb_polygon = common_draw_pcb_polygon; /* XXX: THIS WILL KILL THE RENDERING THINDRAW FUNCTIONALITY TOO */
 
   glEnable (GL_BLEND);
   glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
diff --git a/src/hid/ps/ps.c b/src/hid/ps/ps.c
index 5098dbc..c617776 100644
--- a/src/hid/ps/ps.c
+++ b/src/hid/ps/ps.c
@@ -1240,7 +1240,7 @@ ps_fill_polygon (hidGC gc, int n_coords, Coord *x, Coord *y)
 }
 
 static void
-ps_fill_pcb_polygon (hidGC gc, PolygonType * poly, const BoxType * clip_box)
+ps_draw_pcb_polygon (hidGC gc, PolygonType * poly, const BoxType * clip_box)
 {
   /* Ignore clip_box, just draw everything */
 
@@ -1492,7 +1492,7 @@ void ps_ps_init (HID *hid)
   hid->get_export_options = ps_get_export_options;
   hid->do_export          = ps_do_export;
   hid->parse_arguments    = ps_parse_arguments;
-  hid->fill_pcb_polygon   = ps_fill_pcb_polygon;
+  hid->draw_pcb_polygon   = ps_draw_pcb_polygon;
   hid->calibrate          = ps_calibrate;
   hid->set_crosshair      = ps_set_crosshair;
 }
