Bottom: a62ebf4f240ba1f0f9b8d8d71fbdc2e300335672
Top:    c956cfdc69fc0cc4c6d7a2a5780475601a0e3d87
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-03-31 02:09:57 +0100

drc: Fix line <-> polygon and polygon <-> polygon tests tests

In src/find.c, the one polygon is tested against a series of bloated
lines following the outline of the second polygon.

In IsPolygonInPolygon() we have:

  line.Thickness = 2 * Bloat;

But the test which is called, IsLineInPolygon()

Also adds bloat to the line:

  lp = LinePoly (Line, Line->Thickness + Bloat)

This bloat is actually half the size we should be adding for this
test, as the LinePoly argument is a line thickness, not cap radius.

Fix this all by doubling the bloat added in IsLineInPolygon(), and
set line.Thickness = 0; in IsPolygonInPolygon().


---

diff --git a/src/find.c b/src/find.c
index 5d2e92c..0a9de4c 100644
--- a/src/find.c
+++ b/src/find.c
@@ -2684,7 +2684,7 @@ IsLineInPolygon (LineTypePtr Line, PolygonTypePtr Polygon)
       && Box->Y1 <= Polygon->Clipped->contours->ymax + Bloat
       && Box->Y2 >= Polygon->Clipped->contours->ymin - Bloat)
     {
-      if (!(lp = LinePoly (Line, Line->Thickness + Bloat)))
+      if (!(lp = LinePoly (Line, Line->Thickness + 2 * Bloat)))
         return FALSE;           /* error */
       return isects (lp, Polygon, true);
     }
@@ -2743,7 +2743,7 @@ IsPolygonInPolygon (PolygonTypePtr P1, PolygonTypePtr P2)
 
               line.Point1.X = v->point[0];
               line.Point1.Y = v->point[1];
-              line.Thickness = 2 * Bloat;
+              line.Thickness = 0; /* Bloat is added by IsLineInPolygon */
               line.Clearance = 0;
               line.Flags = NoFlags ();
               for (v = v->next; v != &c->head; v = v->next)
