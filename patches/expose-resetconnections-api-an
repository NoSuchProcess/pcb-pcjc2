Bottom: d2f60c5e6217e9beb6caeef3b940b8b7ad7782b0
Top:    390e0d8edd5cb4ced88a0a191fc5bdc29378fe75
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-23 14:38:44 +0000

Expose ResetConnections() API and use to simplify existing code


---

diff --git a/src/action.c b/src/action.c
index 7a9c3f0..1c078b1 100644
--- a/src/action.c
+++ b/src/action.c
@@ -2370,10 +2370,7 @@ ActionConnection (int argc, char **argv, int x, int y)
 	  break;
 
 	case F_Reset:
-	  SaveUndoSerialNumber ();
-	  ResetFoundPinsViasAndPads (true);
-	  RestoreUndoSerialNumber ();
-	  ResetFoundLinesAndPolygons (true);
+	  ResetConnections (true);
 	  break;
 	}
       RestoreCrosshair (true);
@@ -2786,10 +2783,7 @@ ActionDisplay (int argc, char **argv, int childX, int childY)
 	  TOGGLE_FLAG (AUTODRCFLAG, PCB);
 	  if (TEST_FLAG (AUTODRCFLAG, PCB) && Settings.Mode == LINE_MODE)
 	    {
-	      SaveUndoSerialNumber ();
-	      ResetFoundPinsViasAndPads (true);
-	      RestoreUndoSerialNumber ();
-	      ResetFoundLinesAndPolygons (true);
+	      ResetConnections (true);
 	      if (Crosshair.AttachedLine.State != STATE_FIRST)
 		LookupConnection (Crosshair.AttachedLine.Point1.X,
 				  Crosshair.AttachedLine.Point1.Y, true, 1,
diff --git a/src/autoroute.c b/src/autoroute.c
index 9ccab97..976ef09 100644
--- a/src/autoroute.c
+++ b/src/autoroute.c
@@ -985,8 +985,7 @@ CreateRouteData ()
    * this saves on searching the trees to find the nets
    */
   /* use the DRCFLAG to mark objects as they are entered */
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
+  ResetConnections (false);
   Nets = CollectSubnets (false);
   {
     routebox_t *last_net = NULL;
diff --git a/src/rats.c b/src/rats.c
index 5fe86cd..3e9d6ee 100644
--- a/src/rats.c
+++ b/src/rats.c
@@ -463,8 +463,7 @@ GatherSubnets (NetListTypePtr Netl, bool NoWarn, bool AndRats)
   for (m = 0; Netl->NetN > 0 && m < Netl->NetN; m++)
     {
       a = &Netl->Net[m];
-      ResetFoundPinsViasAndPads (false);
-      ResetFoundLinesAndPolygons (false);
+      ResetConnections (false);
       RatFindHook (a->Connection[0].type, a->Connection[0].ptr1,
 		   a->Connection[0].ptr2, a->Connection[0].ptr2, false,
 		   AndRats);
@@ -545,8 +544,7 @@ GatherSubnets (NetListTypePtr Netl, bool NoWarn, bool AndRats)
       if (!NoWarn)
 	Warned |= CheckShorts (a->Connection[0].menu);
     }
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
+  ResetConnections (false);
   return (Warned);
 }
 
diff --git a/src/report.c b/src/report.c
index a9c429d..23e146a 100644
--- a/src/report.c
+++ b/src/report.c
@@ -689,9 +689,7 @@ ReportAllNetLengths (int argc, char **argv, int x, int y)
 
     got_one:
       SaveUndoSerialNumber ();
-      ResetFoundPinsViasAndPads (true);
-      RestoreUndoSerialNumber ();
-      ResetFoundLinesAndPolygons (true);
+      ResetConnections (true);
       RestoreUndoSerialNumber ();
       length = XYtoNetLength (x, y, &found);
 
@@ -708,9 +706,7 @@ ReportNetLength (int argc, char **argv, int x, int y)
   int found = 0;
 
   SaveUndoSerialNumber ();
-  ResetFoundPinsViasAndPads (true);
-  RestoreUndoSerialNumber ();
-  ResetFoundLinesAndPolygons (true);
+  ResetConnections (true);
   RestoreUndoSerialNumber ();
   gui->get_coords ("Click on a connection", &x, &y);
 
diff --git a/src/set.c b/src/set.c
index 7a41f73..2f3eb4b 100644
--- a/src/set.c
+++ b/src/set.c
@@ -292,10 +292,7 @@ SetMode (int Mode)
       Crosshair.AttachedLine.State = STATE_FIRST;
       if (Mode == LINE_MODE && TEST_FLAG (AUTODRCFLAG, PCB))
 	{
-	  SaveUndoSerialNumber ();
-	  ResetFoundPinsViasAndPads (true);
-	  RestoreUndoSerialNumber ();
-	  ResetFoundLinesAndPolygons (true);
+	  ResetFoundConnections (true);
 	  IncrementUndoSerialNumber ();
 	}
     }
diff --git a/src/toporouter.c b/src/toporouter.c
index 88c1325..d7590d3 100644
--- a/src/toporouter.c
+++ b/src/toporouter.c
@@ -2799,8 +2799,7 @@ void
 import_clusters(toporouter_t *r)
 {
   NetListListType nets;
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
+  ResetFoundConnections (false);
   nets = CollectSubnets(false);
   NETLIST_LOOP(&nets);
   {
