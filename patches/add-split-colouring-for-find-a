Bottom: 14eee5ebd68de95f40e0dd580db8e38f45b52557
Top:    e641a7c65f39a5d6e35a64b13550e32f2087c932
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-12-10 01:19:10 +0000

Add split colouring for "Find" action, introducing new flag "connected"

Colour differently depending on whether objects are physically connected
to the object under the cursor when invoking the "Find" action.

The aim here is to differentiate between what an ohm-meter would show
connected with the board as-currently designed, and what it would read
if all rat-lines were implemented.


---

diff --git a/src/action.c b/src/action.c
index 6a2c43a..4e58c9b 100644
--- a/src/action.c
+++ b/src/action.c
@@ -107,6 +107,7 @@ typedef enum
   F_ClearAndRedraw,
   F_ClearList,
   F_Close,
+  F_Found,
   F_Connection,
   F_Convert,
   F_Copy,
@@ -341,6 +342,7 @@ static FunctionType Functions[] = {
   {"ClearAndRedraw", F_ClearAndRedraw},
   {"ClearList", F_ClearList},
   {"Close", F_Close},
+  {"Found", F_Found},
   {"Connection", F_Connection},
   {"Convert", F_Convert},
   {"Copy", F_Copy},
@@ -2290,12 +2292,13 @@ ActionConnection (int argc, char **argv, Coord x, Coord y)
 	case F_Find:
 	  {
 	    gui->get_coords (_("Click on a connection"), &x, &y);
-	    LookupConnection (x, y, true, 1, FOUNDFLAG, false);
+	    LookupConnection (x, y, true, 1, FOUNDFLAG, true);
+	    LookupConnection (x, y, true, 1, CONNECTEDFLAG, false);
 	    break;
 	  }
 
 	case F_ResetLinesAndPolygons:
-	  if (ResetFoundLinesAndPolygons (true, FOUNDFLAG))
+	  if (ResetFoundLinesAndPolygons (true, FOUNDFLAG | CONNECTEDFLAG))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
@@ -2303,7 +2306,7 @@ ActionConnection (int argc, char **argv, Coord x, Coord y)
 	  break;
 
 	case F_ResetPinsViasAndPads:
-	  if (ResetFoundPinsViasAndPads (true, FOUNDFLAG))
+	  if (ResetFoundPinsViasAndPads (true, FOUNDFLAG | CONNECTEDFLAG))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
@@ -2311,7 +2314,7 @@ ActionConnection (int argc, char **argv, Coord x, Coord y)
 	  break;
 
 	case F_Reset:
-	  if (ResetConnections (true, FOUNDFLAG))
+	  if (ResetConnections (true, FOUNDFLAG | CONNECTEDFLAG))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
@@ -5315,9 +5318,12 @@ Selects all objects in a rectangle indicated by the cursor.
 @item All
 Selects all objects on the board.
 
-@item Connection
+@item Found
 Selects all connections with the ``found'' flag set.
 
+@item Connection
+Selects all connections with the ``connected'' flag set.
+
 @item Convert
 Converts the selected objects to an element.  This uses the highest
 numbered paste buffer.
@@ -5422,8 +5428,8 @@ ActionSelect (int argc, char **argv, Coord x, Coord y)
 	    break;
 	  }
 
-	  /* all found connections */
-	case F_Connection:
+	  /* all logical connections */
+	case F_Found:
 	  if (SelectByFlag (FOUNDFLAG, true))
 	    {
               Draw ();
@@ -5432,6 +5438,16 @@ ActionSelect (int argc, char **argv, Coord x, Coord y)
 	    }
 	  break;
 
+	  /* all physical connections */
+	case F_Connection:
+	  if (SelectByFlag (CONNECTEDFLAG, true))
+	    {
+              Draw ();
+	      IncrementUndoSerialNumber ();
+	      SetChangedFlag (true);
+	    }
+	  break;
+
 	case F_Convert:
 	  {
 	    Coord x, y;
@@ -5601,8 +5617,8 @@ ActionUnselect (int argc, char **argv, Coord x, Coord y)
 	    break;
 	  }
 
-	  /* all found connections */
-	case F_Connection:
+	  /* all logical connections */
+	case F_Found:
 	  if (SelectByFlag (FOUNDFLAG, false))
 	    {
               Draw ();
@@ -5611,6 +5627,16 @@ ActionUnselect (int argc, char **argv, Coord x, Coord y)
 	    }
 	  break;
 
+	  /* all physical connections */
+	case F_Connection:
+	  if (SelectByFlag (CONNECTEDFLAG, false))
+	    {
+              Draw ();
+	      IncrementUndoSerialNumber ();
+	      SetChangedFlag (true);
+	    }
+	  break;
+
 	default:
 	  AFAIL (unselect);
 	  break;
diff --git a/src/const.h b/src/const.h
index 7d732e8..98cf03c 100644
--- a/src/const.h
+++ b/src/const.h
@@ -181,39 +181,40 @@ pad.  Primarily used for pads used as fiducials.
 @end table
 %end-doc */
 
-#define	NOFLAG			0x0000
-#define	PINFLAG			0x0001	/* is a pin */
-#define	VIAFLAG			0x0002	/* is a via */
-#define	FOUNDFLAG		0x0004	/* used by 'FindConnection()' */
-#define HOLEFLAG		0x0008	/* pin or via is only a hole */
-#define NOPASTEFLAG		0x0008  /* pad should not receive
-					   solderpaste.  This is to
-					   support fiducials */
-#define RATFLAG                 0x0010	/* indicates line is a rat line */
-#define PININPOLYFLAG           0x0010	/* pin found inside poly - same as */
+#define	NOFLAG			  0x0000
+#define	PINFLAG			  0x0001	/* is a pin */
+#define	VIAFLAG			  0x0002	/* is a via */
+#define	FOUNDFLAG		  0x0004	/* used by 'FindConnection()' */
+#define HOLEFLAG		  0x0008	/* pin or via is only a hole */
+#define NOPASTEFLAG		  0x0008	/* pad should not receive
+						   solderpaste.  This is to
+						   support fiducials */
+#define RATFLAG                   0x0010	/* indicates line is a rat line */
+#define PININPOLYFLAG             0x0010	/* pin found inside poly - same as */
 						/* rat line since not used on lines */
-#define CLEARPOLYFLAG           0x0010	/* pins/vias clear these polygons */
-#define HIDENAMEFLAG		0x0010	/* hide the element name */
-#define	DISPLAYNAMEFLAG		0x0020	/* display the names of pins/pads */
-					/* of an element */
-#define CLEARLINEFLAG		0x0020	/* line doesn't touch polygons */
-#define FULLPOLYFLAG            0x0020	/* full polygon is drawn (i.e. all parts instead of only the biggest one) */
-#define	SELECTEDFLAG		0x0040	/* object has been selected */
-#define	ONSOLDERFLAG		0x0080	/* element is on bottom side */
-#define AUTOFLAG		0x0080	/* line/via created by auto-router */
-#define	SQUAREFLAG		0x0100	/* pin is square, not round */
-#define RUBBERENDFLAG		0x0200	/* indicates one end already rubber */
-					/* banding same as warn flag */
-					/* since pins/pads won't use it */
-#define WARNFLAG		0x0200	/* Warning for pin/via/pad */
-#define USETHERMALFLAG		0x0400	/* draw pin, via with thermal fingers */
-#define ONSILKFLAG              0x0400	/* old files use this to indicate silk */
-#define OCTAGONFLAG		0x0800	/* draw pin/via as octagon instead of round */
-#define DRCFLAG			0x1000	/* flag like FOUND flag for DRC checking */
-#define LOCKFLAG                0x2000	/* object locked in place */
-#define EDGE2FLAG               0x4000	/* Padr.Point2 is closer to outside edge */
-					/* also pinout text for pins is vertical */
-#define VISITFLAG		0x8000  /* marker to avoid re-visiting an object */
+#define CLEARPOLYFLAG             0x0010	/* pins/vias clear these polygons */
+#define HIDENAMEFLAG		  0x0010	/* hide the element name */
+#define	DISPLAYNAMEFLAG		  0x0020	/* display the names of pins/pads */
+						/* of an element */
+#define CLEARLINEFLAG		  0x0020	/* line doesn't touch polygons */
+#define FULLPOLYFLAG              0x0020	/* full polygon is drawn (i.e. all parts instead of only the biggest one) */
+#define	SELECTEDFLAG		  0x0040	/* object has been selected */
+#define	ONSOLDERFLAG		  0x0080	/* element is on bottom side */
+#define AUTOFLAG		  0x0080	/* line/via created by auto-router */
+#define	SQUAREFLAG		  0x0100	/* pin is square, not round */
+#define RUBBERENDFLAG		  0x0200	/* indicates one end already rubber */
+						/* banding same as warn flag */
+						/* since pins/pads won't use it */
+#define WARNFLAG		  0x0200	/* Warning for pin/via/pad */
+#define USETHERMALFLAG		  0x0400	/* draw pin, via with thermal fingers */
+#define ONSILKFLAG                0x0400	/* old files use this to indicate silk */
+#define OCTAGONFLAG		  0x0800	/* draw pin/via as octagon instead of round */
+#define DRCFLAG			  0x1000	/* flag like FOUND flag for DRC checking */
+#define LOCKFLAG                  0x2000	/* object locked in place */
+#define EDGE2FLAG                 0x4000	/* Padr.Point2 is closer to outside edge */
+						/* also pinout text for pins is vertical */
+#define VISITFLAG		  0x8000	/* marker to avoid re-visiting an object */
+#define	CONNECTEDFLAG		0x010000	/* flag like FOUND flag, but used to identify physically connected objects (not rats) */
 /* ---------------------------------------------------------------------------
  * PCB flags
  */
diff --git a/src/create.c b/src/create.c
index 992c49e..8b5c2b9 100644
--- a/src/create.c
+++ b/src/create.c
@@ -105,6 +105,7 @@ pcb_colors_from_settings (PCBType *ptr)
 
   /* copy default settings */
   ptr->ConnectedColor = Settings.ConnectedColor;
+  ptr->FoundColor = Settings.FoundColor;
   ptr->ElementColor = Settings.ElementColor;
   ptr->RatColor = Settings.RatColor;
   ptr->InvisibleObjectsColor = Settings.InvisibleObjectsColor;
diff --git a/src/draw.c b/src/draw.c
index 619ec3a..a682f9d 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -85,16 +85,16 @@ static void DrawEMark (ElementType *, Coord, Coord, bool);
 static void DrawRats (const BoxType *);
 
 static void
-set_object_color (AnyObjectType *obj,
-                  char *warn_color, char *selected_color,
-                  char *found_color, char *normal_color)
+set_object_color (AnyObjectType *obj, char *warn_color, char *selected_color,
+                  char *connected_color, char *found_color, char *normal_color)
 {
   char *color;
 
-  if      (warn_color     != NULL && TEST_FLAG (WARNFLAG,     obj)) color = warn_color;
-  else if (selected_color != NULL && TEST_FLAG (SELECTEDFLAG, obj)) color = selected_color;
-  else if (found_color    != NULL && TEST_FLAG (FOUNDFLAG,    obj)) color = found_color;
-  else                                                              color = normal_color;
+  if      (warn_color      != NULL && TEST_FLAG (WARNFLAG,      obj)) color = warn_color;
+  else if (selected_color  != NULL && TEST_FLAG (SELECTEDFLAG,  obj)) color = selected_color;
+  else if (connected_color != NULL && TEST_FLAG (CONNECTEDFLAG, obj)) color = connected_color;
+  else if (found_color     != NULL && TEST_FLAG (FOUNDFLAG,     obj)) color = found_color;
+  else                                                                color = normal_color;
 
   gui->graphics->set_color (Output.fgGC, color);
 }
@@ -102,7 +102,7 @@ set_object_color (AnyObjectType *obj,
 static void
 set_layer_object_color (LayerType *layer, AnyObjectType *obj)
 {
-  set_object_color (obj, NULL, layer->SelectedColor, PCB->ConnectedColor, layer->Color);
+  set_object_color (obj, NULL, layer->SelectedColor, PCB->ConnectedColor, PCB->FoundColor, layer->Color);
 }
 
 /*---------------------------------------------------------------------------
@@ -203,7 +203,7 @@ draw_pin (PinType *pin, bool draw_hole)
   else
     set_object_color ((AnyObjectType *)pin,
                       PCB->WarnColor, PCB->PinSelectedColor,
-                      PCB->ConnectedColor, PCB->PinColor);
+                      PCB->ConnectedColor, PCB->FoundColor, PCB->PinColor);
 
   _draw_pv (pin, draw_hole);
 }
@@ -223,7 +223,7 @@ draw_via (PinType *via, bool draw_hole)
   else
     set_object_color ((AnyObjectType *)via,
                       PCB->WarnColor, PCB->ViaSelectedColor,
-                      PCB->ConnectedColor, PCB->ViaColor);
+                      PCB->ConnectedColor, PCB->FoundColor, PCB->ViaColor);
 
   _draw_pv (via, draw_hole);
 }
@@ -297,7 +297,7 @@ draw_pad (PadType *pad)
     gui->graphics->set_color (Output.fgGC, PCB->PinColor);
   else
     set_object_color ((AnyObjectType *)pad, PCB->WarnColor,
-                      PCB->PinSelectedColor, PCB->ConnectedColor,
+                      PCB->PinSelectedColor, PCB->ConnectedColor, PCB->FoundColor,
                       FRONT (pad) ? PCB->PinColor : PCB->InvisibleObjectsColor);
 
   _draw_pad (Output.fgGC, pad, false, false);
@@ -402,7 +402,7 @@ hole_callback (const BoxType * b, void *cl)
     {
       set_object_color ((AnyObjectType *) pv,
                         PCB->WarnColor, PCB->ViaSelectedColor,
-                        NULL, Settings.BlackColor);
+                        NULL, NULL, Settings.BlackColor);
 
       gui->graphics->set_line_cap (Output.fgGC, Round_Cap);
       gui->graphics->set_line_width (Output.fgGC, 0);
@@ -443,7 +443,7 @@ rat_callback (const BoxType * b, void *cl)
   RatType *rat = (RatType *)b;
 
   set_object_color ((AnyObjectType *) rat, NULL, PCB->RatSelectedColor,
-                    PCB->ConnectedColor, PCB->RatColor);
+                    PCB->ConnectedColor, PCB->FoundColor, PCB->RatColor);
 
   if (Settings.RatThickness < 100)
     rat->Thickness = pixel_slop * Settings.RatThickness;
diff --git a/src/global.h b/src/global.h
index 7b966dc..91cb74a 100644
--- a/src/global.h
+++ b/src/global.h
@@ -505,7 +505,7 @@ typedef struct PCBType
     *InvisibleObjectsColor,
     *InvisibleMarkColor,
     *ElementSelectedColor,
-    *RatSelectedColor, *ConnectedColor, *WarnColor, *MaskColor;
+    *RatSelectedColor, *ConnectedColor, *FoundColor, *WarnColor, *MaskColor;
   long CursorX,			/* cursor position as saved with layout */
     CursorY, Clipping;
   Coord Bloat,			/* drc sizes saved with layout */
@@ -636,6 +636,7 @@ typedef struct			/* some resources... */
     *ElementSelectedColor,
     *RatSelectedColor,
     *ConnectedColor,
+    *FoundColor,
     *OffLimitColor,
     *GridColor,
     *LayerColor[MAX_LAYER],
diff --git a/src/gpcb-menu.res.in b/src/gpcb-menu.res.in
index f28edff..47bee40 100644
--- a/src/gpcb-menu.res.in
+++ b/src/gpcb-menu.res.in
@@ -233,9 +233,11 @@ MainMenu =
 #
   {"Select" m=l
    {"Select all visible" Select(All)}
+   {"Select all found" Select(Found)}
    {"Select all connected" Select(Connection)}
    -
    {"Unselect all" Unselect(All)}
+   {"Unselect all found" Unselect(Found)}
    {"Unselect all connected" Unselect(Connection)}
    -
    {"Select by name"
diff --git a/src/main.c b/src/main.c
index 3ab4d56..1939b01 100644
--- a/src/main.c
+++ b/src/main.c
@@ -765,7 +765,17 @@ Color to indicate connections. Default: @samp{#00ff00}
 %end-doc
 */
   COLOR (ConnectedColor, "#00ff00", "connected-color",
-	 "color to indicate connections"),
+	 "color to indicate physically connected objects"),
+
+/* %start-doc options "3 Colors"
+@ftable @code
+@item --connected-color <string>
+Color to indicate connections. Default: @samp{#00ff00}
+@end ftable
+%end-doc
+*/
+  COLOR (FoundColor, "#ff00ff", "found-color",
+	 "color to indicate logically connected objects"),
 
 /* %start-doc options "3 Colors"
 @ftable @code
diff --git a/src/pcb-menu.res.in b/src/pcb-menu.res.in
index 84c4a45..e37bd7c 100644
--- a/src/pcb-menu.res.in
+++ b/src/pcb-menu.res.in
@@ -219,9 +219,11 @@ MainMenu =
 
   {Select
    {"Select all visible objects" Select(All)}
+   {"Select all found objects" Select(Found)}
    {"Select all connected objects" Select(Connection)}
    -
    {"Unselect all objects" Unselect(All)}
+   {"unselect all found objects" Unselect(Found)}
    {"unselect all connected objects" Unselect(Connection)}
    -
    {"Select by name" foreground=grey50 sensitive=false}
diff --git a/src/strflags.c b/src/strflags.c
index 3699c53..f29da5b 100644
--- a/src/strflags.c
+++ b/src/strflags.c
@@ -108,7 +108,8 @@ static FlagBitsType object_flagbits[] = {
   { LOCKFLAG, N ("lock"), ALL_TYPES },
   { EDGE2FLAG, N ("edge2"), ALL_TYPES },
   { FULLPOLYFLAG, N ("fullpoly"), POLYGON_TYPE},
-  { NOPASTEFLAG, N ("nopaste"), PAD_TYPE }
+  { NOPASTEFLAG, N ("nopaste"), PAD_TYPE },
+  { CONNECTEDFLAG, N ("connected"), ALL_TYPES }
 };
 
 static FlagBitsType pcb_flagbits[] = {
diff --git a/src/undo.h b/src/undo.h
index f415c3c..c52b051 100644
--- a/src/undo.h
+++ b/src/undo.h
@@ -33,7 +33,7 @@
 #include "global.h"
 
 #define DRAW_FLAGS	(RATFLAG | SELECTEDFLAG | SQUAREFLAG \
-			| HIDENAMEFLAG | HOLEFLAG | OCTAGONFLAG | FOUNDFLAG | CLEARLINEFLAG)
+			| HIDENAMEFLAG | HOLEFLAG | OCTAGONFLAG | CONNECTEDFLAG | FOUNDFLAG | CLEARLINEFLAG)
 
 											/* different layers */
