Bottom: 4b5fd3415a42d90de80e6225aa50dc8a2e59c6eb
Top:    a1708f70fcd3fd8c8c7896495537f6484fb325f6
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-11-11 15:31:56 +0000

We can just delete kicked out holes

Since we don't keep holes from broken contours, if a contour is
kicked out, we know it is destined for the bin.


---

diff --git a/src/polygon1.c b/src/polygon1.c
index 3b8c201..14437e7 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -1303,6 +1303,7 @@ find_inside (const BoxType *b, void *cl)
   if (check->Flags.orient == PLF_DIR) {
     return 0;
   }
+
   if (poly_ContourInContour (info->want_inside, check)) {
     info->result = check;
     longjmp (info->jb, 1);
@@ -1411,7 +1412,8 @@ InsertHoles (jmp_buf * e, POLYAREA * dest, PLINE ** src)
 	}
       else
 	{
-          /* Need to check if this new hole means we need to kick out any old ones for reprocessing */
+          /* Need to check if this new hole means we need to kick out any old
+           * ones for deletion */
           while (1) {
             struct find_inside_info info;
             PLINE *prev;
@@ -1439,10 +1441,7 @@ InsertHoles (jmp_buf * e, POLYAREA * dest, PLINE ** src)
 
             /* Remove hole from the contour */
             remove_contour (pa_info->pa, prev, info.result, TRUE);
-
-            /* Add hole as the next on the list to be processed in this very function */
-            info.result->next = *src;
-            *src = info.result;
+            poly_DelContour (&info.result);
           }
           /* End check for kicked out holes */
