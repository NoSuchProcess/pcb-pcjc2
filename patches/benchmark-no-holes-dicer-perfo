Bottom: a468b155c60a0eba79eca973c9ab83bed4ccbcdc
Top:    4001540e99af3bf9252d3594f97372ae58aaf9df
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-11-03 22:04:34 +0000

Benchmark no-holes dicer performance


---

diff --git a/src/hid/common/draw_helpers.c b/src/hid/common/draw_helpers.c
index ded1bc8..80f3f10 100644
--- a/src/hid/common/draw_helpers.c
+++ b/src/hid/common/draw_helpers.c
@@ -70,6 +70,8 @@ void common_fill_pcb_polygon (hidGC gc, PolygonType *poly,
             we are dicing for every case. Some GUIs
             rely on this, and need their flags fixing. */
 
+  NoHolesPolygonDicer (poly, clip_box, fill_contour_cb, gc);
+#if 0
   if (!poly->NoHolesValid)
     {
       ComputeNoHoles (poly);
@@ -81,6 +83,7 @@ void common_fill_pcb_polygon (hidGC gc, PolygonType *poly,
       for (pl = poly->NoHoles; pl != NULL; pl = pl->next)
         fill_contour (gc, pl);
     }
+#endif
 
   /* Draw other parts of the polygon if fullpoly flag is set */
   /* NB: No "NoHoles" cache for these */
diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index 3a9afe7..feed8b7 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -1487,6 +1487,10 @@ ghid_draw_everything (BoxTypePtr drawn_area)
   struct cyl_info cyl_info;
   int reverse_layers;
   int save_show_solder;
+  int solder_group;
+  int component_group;
+  int min_phys_group;
+  int max_phys_group;
 
   extern char *current_color;
   extern Boolean Gathering;
@@ -1510,19 +1514,23 @@ ghid_draw_everything (BoxTypePtr drawn_area)
   if (!global_view_2d && save_show_solder)
     reverse_layers = !reverse_layers;
 
+  solder_group = GetLayerGroupNumberByNumber (max_layer + SOLDER_LAYER);
+  component_group = GetLayerGroupNumberByNumber (max_layer + COMPONENT_LAYER);
+
+  min_phys_group = MIN (solder_group, component_group);
+  max_phys_group = MAX (solder_group, component_group);
+
   memset (do_group, 0, sizeof (do_group));
   for (ngroups = 0, i = 0; i < max_layer; i++) {
-    LayerType *l;
     int group;
     int orderi;
 
     orderi = reverse_layers ? max_layer - i - 1 : i;
 
     // Draw in numerical order when in 3D view
-    l = global_view_2d ? LAYER_ON_STACK (i) : LAYER_PTR (orderi);
-    group = GetLayerGroupNumberByNumber (global_view_2d ? LayerStack[i] : orderi);
+    group = global_view_2d ? GetLayerGroupNumberByNumber (LayerStack[i]) : orderi;
 
-    if (/*l->On && */!do_group[group]) {
+    if (!do_group[group]) {
       do_group[group] = 1;
       drawn_groups[ngroups++] = group;
     }
@@ -1547,7 +1555,9 @@ ghid_draw_everything (BoxTypePtr drawn_area)
     DrawLayerGroup (drawn_groups [i], drawn_area);
 
 #if 1
-    if (!global_view_2d && i > 0) {
+    if (!global_view_2d &&
+        drawn_groups[i] > min_phys_group &&
+        drawn_groups[i] <= max_phys_group) {
       cyl_info.from_layer = drawn_groups[i];
       cyl_info.to_layer = drawn_groups[i - 1];
       cyl_info.scale = gport->zoom;
diff --git a/src/hid/ps/ps.c b/src/hid/ps/ps.c
index 0310e1d..0f1742f 100644
--- a/src/hid/ps/ps.c
+++ b/src/hid/ps/ps.c
@@ -9,6 +9,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <assert.h>
+#include <time.h>
 
 #include "global.h"
 #include "data.h"
@@ -311,6 +312,8 @@ ps_hid_export_to_file (FILE * the_file, HID_Attr_Val * options)
   int i;
   static int saved_layer_stack[MAX_LAYER];
   FlagType save_thindraw;
+  clock_t start, end;
+  double elapsed;
 
   save_thindraw = PCB->Flags;
   CLEAR_FLAG(THINDRAWFLAG, PCB);
@@ -403,6 +406,8 @@ ps_hid_export_to_file (FILE * the_file, HID_Attr_Val * options)
   region.X2 = PCB->MaxWidth;
   region.Y2 = PCB->MaxHeight;
 
+  start = clock ();
+
   if (! multi_file)
     {
       pagecount = 1;
@@ -422,6 +427,10 @@ ps_hid_export_to_file (FILE * the_file, HID_Attr_Val * options)
   lastgroup = -1;
   hid_expose_callback (&ps_hid, &region, 0);
 
+  end = clock ();
+  elapsed = ((double) (end - start)) / CLOCKS_PER_SEC;
+  printf ("Printing file took %f\n", elapsed);
+
   if (f)
     fprintf (f, "showpage\n");
