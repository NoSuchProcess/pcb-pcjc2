Bottom: 2b7ebf1f1a64fdb9840f7b2f598c7c63843c4c1a
Top:    1a8b8742657e109da87eac19858745e3ae471ecd
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-07-23 18:30:50 +0100

Try snapping to element marks first, as they are only a weak snap.

Because the element mark is never chosen in preference to a closer grid
point, we should try snapping to it first - rather than last.

Currently, we might have a crosshair location where (say), a pad is snapped
to in preference to the nearest grid-point, then the element mark is tested
and snapped to because it is closer than the pad. This can occur even when
there is a closer grid point than the element mark, since the grid snap
(nearest_is_grid == true) has already been discarded by the snap to the pad.


---

diff --git a/src/crosshair.c b/src/crosshair.c
index 62d3da0..b7f3d91 100644
--- a/src/crosshair.c
+++ b/src/crosshair.c
@@ -892,6 +892,17 @@ FitCrosshairIntoGrid (LocationType X, LocationType Y)
   ans = NO_TYPE;
   if (PCB->RatDraw || TEST_FLAG (SNAPPINFLAG, PCB))
     ans = SearchScreenGridSlop (Crosshair.X, Crosshair.Y,
+                                ELEMENT_TYPE, &ptr1, &ptr2, &ptr3);
+
+  if (ans & ELEMENT_TYPE)
+    {
+      ElementType *el = (ElementType *) ptr1;
+      check_snap_object (&snap_data, el->MarkX, el->MarkY, false);
+    }
+
+  ans = NO_TYPE;
+  if (PCB->RatDraw || TEST_FLAG (SNAPPINFLAG, PCB))
+    ans = SearchScreenGridSlop (Crosshair.X, Crosshair.Y,
                                 PAD_TYPE, &ptr1, &ptr2, &ptr3);
 
   /* Avoid self-snapping when moving */
@@ -1003,18 +1014,6 @@ FitCrosshairIntoGrid (LocationType X, LocationType Y)
       check_snap_object (&snap_data, pnt->X, pnt->Y, true);
     }
 
-
-  ans = NO_TYPE;
-  if (PCB->RatDraw || TEST_FLAG (SNAPPINFLAG, PCB))
-    ans = SearchScreenGridSlop (Crosshair.X, Crosshair.Y,
-                                ELEMENT_TYPE, &ptr1, &ptr2, &ptr3);
-
-  if (ans & ELEMENT_TYPE)
-    {
-      ElementType *el = (ElementType *) ptr1;
-      check_snap_object (&snap_data, el->MarkX, el->MarkY, false);
-    }
-
   if (snap_data.x >= 0 && snap_data.y >= 0)
     {
       Crosshair.X = snap_data.x;
