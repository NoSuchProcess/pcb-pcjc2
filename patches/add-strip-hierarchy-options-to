Bottom: 6b78546cbfdf28d134595463c2976a97ae98e5f4
Top:    ed4a7910d88abe8dfed36217a7938efbfaee9688
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-08-13 01:45:54 +0100

Add strip hierarchy options to display refdes without any "..../" prefix










---

diff --git a/src/action.c b/src/action.c
index 5f1c7a1..1ffd57b 100644
--- a/src/action.c
+++ b/src/action.c
@@ -3436,9 +3436,16 @@ ActionRenumber (int argc, char **argv, int x, int y)
       /* If there is no refdes, maybe just spit out a warning */
       if (NAMEONPCB_NAME (element_list[i]))
 	{
+          /* Strip hierarchy */
+          tmps = strrchr (NAMEONPCB_NAME (element_list[i]), '/');
+          if (tmps == NULL)
+	    tmps = strdup (NAMEONPCB_NAME (element_list[i]));
+          else
+            tmps = strdup (tmps + 1);
+
 	  /* figure out the prefix */
-	  tmps = strdup (NAMEONPCB_NAME (element_list[i]));
 	  j = 0;
+
 	  while (tmps[j] && (tmps[j] < '0' || tmps[j] > '9')
 		 && tmps[j] != '?')
 	    j++;
@@ -4801,6 +4808,79 @@ ActionToggleHideName (int argc, char **argv, int x, int y)
 
 /* --------------------------------------------------------------------------- */
 
+static const char togglestriphierarchy_syntax[] =
+  "ToggleStripHierarchy(Object|SelectedElements)";
+
+static const char togglestriphierarchy_help[] =
+  "Toggles the visibility of element names.";
+
+/* %start-doc actions ToggleStripHierarchy
+
+%end-doc */
+
+static int
+ActionToggleStripHierarchy (int argc, char **argv, int x, int y)
+{
+  char *function = ARG (0);
+  if (function && PCB->ElementOn)
+    {
+      HideCrosshair (true);
+      switch (GetFunctionID (function))
+	{
+	case F_Object:
+	  {
+	    int type;
+	    void *ptr1, *ptr2, *ptr3;
+
+	    gui->get_coords ("Select an Object", &x, &y);
+	    if ((type = SearchScreen (x, y, ELEMENT_TYPE,
+				      &ptr1, &ptr2, &ptr3)) != NO_TYPE)
+	      {
+		AddObjectToFlagUndoList (type, ptr1, ptr2, ptr3);
+		EraseElementName ((ElementTypePtr) ptr2);
+		TOGGLE_FLAG (HIDENAMEFLAG, (ElementTypePtr) ptr2);
+/* TODO: 		   SetTextBoundingBox (&PCB->Font, new); */
+		DrawElementName ((ElementTypePtr) ptr2, 0);
+		Draw ();
+		IncrementUndoSerialNumber ();
+	      }
+	    break;
+	  }
+	case F_SelectedElements:
+	case F_Selected:
+	  {
+	    bool changed = false;
+	    ELEMENT_LOOP (PCB->Data);
+	    {
+	      if ((TEST_FLAG (SELECTEDFLAG, element) ||
+		   TEST_FLAG (SELECTEDFLAG,
+			      &NAMEONPCB_TEXT (element)))
+		  && (FRONT (element) || PCB->InvisibleObjectsOn))
+		{
+		  AddObjectToFlagUndoList (ELEMENT_TYPE, element,
+					   element, element);
+		  EraseElementName (element);
+		  TOGGLE_FLAG (STRIPHIERFLAG, element);
+/* TODO: 		   SetTextBoundingBox (&PCB->Font, new); */
+		  DrawElementName (element, 0);
+		  changed = true;
+		}
+	    }
+	    END_LOOP;
+	    if (changed)
+	      {
+		Draw ();
+		IncrementUndoSerialNumber ();
+	      }
+	  }
+	}
+      RestoreCrosshair (true);
+    }
+  return 0;
+}
+
+/* --------------------------------------------------------------------------- */
+
 static const char changejoin_syntax[] =
   "ChangeJoin(ToggleObject|SelectedLines|SelectedArcs|Selected)";
 
@@ -7975,6 +8055,9 @@ HID_Action action_action_list[] = {
   {"ToggleHideName", 0, ActionToggleHideName,
    togglehidename_help, togglehidename_syntax}
   ,
+  {"ToggleStripHierarchy", 0, ActionToggleStripHierarchy,
+   togglestriphierarchy_help, togglestriphierarchy_syntax}
+  ,
   {"Undo", 0, ActionUndo,
    undo_help, undo_syntax}
   ,
diff --git a/src/const.h b/src/const.h
index 676a6f0..684d237 100644
--- a/src/const.h
+++ b/src/const.h
@@ -170,6 +170,8 @@ Marker used internally to avoid revisiting an object.
 @item 0x10000 nopaste
 For pads, set to prevent a solderpaste stencil opening for the
 pad.  Primarily used for pads used as fiducials.
+@item 0x20000 striphierarchy
+Strip hierarchy when displaying this element's refdes.
 @end table
 %end-doc */
 
@@ -206,6 +208,7 @@ pad.  Primarily used for pads used as fiducials.
 #define EDGE2FLAG               0x4000	/* Padr.Point2 is closer to outside edge */
 					/* also pinout text for pins is vertical */
 #define VISITFLAG		0x8000  /* marker to avoid re-visiting an object */
+#define STRIPHIERFLAG 0x20000 /* Strip hierarchy when displaying names */
 /* ---------------------------------------------------------------------------
  * PCB flags
  */
diff --git a/src/draw.c b/src/draw.c
index a27c0dc..9916307 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -2061,6 +2061,32 @@ DrawElement (ElementTypePtr Element, int unused)
   DrawElementPinsAndPads (Element, unused);
 }
 
+static void
+DrawStrippedText (ElementTypePtr Element, int min_width)
+{
+  TextType text;
+  TextType *text_ptr;
+  char *end_string;
+
+  if (TEST_FLAG (NAMEONPCBFLAG, PCB) &&
+      TEST_FLAG (STRIPHIERFLAG, Element))
+    {
+      text_ptr = &text;
+      memcpy (text_ptr, &ELEMENT_TEXT (PCB, Element), sizeof (TextType));
+
+      /* Strip hierarchy */
+      end_string = strrchr (text.TextString, '/');
+      if (end_string != NULL)
+        text.TextString = end_string + 1;
+    }
+  else
+    {
+      text_ptr = &ELEMENT_TEXT (PCB, Element);
+    }
+
+  DrawTextLowLevel (text_ptr, min_width);
+}
+
 /* ---------------------------------------------------------------------------
  * draws the name of an element
  */
@@ -2079,7 +2105,7 @@ DrawElementName (ElementTypePtr Element, int unused)
     gui->set_color (Output.fgGC, PCB->ElementColor);
   else
     gui->set_color (Output.fgGC, PCB->InvisibleObjectsColor);
-  DrawTextLowLevel (&ELEMENT_TEXT (PCB, Element), PCB->minSlk);
+  DrawStrippedText (Element, PCB->minSlk);
 }
 
 /* ---------------------------------------------------------------------------
@@ -2285,7 +2311,7 @@ EraseElement (ElementTypePtr Element)
   }
   END_LOOP;
   if (!TEST_FLAG (HIDENAMEFLAG, Element))
-    DrawTextLowLevel (&ELEMENT_TEXT (PCB, Element), PCB->minSlk);
+    DrawStrippedText (Element, PCB->minSlk);
   EraseElementPinsAndPads (Element);
   Erasing--;
 }
@@ -2323,7 +2349,7 @@ EraseElementName (ElementTypePtr Element)
   if (TEST_FLAG (HIDENAMEFLAG, Element))
     return;
   Erasing++;
-  DrawTextLowLevel (&ELEMENT_TEXT (PCB, Element), PCB->minSlk);
+  DrawStrippedText (Element, PCB->minSlk);
   Erasing--;
 }
 
diff --git a/src/strflags.c b/src/strflags.c
index ac1fdcc..b4b2221 100644
--- a/src/strflags.c
+++ b/src/strflags.c
@@ -98,6 +98,7 @@ static FlagBitsType object_flagbits[] = {
   { CLEARPOLYFLAG, N ("clearpoly"), POLYGON_TYPE },
   { HIDENAMEFLAG, N ("hidename"), ELEMENT_TYPE },
   { DISPLAYNAMEFLAG, N ("showname"), ELEMENT_TYPE },
+  { STRIPHIERFLAG, N ("striphierarchy"), ELEMENT_TYPE },
   { CLEARLINEFLAG, N ("clearline"), LINE_TYPE | ARC_TYPE | TEXT_TYPE },
   { SELECTEDFLAG, N ("selected"), ALL_TYPES },
   { ONSOLDERFLAG, N ("onsolder"), ELEMENT_TYPE | PAD_TYPE },
