Bottom: 85c722d3d705bca211ce5561b3547618e6b0d7c4
Top:    1be5d89454a62508e5bf8fd46b7244e4fc0e666d
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-02-11 15:31:32 +0000

Manually count the vertices in a contour, report if the polygon code is lying









---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index d109e1f..cc99da0 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -701,8 +701,22 @@ hidgl_fill_pcb_polygon (PolygonType *poly, BoxType *clip_box, double scale)
   /* This gives an upper bound on the amount of storage required */
   piece = poly->Clipped;
 //  do {
-    for (contour = piece->contours; contour != NULL; contour = contour->next)
+    for (contour = piece->contours; contour != NULL; contour = contour->next) {
+      int contour_count_manual = 0;
+      vnode = &contour->head;
+      do {
+        contour_count_manual++;
+      } while ((vnode = vnode->next) != &contour->head);
+
+      if (contour_count_manual != contour->Count) {
+        fprintf (stderr, "CRAPPY POLYGON ROUTINES MISCOUNTED NODES, FIXING\n");
+        fprintf (stderr, "Manual count was %i, contour claimed %i\n",
+                 contour_count_manual, contour->Count);
+        contour->Count = contour_count_manual;
+      }
+
       vertex_count += contour->Count;
+    }
 //  } while ((piece = piece->f) != poly->Clipped);
 
   vertices = malloc (sizeof(GLdouble) * vertex_count * 3);
