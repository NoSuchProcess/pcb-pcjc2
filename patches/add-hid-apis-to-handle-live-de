Bottom: 682fd858497b379d36f503b41d6d16454d86b9f9
Top:    cc4dfb81d35375390026e339ece4d68dc6621927
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-29 16:46:36 +0100

Add HID apis to handle live debug drawing from the core

It is envisaved that this API should ONLY be used for debugging, not
presenting a user-interface. In general, the GUIs may have their own
special requirements for drawing the board, and this API is not meant
to allow the core to augment or present user-visible drawing. This is
reflected in the API naming.

Request permission for debug drawing

HID *ddraw = gui->request_debug_draw (void);

Returns a HID pointer which should be used rather than the global
gui-> for making drawing calls. If the return value is NULL, then
permission has been denied, and the debug drawing must continue.


Flush pending drawing to the screen

void ddraw->flush_debug_draw (void);

May be implemented as a NOOP if the GUI has chosen to send the debug
drawing directly to the screen.


When finished, the user must inform the GUI to clean up resources:

ddraw->finish_debug_draw (void);

Any remaining rendering will be flushed to the screen.


---

diff --git a/src/hid.h b/src/hid.h
index 2b9ca40..08ec71f 100644
--- a/src/hid.h
+++ b/src/hid.h
@@ -230,9 +230,10 @@ typedef enum
     int (*throw_drc_dialog) (void);
   } HID_DRC_GUI;
 
+  typedef struct hid_st HID;
 
 /* This is the main HID structure.  */
-  typedef struct
+  struct hid_st
   {
     /* The size of this structure.  We use this as a compatibility
        check; a HID built with a different hid.h than we're expecting
@@ -543,7 +544,11 @@ typedef enum
 
     void (*edit_attributes) (char *owner, AttributeListType *attrlist_);
 
-  } HID;
+    HID *(*request_debug_draw) (void);
+    void (*flush_debug_draw)   (void);
+    void (*finish_debug_draw)  (void);
+
+  };
 
 /* Call this as soon as possible from main().  No other HID calls are
    valid until this is called.  */
diff --git a/src/hid/common/hidnogui.c b/src/hid/common/hidnogui.c
index c146fd2..f9d5949 100644
--- a/src/hid/common/hidnogui.c
+++ b/src/hid/common/hidnogui.c
@@ -427,6 +427,22 @@ nogui_progress (int so_far, int total, const char *message)
   return 0;
 }
 
+static HID *
+nogui_request_debug_draw (void)
+{
+  return NULL;
+}
+
+static void
+nogui_flush_debug_draw (void)
+{
+}
+
+static void
+nogui_finish_debug_draw (void)
+{
+}
+
 HID hid_nogui = {
   sizeof (HID),
   "nogui",
@@ -484,7 +500,10 @@ HID hid_nogui = {
   nogui_beep,
   nogui_progress,
   0 /* nogui_drc_gui */ ,
-  0 /* edit_attributes */
+  0 /* edit_attributes */,
+  nogui_request_debug_draw,
+  nogui_flush_debug_draw,
+  nogui_finish_debug_draw,
 };
 
 #define AD(x) if (!d->x) d->x = s->x
@@ -545,4 +564,7 @@ apply_default_hid (HID * d, HID * s)
   AD (progress);
   AD (drc_gui);
   AD (edit_attributes);
+  AD (request_debug_draw);
+  AD (flush_debug_draw);
+  AD (finish_debug_draw);
 }
