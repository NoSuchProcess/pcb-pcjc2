Bottom: b84aef9032037a18ba053e9b409a9437c4173adb
Top:    f1c21fc6d414125aec1ece5bfc10a53b31d6eb38
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-06 00:45:34 +0100

Don't undraw the crosshair attached object when showing dialogue prompts


---

diff --git a/src/action.c b/src/action.c
index 22e78bd..6b1987c 100644
--- a/src/action.c
+++ b/src/action.c
@@ -1871,7 +1871,6 @@ ActionDRCheck (int argc, char **argv, int x, int y)
 	       PCB->minDrill / 100, PCB->minDrill % 100,
 	       PCB->minRing / 100, PCB->minRing % 100);
     }
-  HideCrosshair ();
   count = DRCAll ();
   if (gui->drc_gui == NULL || gui->drc_gui->log_drc_overview)
     {
@@ -1882,7 +1881,6 @@ ActionDRCheck (int argc, char **argv, int x, int y)
       else
 	Message (_("Aborted DRC after %d design rule errors.\n"), -count);
     }
-  RestoreCrosshair ();
   return 0;
 }
 
@@ -5976,7 +5974,6 @@ ActionNew (int argc, char **argv, int x, int y)
 {
   char *name = ARG (0);
 
-  HideCrosshair ();
   if (!PCB->Changed || gui->confirm_dialog (_("OK to clear layout data?"), 0))
     {
       if (name)
@@ -5985,11 +5982,9 @@ ActionNew (int argc, char **argv, int x, int y)
 	name = gui->prompt_for (_("Enter the layout name:"), "");
 
       if (!name)
-	{
-	  RestoreCrosshair ();
-	  return 1;
-	}
+        return 1;
 
+      HideCrosshair ();
       /* do emergency saving
        * clear the old struct and allocate memory for the new one
        */
@@ -6014,7 +6009,6 @@ ActionNew (int argc, char **argv, int x, int y)
       RestoreCrosshair ();
       return 0;
     }
-  RestoreCrosshair ();
   return 1;
 }
 
diff --git a/src/buffer.c b/src/buffer.c
index 908b21e..43d5c2b 100644
--- a/src/buffer.c
+++ b/src/buffer.c
@@ -1452,13 +1452,12 @@ ActionFreeRotateBuffer(int argc, char **argv, int x, int y)
 {
   char *angle_s;
 
-  HideCrosshair ();
-
   if (argc < 1)
     angle_s = gui->prompt_for ("Enter Rotation (degrees, CCW):", "0");
   else
     angle_s = argv[0];
 
+  HideCrosshair ();
   FreeRotateBuffer(PASTEBUFFER, strtod(angle_s, 0));
   RestoreCrosshair ();
   return 0;
diff --git a/src/hid/gtk/gui-command-window.c b/src/hid/gtk/gui-command-window.c
index 28877fd..b08836e 100644
--- a/src/hid/gtk/gui-command-window.c
+++ b/src/hid/gtk/gui-command-window.c
@@ -211,9 +211,7 @@ command_entry_activate_cb (GtkWidget * widget, gpointer data)
 
   if (ghidgui->use_command_window)
     {
-      HideCrosshair ();
       hid_parse_command (command);
-      RestoreCrosshair ();
       g_free (command);
     }
   else
@@ -462,7 +460,6 @@ ghid_handle_user_command (gboolean raise)
     ghid_command_window_show (raise);
   else
     {
-      HideCrosshair ();
       command = ghid_command_entry_get (_("Enter command:"),
 					(Settings.SaveLastCommand && previous) ? previous : (gchar *)"");
       if (command != NULL)
@@ -479,7 +476,6 @@ ghid_handle_user_command (gboolean raise)
 	  hid_parse_command (command);
 	  g_free (command);
 	}
-      RestoreCrosshair ();
     }
   ghid_window_set_name_label (PCB->Name);
   ghid_set_status_line_label ();
diff --git a/src/report.c b/src/report.c
index c0a4ab0..6adf368 100644
--- a/src/report.c
+++ b/src/report.c
@@ -515,11 +515,9 @@ ReportDialog (int argc, char **argv, int x, int y)
       Message (_("Nothing found to report on\n"));
       return 1;
     }
-  HideCrosshair ();
   /* create dialog box */
   gui->report_dialog ("Report", &report[0]);
 
-  RestoreCrosshair ();
   return 0;
 }
 
@@ -560,9 +558,7 @@ ReportFoundPins (int argc, char **argv, int x, int y)
   }
   END_LOOP;
 
-  HideCrosshair ();
   gui->report_dialog ("Report", list.Data);
-  RestoreCrosshair ();
   return 0;
 }
 
@@ -779,7 +775,6 @@ ReportNetLength (int argc, char **argv, int x, int y)
   END_LOOP;
  got_net_name:
 
-  HideCrosshair ();
   {
     int prec = Settings.grid_units_mm? 4: 2;
     if (netname)
@@ -787,7 +782,6 @@ ReportNetLength (int argc, char **argv, int x, int y)
     else
       gui->log ("Net length: %.*f %s\n", prec, UNIT (length));
   }
-  RestoreCrosshair ();
   return 0;
 }
 /* ---------------------------------------------------------------------------
