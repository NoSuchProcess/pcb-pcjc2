Bottom: 532bf023404f4322819d46ecf1933cbb5822237a
Top:    931edab48525dc659b78519fb0cc63fee9469fab
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-20 16:29:09 +0100

Tidy up pad drawing routines


---

diff --git a/src/crosshair.c b/src/crosshair.c
index 7d9fcb4..a9ed879 100644
--- a/src/crosshair.c
+++ b/src/crosshair.c
@@ -255,30 +255,16 @@ XORDrawElement (ElementTypePtr Element, LocationType DX, LocationType DY)
   /* pads */
   PAD_LOOP (Element);
   {
-    if ((TEST_FLAG (ONSOLDERFLAG, pad) != 0) ==
-	Settings.ShowSolderSide || PCB->InvisibleObjectsOn)
-      {
-	if (pad->Point1.X == pad->Point2.X
-	    || pad->Point1.Y == pad->Point2.Y)
-	  {
-	    int minx, miny, maxx, maxy;
-	    minx = DX + MIN (pad->Point1.X, pad->Point2.X) - pad->Thickness/2;
-	    maxx = DX + MAX (pad->Point1.X, pad->Point2.X) + pad->Thickness/2;
-	    miny = DY + MIN (pad->Point1.Y, pad->Point2.Y) - pad->Thickness/2;
-	    maxy = DY + MAX (pad->Point1.Y, pad->Point2.Y) + pad->Thickness/2;
-	    gui->draw_line (Crosshair.GC, minx, miny, maxx, miny);
-	    gui->draw_line (Crosshair.GC, minx, miny, minx, maxy);
-	    gui->draw_line (Crosshair.GC, maxx, miny, maxx, maxy);
-	    gui->draw_line (Crosshair.GC, minx, maxy, maxx, maxy);
-	  }
-	else
-	  {
-	    /* FIXME: draw outlines, not centerlines.  */
-	    gui->draw_line (Crosshair.GC,
-			    DX + pad->Point1.X, DY + pad->Point1.Y,
-			    DX + pad->Point2.X, DY + pad->Point2.Y);
-	  }
-      }
+    /* Make a copy of the pad structure, moved to the correct position */
+    PadType moved_pad = *pad;
+    moved_pad.Point1.X += DX;
+    moved_pad.Point1.Y += DY;
+    moved_pad.Point2.X += DX;
+    moved_pad.Point2.Y += DY;
+
+    if (PCB->InvisibleObjectsOn ||
+        (TEST_FLAG (ONSOLDERFLAG, &moved_pad) != 0) == Settings.ShowSolderSide)
+      gui->thindraw_pcb_pad (Crosshair.GC, &moved_pad, false, false);
   }
   END_LOOP;
   /* mark */
diff --git a/src/draw.c b/src/draw.c
index 707969a..8d6e0f6 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -1227,9 +1227,6 @@ DrawPinOrViaNameLowLevel (PinTypePtr Ptr)
 static void
 DrawPadLowLevel (hidGC gc, PadTypePtr Pad, bool clear, bool mask)
 {
-  int w = clear ? (mask ? Pad->Mask : Pad->Thickness + Pad->Clearance)
-		: Pad->Thickness;
-
   if (Gathering)
     {
       AddPart (Pad);
@@ -1241,135 +1238,9 @@ DrawPadLowLevel (hidGC gc, PadTypePtr Pad, bool clear, bool mask)
 
   if (TEST_FLAG (THINDRAWFLAG, PCB) ||
       (clear && TEST_FLAG (THINDRAWPOLYFLAG, PCB)))
-    {
-      int x1, y1, x2, y2, t, t2;
-      t = w / 2;
-      t2 = w - t;
-      x1 = Pad->Point1.X;
-      y1 = Pad->Point1.Y;
-      x2 = Pad->Point2.X;
-      y2 = Pad->Point2.Y;
-      if (x1 > x2 || y1 > y2)
-	{
-	  /* this is a silly way to swap the variables */
-	  x1 ^= x2;
-	  x2 ^= x1;
-	  x1 ^= x2;
-	  y1 ^= y2;
-	  y2 ^= y1;
-	  y1 ^= y2;
-	}
-      gui->set_line_cap (gc, Round_Cap);
-      gui->set_line_width (gc, 0);
-      if (TEST_FLAG (SQUAREFLAG, Pad)
-	  && (x1 == x2 || y1 == y2))
-	{
-	  x1 -= t;
-	  y1 -= t;
-	  x2 += t2;
-	  y2 += t2;
-	  gui->draw_line (gc, x1, y1, x1, y2);
-	  gui->draw_line (gc, x1, y2, x2, y2);
-	  gui->draw_line (gc, x2, y2, x2, y1);
-	  gui->draw_line (gc, x2, y1, x1, y1);
-	}
-      else if (TEST_FLAG (SQUAREFLAG, Pad))
-	{
-	  /* slanted square pad */
-	  float tx, ty, theta;
-
-	  theta = atan2 (y2-y1, x2-x1);
-
-	  /* T is a vector half a thickness long, in the direction of
-	     one of the corners.  */
-	  tx = t * cos (theta + M_PI/4) * sqrt(2.0);
-	  ty = t * sin (theta + M_PI/4) * sqrt(2.0);
-
-	  gui->draw_line (gc, x1-tx, y1-ty, x2+ty, y2-tx);
-	  gui->draw_line (gc, x2+ty, y2-tx, x2+tx, y2+ty);
-	  gui->draw_line (gc, x2+tx, y2+ty, x1-ty, y1+tx);
-	  gui->draw_line (gc, x1-ty, y1+tx, x1-tx, y1-ty);
-	}
-      else if (x1 == x2 && y1 == y2)
-	{
-	  gui->draw_arc (gc, x1, y1, w / 2, w / 2, 0, 360);
-	}
-      else if (x1 == x2)
-	{
-	  gui->draw_line (gc, x1 - t, y1, x2 - t, y2);
-	  gui->draw_line (gc, x1 + t2, y1, x2 + t2, y2);
-	  gui->draw_arc (gc, x1, y1, w / 2, w / 2, 0, -180);
-	  gui->draw_arc (gc, x2, y2, w / 2, w / 2, 180, -180);
-	}
-      else if (y1 == y2)
-	{
-	  gui->draw_line (gc, x1, y1 - t, x2, y2 - t);
-	  gui->draw_line (gc, x1, y1 + t2, x2, y2 + t2);
-	  gui->draw_arc (gc, x1, y1, w / 2, w / 2, 90, -180);
-	  gui->draw_arc (gc, x2, y2, w / 2, w / 2, 270, -180);
-	}
-      else
-	{
-	  /* Slanted round-end pads.  */
-	  LocationType dx, dy, ox, oy;
-	  float h;
-
-	  dx = x2 - x1;
-	  dy = y2 - y1;
-	  h = t / sqrt (SQUARE (dx) + SQUARE (dy));
-	  ox = dy * h + 0.5 * SGN (dy);
-	  oy = -(dx * h + 0.5 * SGN (dx));
-
-	  gui->draw_line (gc, x1 + ox, y1 + oy, x2 + ox, y2 + oy);
-
-	  if (abs (ox) >= pixel_slop || abs (oy) >= pixel_slop)
-	    {
-	      LocationType angle = atan2 ((float) dx, (float) dy) * 57.295779;
-	      gui->draw_line (gc, x1 - ox, y1 - oy, x2 - ox, y2 - oy);
-	      gui->draw_arc (gc,
-			     x1, y1, t, t, angle - 180, 180);
-	      gui->draw_arc (gc, x2, y2, t, t, angle, 180);
-	    }
-	}
-    }
-  else if (Pad->Point1.X == Pad->Point2.X
-           && Pad->Point1.Y == Pad->Point2.Y)
-    {
-      if (TEST_FLAG (SQUAREFLAG, Pad))
-        {
-          int l, r, t, b;
-          l = Pad->Point1.X - w / 2;
-          b = Pad->Point1.Y - w / 2;
-          r = l + w;
-          t = b + w;
-          gui->fill_rect (gc, l, b, r, t);
-        }
-      else
-        {
-          gui->fill_circle (gc, Pad->Point1.X, Pad->Point1.Y, w / 2);
-        }
-    }
+    gui->thindraw_pcb_pad (gc, Pad, clear, mask);
   else
-    {
-      gui->set_line_cap (gc,
-                         TEST_FLAG (SQUAREFLAG,
-                                    Pad) ? Square_Cap : Round_Cap);
-      gui->set_line_width (gc, w);
-
-      gui->draw_line (gc,
-                      Pad->Point1.X, Pad->Point1.Y,
-                      Pad->Point2.X, Pad->Point2.Y);
-    }
-#if 0
-  { /* Draw bounding box for test */
-    BoxType *box = &Pad->BoundingBox;
-    gui->set_line_width (gc, 0);
-    gui->draw_line (gc, box->X1, box->Y1, box->X1, box->Y2);
-    gui->draw_line (gc, box->X1, box->Y2, box->X2, box->Y2);
-    gui->draw_line (gc, box->X2, box->Y2, box->X2, box->Y1);
-    gui->draw_line (gc, box->X2, box->Y1, box->X1, box->Y1);
-  }
-#endif
+    gui->fill_pcb_pad (gc, Pad, clear, mask);
 }
 
 /* ---------------------------------------------------------------------------
diff --git a/src/global.h b/src/global.h
index e449a34..0eca83b 100644
--- a/src/global.h
+++ b/src/global.h
@@ -54,6 +54,7 @@
 /* Forward declarations for structures the HIDs need.  */
 typedef struct BoxType BoxType, *BoxTypePtr;
 typedef struct polygon_st PolygonType, *PolygonTypePtr;
+typedef struct pad_st PadType, *PadTypePtr;
 typedef struct drc_violation_st DrcViolationType, *DrcViolationTypePtr;
 typedef struct rtree rtree_t;
 typedef struct AttributeListType AttributeListType, *AttributeListTypePtr;
@@ -310,14 +311,14 @@ typedef struct			/* a rat-line */
   Cardinal group1, group2;	/* the layer group each point is on */
 } RatType, *RatTypePtr;
 
-typedef struct			/* a SMD pad */
+struct pad_st			/* a SMD pad */
 {
   ANYLINEFIELDS;
   BDimension Mask;
   char *Name, *Number;		/* 'Line' */
   void *Element;
   void *Spare;
-} PadType, *PadTypePtr;
+};
 
 typedef struct
 {
diff --git a/src/hid.h b/src/hid.h
index b13e75b..d6f494a 100644
--- a/src/hid.h
+++ b/src/hid.h
@@ -382,6 +382,8 @@ typedef enum
                               const BoxType *clip_box);
     void (*thindraw_pcb_polygon) (hidGC gc_, PolygonType *poly,
                                   const BoxType *clip_box);
+    void (*fill_pcb_pad) (hidGC gc_, PadType *pad, bool clip, bool mask);
+    void (*thindraw_pcb_pad) (hidGC gc_, PadType *pad, bool clip, bool mask);
     void (*fill_rect) (hidGC gc_, int x1_, int y1_, int x2_, int y2_);
 
 
diff --git a/src/hid/batch/batch.c b/src/hid/batch/batch.c
index e6eaf52..99c2220 100644
--- a/src/hid/batch/batch.c
+++ b/src/hid/batch/batch.c
@@ -244,16 +244,6 @@ batch_fill_polygon (hidGC gc, int n_coords, int *x, int *y)
 }
 
 static void
-batch_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
-{
-}
-
-static void
-batch_thindraw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
-{
-}
-
-static void
 batch_fill_rect (hidGC gc, int x1, int y1, int x2, int y2)
 {
 }
@@ -354,6 +344,8 @@ hid_batch_init ()
 {
   memset (&batch_hid, 0, sizeof (HID));
 
+  common_draw_helpers_init (&batch_hid);
+
   batch_hid.struct_size           = sizeof (HID);
   batch_hid.name                  = "batch";
   batch_hid.description           = "Batch-mode GUI for non-interactive use.";
@@ -379,8 +371,6 @@ hid_batch_init ()
   batch_hid.draw_rect             = batch_draw_rect;
   batch_hid.fill_circle           = batch_fill_circle;
   batch_hid.fill_polygon          = batch_fill_polygon;
-  batch_hid.fill_pcb_polygon      = batch_fill_pcb_polygon;
-  batch_hid.thindraw_pcb_polygon  = batch_thindraw_pcb_polygon;
   batch_hid.fill_rect             = batch_fill_rect;
   batch_hid.calibrate             = batch_calibrate;
   batch_hid.shift_is_pressed      = batch_shift_is_pressed;
diff --git a/src/hid/common/draw_helpers.c b/src/hid/common/draw_helpers.c
index b9db654..9de587f 100644
--- a/src/hid/common/draw_helpers.c
+++ b/src/hid/common/draw_helpers.c
@@ -198,3 +198,116 @@ common_thindraw_pcb_polygon (hidGC gc, PolygonType *poly,
   thindraw_contour (gc, poly->Clipped->contours);
   PolygonHoles (poly, clip_box, thindraw_hole_cb, gc);
 }
+
+void
+common_thindraw_pcb_pad (hidGC gc, PadType *pad, bool clear, bool mask)
+{
+  int w = clear ? (mask ? pad->Mask
+                        : pad->Thickness + pad->Clearance)
+                : pad->Thickness;
+  int x1, y1, x2, y2;
+  int t = w / 2;
+  x1 = pad->Point1.X;
+  y1 = pad->Point1.Y;
+  x2 = pad->Point2.X;
+  y2 = pad->Point2.Y;
+  if (x1 > x2 || y1 > y2)
+    {
+      int temp_x = x1;
+      int temp_y = y1;
+      x1 = x2; x2 = temp_x;
+      y1 = y2; y2 = temp_y;
+    }
+  gui->set_line_cap (gc, Round_Cap);
+  gui->set_line_width (gc, 0);
+  if (TEST_FLAG (SQUAREFLAG, pad))
+    {
+      /* slanted square pad */
+      float tx, ty, theta;
+
+      if (x1 == x2 || y1 == y2)
+        theta = 0;
+      else
+        theta = atan2 (y2 - y1, x2 - x1);
+
+      /* T is a vector half a thickness long, in the direction of
+         one of the corners.  */
+      tx = t * cos (theta + M_PI / 4) * sqrt (2.0);
+      ty = t * sin (theta + M_PI / 4) * sqrt (2.0);
+
+      gui->draw_line (gc, x1 - tx, y1 - ty, x2 + ty, y2 - tx);
+      gui->draw_line (gc, x2 + ty, y2 - tx, x2 + tx, y2 + ty);
+      gui->draw_line (gc, x2 + tx, y2 + ty, x1 - ty, y1 + tx);
+      gui->draw_line (gc, x1 - ty, y1 + tx, x1 - tx, y1 - ty);
+    }
+  else if (x1 == x2 && y1 == y2)
+    {
+      gui->draw_arc (gc, x1, y1, t, t, 0, 360);
+    }
+  else
+    {
+      /* Slanted round-end pads.  */
+      LocationType dx, dy, ox, oy;
+      float h;
+
+      dx = x2 - x1;
+      dy = y2 - y1;
+      h = t / sqrt (SQUARE (dx) + SQUARE (dy));
+      ox = dy * h + 0.5 * SGN (dy);
+      oy = -(dx * h + 0.5 * SGN (dx));
+
+      gui->draw_line (gc, x1 + ox, y1 + oy, x2 + ox, y2 + oy);
+
+      if (abs (ox) >= pixel_slop || abs (oy) >= pixel_slop)
+        {
+          LocationType angle = atan2 (dx, dy) * 57.295779;
+          gui->draw_line (gc, x1 - ox, y1 - oy, x2 - ox, y2 - oy);
+          gui->draw_arc (gc, x1, y1, t, t, angle - 180, 180);
+          gui->draw_arc (gc, x2, y2, t, t, angle, 180);
+        }
+    }
+}
+
+void
+common_fill_pcb_pad (hidGC gc, PadType *pad, bool clear, bool mask)
+{
+  int w = clear ? (mask ? pad->Mask
+                        : pad->Thickness + pad->Clearance)
+                : pad->Thickness;
+
+  if (pad->Point1.X == pad->Point2.X &&
+      pad->Point1.Y == pad->Point2.Y)
+    {
+      if (TEST_FLAG (SQUAREFLAG, pad))
+        {
+          int l, r, t, b;
+          l = pad->Point1.X - w / 2;
+          b = pad->Point1.Y - w / 2;
+          r = l + w;
+          t = b + w;
+          gui->fill_rect (gc, l, b, r, t);
+        }
+      else
+        {
+          gui->fill_circle (gc, pad->Point1.X, pad->Point1.Y, w / 2);
+        }
+    }
+  else
+    {
+      gui->set_line_cap (gc, TEST_FLAG (SQUAREFLAG, pad) ?
+                               Square_Cap : Round_Cap);
+      gui->set_line_width (gc, w);
+
+      gui->draw_line (gc, pad->Point1.X, pad->Point1.Y,
+                          pad->Point2.X, pad->Point2.Y);
+    }
+}
+
+void
+common_draw_helpers_init (HID *hid)
+{
+  hid->fill_pcb_polygon     = common_fill_pcb_polygon;
+  hid->thindraw_pcb_polygon = common_thindraw_pcb_polygon;
+  hid->fill_pcb_pad         = common_fill_pcb_pad;
+  hid->thindraw_pcb_pad     = common_thindraw_pcb_pad;
+}
diff --git a/src/hid/common/draw_helpers.h b/src/hid/common/draw_helpers.h
index 3705317..4b1e827 100644
--- a/src/hid/common/draw_helpers.h
+++ b/src/hid/common/draw_helpers.h
@@ -2,3 +2,6 @@ void common_fill_pcb_polygon (hidGC gc, PolygonType *poly,
                               const BoxType *clip_box);
 void common_thindraw_pcb_polygon (hidGC gc, PolygonType *poly,
                                   const BoxType *clip_box);
+void common_fill_pcb_pad (hidGC gc, PadType *pad, bool clear, bool mask);
+void common_thindraw_pcb_pad (hidGC gc, PadType *pad, bool clear, bool mask);
+void common_draw_helpers_init (HID *hid);
diff --git a/src/hid/common/extents.c b/src/hid/common/extents.c
index 2b0386c..5ac46ea 100644
--- a/src/hid/common/extents.c
+++ b/src/hid/common/extents.c
@@ -181,6 +181,8 @@ hid_extents_init (void)
 
   memset (&extents_hid, 0, sizeof (HID));
 
+  common_draw_helpers_init (&extents_hid);
+
   extents_hid.struct_size         = sizeof (HID);
   extents_hid.name                = "extents-extents";
   extents_hid.description         = "used to calculate extents";
@@ -201,7 +203,6 @@ hid_extents_init (void)
   extents_hid.draw_rect           = extents_draw_rect;
   extents_hid.fill_circle         = extents_fill_circle;
   extents_hid.fill_polygon        = extents_fill_polygon;
-  extents_hid.fill_pcb_polygon    = common_fill_pcb_polygon;
   extents_hid.fill_rect           = extents_fill_rect;
 
   initialised = true;
diff --git a/src/hid/common/hidnogui.c b/src/hid/common/hidnogui.c
index fd86b6a..b6d26f8 100644
--- a/src/hid/common/hidnogui.c
+++ b/src/hid/common/hidnogui.c
@@ -159,6 +159,18 @@ nogui_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 }
 
 static void
+nogui_fill_pcb_pad (hidGC gc, PadType *pad, bool clear, bool mask)
+{
+  CRASH;
+}
+
+static void
+nogui_thindraw_pcb_pad (hidGC gc, PadType *pad, bool clear, bool mask)
+{
+  CRASH;
+}
+
+static void
 nogui_fill_rect (hidGC gc, int x1, int y1, int x2, int y2)
 {
   CRASH;
@@ -437,6 +449,8 @@ HID hid_nogui = {
   nogui_fill_polygon,
   nogui_fill_pcb_polygon,
   0 /* nogui_thindraw_pcb_polygon */ ,
+  nogui_fill_pcb_pad,
+  nogui_thindraw_pcb_pad,
   nogui_fill_rect,
   nogui_calibrate,
   nogui_shift_is_pressed,
@@ -492,6 +506,8 @@ apply_default_hid (HID * d, HID * s)
   AD (fill_polygon);
   AD (fill_pcb_polygon);
   AD (thindraw_pcb_polygon);
+  AD (fill_pcb_pad);
+  AD (thindraw_pcb_pad);
   AD (calibrate);
   AD (shift_is_pressed);
   AD (control_is_pressed);
diff --git a/src/hid/gcode/gcode.c b/src/hid/gcode/gcode.c
index 3e49ed3..6491afd 100644
--- a/src/hid/gcode/gcode.c
+++ b/src/hid/gcode/gcode.c
@@ -1037,6 +1037,8 @@ hid_gcode_init ()
 {
   memset (&gcode_hid, 0, sizeof (HID));
 
+  common_draw_helpers_init (&gcode_hid);
+
   gcode_hid.struct_size         = sizeof (HID);
   gcode_hid.name                = "gcode";
   gcode_hid.description         = "G-CODE export.";
@@ -1061,7 +1063,6 @@ hid_gcode_init ()
   gcode_hid.draw_rect           = gcode_draw_rect;
   gcode_hid.fill_circle         = gcode_fill_circle;
   gcode_hid.fill_polygon        = gcode_fill_polygon;
-  gcode_hid.fill_pcb_polygon    = common_fill_pcb_polygon;
   gcode_hid.fill_rect           = gcode_fill_rect;
   gcode_hid.calibrate           = gcode_calibrate;
   gcode_hid.set_crosshair       = gcode_set_crosshair;
diff --git a/src/hid/gerber/gerber.c b/src/hid/gerber/gerber.c
index d18cd2a..d5843ef 100644
--- a/src/hid/gerber/gerber.c
+++ b/src/hid/gerber/gerber.c
@@ -1174,6 +1174,8 @@ hid_gerber_init ()
 {
   memset (&gerber_hid, 0, sizeof (HID));
 
+  common_draw_helpers_init (&gerber_hid);
+
   gerber_hid.struct_size         = sizeof (HID);
   gerber_hid.name                = "gerber";
   gerber_hid.description         = "RS-274X (Gerber) export.";
@@ -1198,7 +1200,6 @@ hid_gerber_init ()
   gerber_hid.draw_rect           = gerber_draw_rect;
   gerber_hid.fill_circle         = gerber_fill_circle;
   gerber_hid.fill_polygon        = gerber_fill_polygon;
-  gerber_hid.fill_pcb_polygon    = common_fill_pcb_polygon;
   gerber_hid.fill_rect           = gerber_fill_rect;
   gerber_hid.calibrate           = gerber_calibrate;
   gerber_hid.set_crosshair       = gerber_set_crosshair;
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 84cca05..5af6ed6 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -2100,6 +2100,8 @@ hid_gtk_init ()
 
   memset (&ghid_hid, 0, sizeof (HID));
 
+  common_draw_helpers_init (&ghid_hid);
+
   ghid_hid.struct_size          = sizeof (HID);
   ghid_hid.name                 = "gtk";
   ghid_hid.description          = "Gtk - The Gimp Toolkit";
@@ -2126,8 +2128,6 @@ hid_gtk_init ()
   ghid_hid.draw_rect            = ghid_draw_rect;
   ghid_hid.fill_circle          = ghid_fill_circle;
   ghid_hid.fill_polygon         = ghid_fill_polygon;
-  ghid_hid.fill_pcb_polygon     = common_fill_pcb_polygon;
-  ghid_hid.thindraw_pcb_polygon = common_thindraw_pcb_polygon;
   ghid_hid.fill_rect            = ghid_fill_rect;
 
   ghid_hid.calibrate            = ghid_calibrate;
diff --git a/src/hid/lesstif/main.c b/src/hid/lesstif/main.c
index 4595b80..c1b12d3 100644
--- a/src/hid/lesstif/main.c
+++ b/src/hid/lesstif/main.c
@@ -3802,6 +3802,8 @@ hid_lesstif_init ()
 {
   memset (&lesstif_hid, 0, sizeof (HID));
 
+  common_draw_helpers_init (&lesstif_hid);
+
   lesstif_hid.struct_size           = sizeof (HID);
   lesstif_hid.name                  = "lesstif";
   lesstif_hid.description           = "LessTif - a Motif clone for X/Unix";
@@ -3828,8 +3830,6 @@ hid_lesstif_init ()
   lesstif_hid.draw_rect             = lesstif_draw_rect;
   lesstif_hid.fill_circle           = lesstif_fill_circle;
   lesstif_hid.fill_polygon          = lesstif_fill_polygon;
-  lesstif_hid.fill_pcb_polygon      = common_fill_pcb_polygon;
-  lesstif_hid.thindraw_pcb_polygon  = common_thindraw_pcb_polygon;
   lesstif_hid.fill_rect             = lesstif_fill_rect;
 
   lesstif_hid.calibrate             = lesstif_calibrate;
diff --git a/src/hid/nelma/nelma.c b/src/hid/nelma/nelma.c
index 217a546..6e911ff 100644
--- a/src/hid/nelma/nelma.c
+++ b/src/hid/nelma/nelma.c
@@ -1052,6 +1052,8 @@ hid_nelma_init()
 {
   memset (&nelma_hid, 0, sizeof (HID));
 
+  common_draw_helpers_init (&nelma_hid);
+
   nelma_hid.struct_size         = sizeof (HID);
   nelma_hid.name                = "nelma";
   nelma_hid.description         = "Numerical analysis package export.";
@@ -1076,7 +1078,6 @@ hid_nelma_init()
   nelma_hid.draw_rect           = nelma_draw_rect;
   nelma_hid.fill_circle         = nelma_fill_circle;
   nelma_hid.fill_polygon        = nelma_fill_polygon;
-  nelma_hid.fill_pcb_polygon    = common_fill_pcb_polygon;
   nelma_hid.fill_rect           = nelma_fill_rect;
   nelma_hid.calibrate           = nelma_calibrate;
   nelma_hid.set_crosshair       = nelma_set_crosshair;
diff --git a/src/hid/png/png.c b/src/hid/png/png.c
index 7c2f461..3919a6e 100644
--- a/src/hid/png/png.c
+++ b/src/hid/png/png.c
@@ -1521,6 +1521,8 @@ hid_png_init ()
 {
   memset (&png_hid, 0, sizeof (HID));
 
+  common_draw_helpers_init (&png_hid);
+
   png_hid.struct_size = sizeof (HID);
   png_hid.name        = "png";
   png_hid.description = "GIF/JPEG/PNG export.";
@@ -1546,7 +1548,6 @@ hid_png_init ()
   png_hid.draw_rect           = png_draw_rect;
   png_hid.fill_circle         = png_fill_circle;
   png_hid.fill_polygon        = png_fill_polygon;
-  png_hid.fill_pcb_polygon    = common_fill_pcb_polygon;
   png_hid.fill_rect           = png_fill_rect;
   png_hid.calibrate           = png_calibrate;
   png_hid.set_crosshair       = png_set_crosshair;
diff --git a/src/hid/ps/eps.c b/src/hid/ps/eps.c
index 17c7697..f94175f 100644
--- a/src/hid/ps/eps.c
+++ b/src/hid/ps/eps.c
@@ -642,6 +642,8 @@ hid_eps_init ()
 {
   memset (&eps_hid, 0, sizeof (HID));
 
+  common_draw_helpers_init (&eps_hid);
+
   eps_hid.struct_size         = sizeof (HID);
   eps_hid.name                = "eps";
   eps_hid.description         = "Encapsulated Postscript";
@@ -666,7 +668,6 @@ hid_eps_init ()
   eps_hid.draw_rect           = eps_draw_rect;
   eps_hid.fill_circle         = eps_fill_circle;
   eps_hid.fill_polygon        = eps_fill_polygon;
-  eps_hid.fill_pcb_polygon    = common_fill_pcb_polygon;
   eps_hid.fill_rect           = eps_fill_rect;
   eps_hid.calibrate           = eps_calibrate;
   eps_hid.set_crosshair       = eps_set_crosshair;
diff --git a/src/hid/ps/ps.c b/src/hid/ps/ps.c
index 616f5d5..a417753 100644
--- a/src/hid/ps/ps.c
+++ b/src/hid/ps/ps.c
@@ -1349,6 +1349,8 @@ hid_ps_init ()
 {
   memset (&ps_hid, 0, sizeof (HID));
 
+  common_draw_helpers_init (&ps_hid);
+
   ps_hid.struct_size        = sizeof (HID);
   ps_hid.name               = "ps";
   ps_hid.description        = "Postscript export.";
