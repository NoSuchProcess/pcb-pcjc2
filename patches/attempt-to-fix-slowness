Bottom: 6ab8e08594f717b9b3690222a73a9d9deebf1b43
Top:    6ab8e08594f717b9b3690222a73a9d9deebf1b43
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-10-22 04:34:55 +0100

Various speedups to the polygon code.

Attempt to fix polygon slowness by avoiding the need to create a
completely new polygon for each boolean operation. This mostly relies
upon r-tree searches to find contours to operate on - rather than
searching each in turn.

We avoid labelling all of the "A" polygon's contours, use the contour
r-trees to dynamically search the required data.

Added code to reparent holes which end up in the wrong polygon piece
after inserting a new hole in InsertHoles. This means we don't have
to dump every potental hole we encounter in the holes insersion queue,
hopefully leading to better dynamic update performance.

At this point, polygon performance has finally seen a net gain.

HOWEVER: Due to differences in the order of polygon operations, the
         data-structures resulting from a boolean polygon operation
         may be sorted differently.

         In certain contrived cases, where a polygon is clipped into
         identically sized pieces, the resulting piece of polygon
         which PCB will keep and use on the board is different after
         this commit.


---


