Bottom: 73f802141977f276c9c24438b8e65153c7e860cc
Top:    bcdda0a726d6f0264aba4f277ecddef002af1b0a
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-08-03 00:17:11 +0100

crosshair.c: Revise heuristic for snapping on off-grid lines


---

diff --git a/src/crosshair.c b/src/crosshair.c
index 4024881..bb0a87b 100644
--- a/src/crosshair.c
+++ b/src/crosshair.c
@@ -819,6 +819,98 @@ check_snap_object (struct snap_data *snap_data, LocationType x, LocationType y,
     }
 }
 
+static void
+check_snap_offgrid_line (struct snap_data *snap_data,
+                         LocationType nearest_grid_x,
+                         LocationType nearest_grid_y)
+{
+  void *ptr1, *ptr2, *ptr3;
+  int ans;
+  LineType *line;
+  LocationType try_x, try_y;
+  double dx, dy;
+  double dist;
+
+  if (!TEST_FLAG (SNAPPINFLAG, PCB))
+    return;
+
+  /* Code to snap at some sensible point along a line */
+  /* Pick the nearest grid-point in the x or y direction
+   * to align with, then adjust until we hit the line
+   */
+  ans = SearchScreenGridSlop (Crosshair.X, Crosshair.Y,
+                              LINE_TYPE, &ptr1, &ptr2, &ptr3);
+
+  if (ans == NO_TYPE)
+    return;
+
+  line = (LineType *)ptr2;
+
+  /* Allow snapping to off-grid lines when drawing new lines (on
+   * the same layer), and when moving a line end-point
+   * (but don't snap to the same line)
+   */
+  if ((Settings.Mode != LINE_MODE ||
+       Crosshair.AttachedObject.Ptr1 != ptr1) &&
+      (Settings.Mode != MOVE_MODE ||
+       Crosshair.AttachedObject.Ptr1 != ptr1 ||
+       Crosshair.AttachedObject.Type != LINEPOINT_TYPE ||
+       Crosshair.AttachedObject.Ptr2 == line))
+    return;
+
+  dx = line->Point2.X - line->Point1.X;
+  dy = line->Point2.Y - line->Point1.Y;
+
+  /* Try snapping along the X axis */
+  if (dy != 0.)
+    {
+      /* Move in the X direction until we hit the line */
+      try_x = (nearest_grid_y - line->Point1.Y) / dy * dx + line->Point1.X;
+      try_y = nearest_grid_y;
+      check_snap_object (snap_data, try_x, try_y, true);
+    }
+
+  /* Try snapping along the Y axis */
+  if (dx != 0.)
+    {
+      try_x = nearest_grid_x;
+      try_y = (nearest_grid_x - line->Point1.X) / dx * dy + line->Point1.Y;
+      check_snap_object (snap_data, try_x, try_y, true);
+    }
+
+  if (dx != dy) /* If line not parallel with dX = dY direction.. */
+    {
+      /* Try snapping diagonally towards the line in the dX = dY direction */
+
+      if (dy == 0)
+        dist = line->Point1.Y - nearest_grid_y;
+      else
+        dist = ((line->Point1.X - nearest_grid_x) -
+                (line->Point1.Y - nearest_grid_y) * dx / dy) / (1 - dx / dy);
+
+      try_x = nearest_grid_x + dist;
+      try_y = nearest_grid_y + dist;
+
+      check_snap_object (snap_data, try_x, try_y, true);
+    }
+
+  if (dx != -dy) /* If line not parallel with dX = -dY direction.. */
+    {
+      /* Try snapping diagonally towards the line in the dX = -dY direction */
+
+      if (dy == 0)
+        dist = nearest_grid_y - line->Point1.Y;
+      else
+        dist = ((line->Point1.X - nearest_grid_x) -
+                (line->Point1.Y - nearest_grid_y) * dx / dy) / (1 + dx / dy);
+
+      try_x = nearest_grid_x + dist;
+      try_y = nearest_grid_y - dist;
+
+      check_snap_object (snap_data, try_x, try_y, true);
+    }
+}
+
 /* ---------------------------------------------------------------------------
  * recalculates the passed coordinates to fit the current grid setting
  */
@@ -976,74 +1068,7 @@ FitCrosshairIntoGrid (LocationType X, LocationType Y)
       check_snap_object (&snap_data, pnt->X, pnt->Y, true);
     }
 
-  /* Code to snap at some sensible point along a line */
-  /* Pick the nearest grid-point in the x or y direction
-   * to align with, then adjust until we hit the line
-   */
-  ans = NO_TYPE;
-  if (TEST_FLAG (SNAPPINFLAG, PCB))
-    ans = SearchScreenGridSlop (Crosshair.X, Crosshair.Y,
-                                LINE_TYPE, &ptr1, &ptr2, &ptr3);
-
-  if (ans != NO_TYPE)
-    {
-      LineType *line = (LineType *)ptr2;
-      LocationType try_x, try_y;
-      double dx, dy;
-      double dist;
-
-      dx = line->Point2.X - line->Point1.X;
-      dy = line->Point2.Y - line->Point1.Y;
-
-      /* Try snapping along the X axis */
-      if (dy != 0.)
-        {
-          /* Move in the X direction until we hit the line */
-          try_x = (nearest_grid_y - line->Point1.Y) / dy * dx + line->Point1.X;
-          try_y = nearest_grid_y;
-          check_snap_object (&snap_data, try_x, try_y, true);
-        }
-
-      /* Try snapping along the Y axis */
-      if (dx != 0.)
-        {
-          try_x = nearest_grid_x;
-          try_y = (nearest_grid_x - line->Point1.X) / dx * dy + line->Point1.Y;
-          check_snap_object (&snap_data, try_x, try_y, true);
-        }
-
-      if (dx != dy) /* If line not parallel with dX = dY direction.. */
-        {
-          /* Try snapping diagonally towards the line in the dX = dY direction */
-
-          if (dy == 0)
-            dist = line->Point1.Y - nearest_grid_y;
-          else
-            dist = ((line->Point1.X - nearest_grid_x) -
-                    (line->Point1.Y - nearest_grid_y) * dx / dy) / (1 - dx / dy);
-
-          try_x = nearest_grid_x + dist;
-          try_y = nearest_grid_y + dist;
-
-          check_snap_object (&snap_data, try_x, try_y, true);
-        }
-
-      if (dx != -dy) /* If line not parallel with dX = -dY direction.. */
-        {
-          /* Try snapping diagonally towards the line in the dX = -dY direction */
-
-          if (dy == 0)
-            dist = nearest_grid_y - line->Point1.Y;
-          else
-            dist = ((line->Point1.X - nearest_grid_x) -
-                    (line->Point1.Y - nearest_grid_y) * dx / dy) / (1 + dx / dy);
-
-          try_x = nearest_grid_x + dist;
-          try_y = nearest_grid_y - dist;
-
-          check_snap_object (&snap_data, try_x, try_y, true);
-        }
-    }
+  check_snap_offgrid_line (&snap_data, nearest_grid_x, nearest_grid_y);
 
   ans = NO_TYPE;
   if (TEST_FLAG (SNAPPINFLAG, PCB))
