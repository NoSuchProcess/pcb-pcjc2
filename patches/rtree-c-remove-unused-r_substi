Bottom: 0963bedab22c1979762246b37507bc64422f6716
Top:    da59040b73321ccdce329652fdc33817a1799567
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-05-16 01:41:26 +0100

rtree.c: Remove unused r_substitute() function

This function was used to update r-trees when they contained objects
changed memory location. Since we no longer shuffle objects around when
we delete them, this function is no longer required.


---

diff --git a/src/rtree.c b/src/rtree.c
index 83ec41c..526d2b7 100644
--- a/src/rtree.c
+++ b/src/rtree.c
@@ -1106,41 +1106,3 @@ r_delete_entry (rtree_t * rtree, const BoxType * box)
 #endif
   return r;
 }
-
-int
-__r_sub (struct rtree_node *node, const BoxType * b, const BoxType * a,
-         jmp_buf * e)
-{
-  int i;
-
-  if (node->flags.is_leaf)
-    {
-      for (i = 0; i < M_SIZE; i++)
-        if (node->u.rects[i].bptr == b)
-          {
-            node->u.rects[i].bptr = a;
-            assert (a->X1 == node->u.rects[i].bounds.X1);
-            assert (a->X2 == node->u.rects[i].bounds.X2);
-            assert (a->Y1 == node->u.rects[i].bounds.Y1);
-            assert (a->Y2 == node->u.rects[i].bounds.Y2);
-            longjmp (*e, 1);
-          }
-      return 0;
-    }
-  for (i = 0; i < M_SIZE; i++)
-    if (node->u.kids[i] && __r_sub (node->u.kids[i], b, a, e))
-      return 1;
-  return 0;
-}
-
-
-void
-r_substitute (rtree_t * rtree, const BoxType * before, const BoxType * after)
-{
-  jmp_buf env;
-
-  if (before == after)
-    return;
-  if (setjmp (env) == 0)
-    __r_sub (rtree->root, before, after, &env);
-}
diff --git a/src/rtree.h b/src/rtree.h
index 3e91297..862bbe9 100644
--- a/src/rtree.h
+++ b/src/rtree.h
@@ -49,8 +49,6 @@ void r_destroy_tree (rtree_t ** rtree);
 
 bool r_delete_entry (rtree_t * rtree, const BoxType * which);
 void r_insert_entry (rtree_t * rtree, const BoxType * which, int manage);
-void r_substitute (rtree_t * rtree, const BoxType * before,
-		   const BoxType * after);
 
 /* generic search routine */
 /* region_in_search should return true if "what you're looking for" is
