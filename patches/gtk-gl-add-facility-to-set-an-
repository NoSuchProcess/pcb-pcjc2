Bottom: 867fbf689dbc7fe2866d50a5cfb6d1faaf30b502
Top:    8a180783fcedea6e35f73b64cc1bb4d0565c90f2
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-05-14 00:46:27 +0100

GTK/GL: Add facility to set an alpha multiplier for the current rendering


---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 2d80bb2..bd8fdd2 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -45,6 +45,12 @@ typedef struct render_priv {
   bool trans_lines;
   bool in_context;
   int subcomposite_stencil_bit;
+
+  /* Data to determine when we need to change the current rendering colour */
+  char *current_color = NULL;
+  double alpha_mult = 1.0;
+  int alpha_changed = 0;
+
 } render_priv;
 
 
@@ -351,7 +357,6 @@ ghid_set_color (hidGC gc, const char *name)
 {
   render_priv *priv = gport->render_priv;
   static void *cache = NULL;
-  static char *old_name = NULL;
   hidval cval;
   ColorCache *cc;
   double alpha_mult = 1.0;
@@ -360,15 +365,16 @@ ghid_set_color (hidGC gc, const char *name)
 
   current_gc = gc;
 
-  if (old_name != NULL)
-    {
-      if (strcmp (name, old_name) == 0)
-        return;
-      free (old_name);
-    }
+  if (!alpha_changed && current_color != NULL &&
+      strcmp (name, current_color) == 0)
+    return;
 
-  old_name = strdup (name);
+  free (current_color);
+  current_color = NULL;
+
+  alpha_changed = 0;
   gc->colorname = (char *) name;
+  current_color = strdup (name);
 
   if (gport->colormap == NULL)
     gport->colormap = gtk_widget_get_colormap (gport->top_window);
@@ -433,6 +439,7 @@ ghid_set_color (hidGC gc, const char *name)
     }
   if (1) {
     double maxi, mult;
+    alpha_mult *= priv->alpha_mult;
     if (priv->trans_lines)
       a = a * alpha_mult;
     maxi = r;
@@ -454,6 +461,16 @@ ghid_set_color (hidGC gc, const char *name)
 }
 
 void
+ghid_set_alpha_mult (hidGC gc, double alpha_mult)
+{
+  if (alpha_mult != priv->alpha_mult) {
+    priv->alpha_mult = alpha_mult;
+    priv->alpha_changed = 1;
+    ghid_set_color (gc, gc->colorname);
+  }
+}
+
+void
 ghid_set_line_cap (hidGC gc, EndCapStyle style)
 {
   gc->cap = style;
@@ -507,6 +524,7 @@ use_gc (hidGC gc)
 
   current_gc = gc;
 
+  set_gl_color_for_gc (gc);
   ghid_set_color (gc, gc->colorname);
   return 1;
 }
