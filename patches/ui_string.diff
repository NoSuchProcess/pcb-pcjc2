Bottom: 3b5cff184cf0990b5f9e30912c39f70136a60fe9
Top:    faf4f18530583aa764148a24cbc80dfb881ae3c7
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-22 21:04:17 +0000




---

diff --git a/src/free_atexit.c b/src/free_atexit.c
index dc11f12..d5c034e 100644
--- a/src/free_atexit.c
+++ b/src/free_atexit.c
@@ -56,6 +56,15 @@ void *leaky_malloc (size_t size)
   return new_memory + sizeof(leaky_admin_t);
 }
 
+void *leaky_calloc (size_t nmemb, size_t size)
+{
+	size_t size_ = size * nmemb;
+  void *new_memory = leaky_malloc(size_);
+
+	memset(new_memory, 0, size_);
+  return new_memory;
+}
+
 void *leaky_realloc (void* old_memory, size_t size)
 {
   void *new_memory;
diff --git a/src/free_atexit.h b/src/free_atexit.h
index 3b142b6..558b597 100644
--- a/src/free_atexit.h
+++ b/src/free_atexit.h
@@ -23,6 +23,9 @@ void leaky_uninit (void);
 /* allocate memory, remember the pointer and free it after exit from the application */
 void *leaky_malloc (size_t size);
 
+/* same as leaky_malloc but this one wraps calloc() */
+void *leaky_calloc (size_t nmemb, size_t size);
+
 /* reallocate memory, remember the new pointer and free it after exit from the application */
 void *leaky_realloc (void* old_memory, size_t size);
 
diff --git a/src/hid/gtk/gui-top-window.c b/src/hid/gtk/gui-top-window.c
index 90977e2..4390210 100644
--- a/src/hid/gtk/gui-top-window.c
+++ b/src/hid/gtk/gui-top-window.c
@@ -3679,7 +3679,7 @@ ghid_ui_info_append (const gchar * new)
   if (new_ui_info_sz == 0) 
     {
       new_ui_info_sz = 1024;
-      new_ui_info = (gchar *) calloc ( new_ui_info_sz, sizeof (gchar));
+      new_ui_info = (gchar *) leaky_calloc ( new_ui_info_sz, sizeof (gchar));
     }
 
   while (strlen (new_ui_info) + strlen (new) + 1 > new_ui_info_sz)
@@ -3688,7 +3688,7 @@ ghid_ui_info_append (const gchar * new)
       gchar * np;
 
       n = new_ui_info_sz + 1024;
-      if ( (np = realloc (new_ui_info, n)) == NULL)
+      if ( (np = leaky_realloc (new_ui_info, n)) == NULL)
 	{
 	  fprintf (stderr, "ghid_ui_info_append():  realloc of size %ld failed\n",
 		   (long int) n);
