Bottom: c271dda29a135a715e69d0061f0e7a93c9215f4c
Top:    6d1e5bda9cc14bfa4c80b381432a064be7336f1e
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-05-18 00:54:14 +0100

move.c: Adjust the object counters when moving objects between layers

This fixes a crash introduced by
commit 2ce35292b9e96da38cb56878005aba20891689eb,
"Convert board objects to GLists of g_slice allocated memory"

It doesn't fix entirity of the defect reported in that bug, but
it restores the prior behaviour where PCB would hang, not segfault.

Reported-by: Colin Bennett <colin@gibibit.com>

Affects-bug: lp-783640


---

diff --git a/src/move.c b/src/move.c
index 6ce043a..de1e2e7 100644
--- a/src/move.c
+++ b/src/move.c
@@ -442,7 +442,9 @@ MoveLineToLayerLowLevel (LayerType *Source, LineType *line,
   r_delete_entry (Source->line_tree, (BoxType *)line);
 
   Source->Line = g_list_remove (Source->Line, line);
+  Source->LineN --;
   Destination->Line = g_list_append (Destination->Line, line);
+  Destination->LineN ++;
 
   if (!Destination->line_tree)
     Destination->line_tree = r_create_tree (NULL, 0, 0);
@@ -460,7 +462,9 @@ MoveArcToLayerLowLevel (LayerType *Source, ArcType *arc,
   r_delete_entry (Source->arc_tree, (BoxType *)arc);
 
   Source->Arc = g_list_remove (Source->Arc, arc);
+  Source->ArcN --;
   Destination->Arc = g_list_append (Destination->Arc, arc);
+  Destination->ArcN ++;
 
   if (!Destination->arc_tree)
     Destination->arc_tree = r_create_tree (NULL, 0, 0);
@@ -640,7 +644,9 @@ MoveTextToLayerLowLevel (LayerType *Source, TextType *text,
   r_delete_entry (Source->text_tree, (BoxType *)text);
 
   Source->Text = g_list_remove (Source->Text, text);
+  Source->TextN --;
   Destination->Text = g_list_append (Destination->Text, text);
+  Destination->TextN ++;
 
   if (GetLayerGroupNumberByNumber (solder_silk_layer) ==
       GetLayerGroupNumberByPointer (Destination))
@@ -693,7 +699,9 @@ MovePolygonToLayerLowLevel (LayerType *Source, PolygonType *polygon,
   r_delete_entry (Source->polygon_tree, (BoxType *)polygon);
 
   Source->Polygon = g_list_remove (Source->Polygon, polygon);
+  Source->PolygonN --;
   Destination->Polygon = g_list_append (Destination->Polygon, polygon);
+  Destination->Polygon ++;
 
   if (!Destination->polygon_tree)
     Destination->polygon_tree = r_create_tree (NULL, 0, 0);
