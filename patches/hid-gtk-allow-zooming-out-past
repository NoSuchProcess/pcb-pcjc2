Bottom: 53ef77282061632bac9fa50505e368b64a3595b4
Top:    82e044d5a8faeaffe8e2ceb293d8f734c8f73d91
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-08-26 06:22:23 +0100

hid/gtk: Allow zooming out past the board size (up to 1/5 viewport size)

Adds an explicit pan fixup to ghid_view_zoom_fit(), as this is no longer
clamped at the origin by pan_common().

It was also necessary to add a fixup for the stored gport->pcb_{x,y}
coordinates. Without this, if you zoomed in far enough to clamp against
the viewport edge, zooming out again would not produce the expected
result (backing out the zoom), as the clamping against the viewport
shifts the PCB coordinate under the mouse pointer, and hence the
required zoom center.


---

diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 2e258d1..f5c836c 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -43,11 +43,11 @@ pan_common (GHidPort *port)
   * event so convert it back to event coordinates temporarily. */
   ghid_pcb_to_event_coords (gport->pcb_x, gport->pcb_y, &event_x, &event_y);
 
-  /* Don't pan so far that we see past the board edges */
-  gport->view_x0 = MAX (0, gport->view_x0);
-  gport->view_y0 = MAX (0, gport->view_y0);
-  gport->view_x0 = MIN (gport->view_x0, PCB->MaxWidth  - gport->view_width);
-  gport->view_y0 = MIN (gport->view_y0, PCB->MaxHeight - gport->view_height);
+  /* Don't pan so far the board is completely off the screen */
+  port->view_x0 = MAX (-port->view_width,  port->view_x0);
+  port->view_y0 = MAX (-port->view_height, port->view_y0);
+  port->view_x0 = MIN ( port->view_x0, PCB->MaxWidth);
+  port->view_y0 = MIN ( port->view_y0, PCB->MaxHeight);
 
   /* Fix up noted event coordinates to match where we clamped. Alternatively
    * we could call ghid_note_event_location (NULL); to get a new pointer
@@ -89,6 +89,7 @@ ghid_pan_view_rel (Coord dx, Coord dy)
  * gport->view_width and gport->view_height are in PCB coordinates
  */
 
+#define ALLOW_ZOOM_OUT_BY 10 /* Arbitrary, and same as the lesstif HID */
 static void
 ghid_zoom_view_abs (Coord center_x, Coord center_y, double new_zoom)
 {
@@ -101,7 +102,7 @@ ghid_zoom_view_abs (Coord center_x, Coord center_y, double new_zoom)
    */
   min_zoom = 1;
   max_zoom = MAX (PCB->MaxWidth  / gport->width,
-                  PCB->MaxHeight / gport->height);
+                  PCB->MaxHeight / gport->height) * ALLOW_ZOOM_OUT_BY;
   new_zoom = MIN (MAX (min_zoom, new_zoom), max_zoom);
 
   if (gport->zoom == new_zoom)
@@ -131,6 +132,7 @@ ghid_zoom_view_rel (Coord center_x, Coord center_y, double factor)
 static void
 ghid_zoom_view_fit (void)
 {
+  ghid_pan_view_abs (0, 0, 0, 0);
   ghid_zoom_view_abs (0, 0, MAX (PCB->MaxWidth  / gport->width,
                                  PCB->MaxHeight / gport->height));
 }
diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index 1c5327d..81dcd45 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -81,22 +81,19 @@ ghid_port_ranges_scale (void)
   gport->view_width = gport->width * gport->zoom;
   gport->view_height = gport->height * gport->zoom;
 
-  if (gport->view_width >= PCB->MaxWidth)
-    gport->view_width = PCB->MaxWidth;
-  if (gport->view_height >= PCB->MaxHeight)
-    gport->view_height = PCB->MaxHeight;
-
   adj = gtk_range_get_adjustment (GTK_RANGE (ghidgui->h_range));
-  adj->page_size = gport->view_width;
-  adj->page_increment = adj->page_size/10.0;
-  adj->step_increment = adj->page_size/100.0;
-  adj->upper = PCB->MaxWidth;
+  adj->page_size = MIN (gport->view_width, PCB->MaxWidth);
+  adj->page_increment = adj->page_size / 10.0;
+  adj->step_increment = adj->page_size / 100.0;
+  adj->lower = -gport->view_width;
+  adj->upper = PCB->MaxWidth + adj->page_size;
 
   adj = gtk_range_get_adjustment (GTK_RANGE (ghidgui->v_range));
-  adj->page_size = gport->view_height;
-  adj->page_increment = adj->page_size/10.0;
-  adj->step_increment = adj->page_size/100.0;
-  adj->upper = PCB->MaxHeight;
+  adj->page_size = MIN (gport->view_height, PCB->MaxHeight);
+  adj->page_increment = adj->page_size / 10.0;
+  adj->step_increment = adj->page_size / 100.0;
+  adj->lower = -gport->view_height;
+  adj->upper = PCB->MaxHeight + adj->page_size;
 }
