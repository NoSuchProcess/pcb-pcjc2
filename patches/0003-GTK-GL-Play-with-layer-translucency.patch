Bottom: 29632e51a06fabfa1801a8b30ece2e81d0add025
Top:    cbdfb81b5fc10878345935c7a5ec6b2170424451
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-05-11 12:01:24 +0100

From 52a8ea6e15eb53b96c8b8ec4c989bc743af588a3 Mon Sep 17 00:00:00 2001
Subject: [PATCH 3/3] GTK/GL: Play with layer translucency


---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index ca3978a..b1cd650 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -696,10 +696,11 @@ ghid_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 void
 ghid_thindraw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
+  double old_global_alpha_mult = global_alpha_mult;
   common_thindraw_pcb_polygon (gc, poly, clip_box);
-  ghid_global_alpha_mult (gc, 0.25);
+  ghid_global_alpha_mult (gc, old_global_alpha_mult * 0.25);
   ghid_fill_pcb_polygon (gc, poly, clip_box);
-  ghid_global_alpha_mult (gc, 1.0);
+  ghid_global_alpha_mult (gc, old_global_alpha_mult);
 }
 
 void
@@ -1788,6 +1789,7 @@ void
 ghid_draw_everything (BoxTypePtr drawn_area)
 {
   int i, ngroups;
+  int number_phys_on_top;
   int side;
   /* This is the list of layer groups we will draw.  */
   int do_group[MAX_LAYER];
@@ -1874,26 +1876,39 @@ ghid_draw_everything (BoxTypePtr drawn_area)
   }
 
   /* draw all layers in layerstack order */
+#define FADE_FACTOR 0.6
+  number_phys_on_top = max_phys_group - min_phys_group;
   for (i = ngroups - 1; i >= 0; i--) {
+    bool is_this_physical = drawn_groups[i] >= min_phys_group &&
+                            drawn_groups[i] <= max_phys_group;
+    bool is_next_physical = i > 0 &&
+                            drawn_groups[i - 1] >= min_phys_group &&
+                            drawn_groups[i - 1] <= max_phys_group;
+
+    double alpha_mult = global_view_2d ? pow (FADE_FACTOR, i) :
+      (is_this_physical ? pow (FADE_FACTOR, number_phys_on_top) : 1.);
+
+    if (is_this_physical)
+      number_phys_on_top --;
+
+    ghid_global_alpha_mult (Output.fgGC, alpha_mult);
     DrawLayerGroup (drawn_groups [i], drawn_area);
 
 #if 1
-    if (!global_view_2d && i > 0 &&
-        drawn_groups[i] >= min_phys_group &&
-        drawn_groups[i] <= max_phys_group &&
-        drawn_groups[i - 1] >= min_phys_group &&
-        drawn_groups[i - 1] <= max_phys_group) {
+    if (!global_view_2d && is_this_physical && is_next_physical) {
       cyl_info.from_layer = drawn_groups[i];
       cyl_info.to_layer = drawn_groups[i - 1];
       cyl_info.scale = gport->zoom;
       gui->set_color (Output.fgGC, "drill");
-      ghid_global_alpha_mult (Output.fgGC, 0.75);
+      ghid_global_alpha_mult (Output.fgGC, alpha_mult * 0.75);
       if (PCB->PinOn) r_search (PCB->Data->pin_tree, drawn_area, NULL, pin_hole_cyl_callback, &cyl_info);
       if (PCB->ViaOn) r_search (PCB->Data->via_tree, drawn_area, NULL, via_hole_cyl_callback, &cyl_info);
-      ghid_global_alpha_mult (Output.fgGC, 1.0);
     }
 #endif
   }
+#undef FADE_FACTOR
+
+  ghid_global_alpha_mult (Output.fgGC, 1.0);
 
   if (TEST_FLAG (CHECKPLANESFLAG, PCB))
     return;
