Bottom: e4f8cf28efc8c18ff7545fcc613de6d0fdb7adaf
Top:    024e8f23f30fce49d9f002733af596f3ef6a8cf5
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-06 01:07:56 +0100

action.c: In ActionUnselect(), only hide the crosshair where required


---

diff --git a/src/action.c b/src/action.c
index 5d8d9f4..65a3c3a 100644
--- a/src/action.c
+++ b/src/action.c
@@ -5625,7 +5625,6 @@ ActionUnselect (int argc, char **argv, int x, int y)
   char *function = ARG (0);
   if (function)
     {
-      HideCrosshair ();
       switch (GetFunctionID (function))
 	{
 #if defined(HAVE_REGCOMP) || defined(HAVE_RE_COMP)
@@ -5683,6 +5682,7 @@ ActionUnselect (int argc, char **argv, int x, int y)
 			  Crosshair.AttachedBox.Point2.X);
 	    box.Y2 = MAX (Crosshair.AttachedBox.Point1.Y,
 			  Crosshair.AttachedBox.Point2.Y);
+	    HideCrosshair ();
 	    NotifyBlock ();
 	    if (Crosshair.AttachedBox.State == STATE_THIRD &&
 		SelectBlock (&box, false))
@@ -5690,6 +5690,7 @@ ActionUnselect (int argc, char **argv, int x, int y)
 		SetChangedFlag (true);
 		Crosshair.AttachedBox.State = STATE_FIRST;
 	      }
+	    RestoreCrosshair ();
 	    break;
 	  }
 
@@ -5718,12 +5719,10 @@ ActionUnselect (int argc, char **argv, int x, int y)
 	  break;
 
 	default:
-	  RestoreCrosshair ();
 	  AFAIL (unselect);
 	  break;
 
 	}
-      RestoreCrosshair ();
     }
   return 0;
 }
