Bottom: df50c927291cfc337f7a24250cf9c8ebfcc9633e
Top:    ac2a6900f79b42f8a5f69ab7c64c40c2f760c4f6
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-11-04 03:28:40 +0000

Attempt at supporting Mapped VBO / VBO / Arrays neatly


---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index aad818c..4009f60 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -78,20 +78,22 @@ hidgl_new_triangle_array (void)
 #define NUM_BUF_GLFLOATS (3 * (3 + 2) * TRIANGLE_ARRAY_SIZE)
 
 
-/* NB: Caller must ensure the desired GL_ARRAY_BUFFER is bound */
+/* NB: If using VBOs, the caller must ensure the VBO is bound to the GL_ARRAY_BUFFER */
 static void
 hidgl_reset_triangle_array (triangle_buffer *buffer)
 {
-  if (!buffer->local) {
-    /* Map some new memory to upload vertices into. */
-    glBufferData (GL_ARRAY_BUFFER, NUM_BUF_GLFLOATS * sizeof (GLfloat), NULL, GL_STREAM_DRAW);
+  /* Hint to the driver that we're done with the previous buffer contents */
+  if (buffer->use_vbo)
+    glBufferData (GL_ARRAY_BUFFER, NUM_BUF_GLFLOATS * sizeof (GLfloat), NULL, GL_DYNAMIC_DRAW);
+
+  /* Map the new memory to upload vertices into. */
+  if (buffer->use_map)
     buffer->triangle_array = glMapBuffer (GL_ARRAY_BUFFER, GL_WRITE_ONLY);
-  }
 
-  /* If mapping the VBO fails, fall back to an allocated array */
+  /* If mapping the VBO fails (or if we aren't using VBOs) fall back a local array */
   if (buffer->triangle_array == NULL) {
     buffer->triangle_array = malloc (NUM_BUF_GLFLOATS * sizeof (GLfloat));
-    buffer->local = true;
+    buffer->use_map = false;
   }
 
   /* Don't want this bound for now */
@@ -107,23 +109,34 @@ hidgl_init_triangle_array (triangle_buffer *buffer)
 {
   CHECK_IS_IN_CONTEXT ();
 
-  glGenBuffers (1, &buffer->vbo_id);
-  glBindBuffer (GL_ARRAY_BUFFER, buffer->vbo_id);
+  buffer->use_vbo = false;
+
+  if (buffer->use_vbo) {
+    glGenBuffers (1, &buffer->vbo_id);
+    glBindBuffer (GL_ARRAY_BUFFER, buffer->vbo_id);
+  }
+
+  if (buffer->vbo_id == 0)
+    buffer->use_vbo = false;
+
+  buffer->use_map = buffer->use_vbo;
+  buffer->use_map = false;
 
   buffer->triangle_array = NULL;
-  buffer->local = false;
   hidgl_reset_triangle_array (buffer);
 }
 
 void
 hidgl_finish_triangle_array (triangle_buffer *buffer)
 {
-  if (buffer->local) {
+  if (!buffer->use_map)
     free (buffer->triangle_array);
-  } else {
-    glBindBuffer (GL_ARRAY_BUFFER, buffer->vbo_id);
-    glUnmapBuffer (GL_ARRAY_BUFFER);
-  }
+
+  if (!buffer->use_vbo)
+    return;
+
+  glBindBuffer (GL_ARRAY_BUFFER, buffer->vbo_id);
+  glUnmapBuffer (GL_ARRAY_BUFFER);
   glBindBuffer (GL_ARRAY_BUFFER, 0);
 
   glDeleteBuffers (1, &buffer->vbo_id);
@@ -139,17 +152,22 @@ hidgl_flush_triangles (triangle_buffer *buffer)
   if (buffer->vertex_count == 0)
     return;
 
-  if (!buffer->local) {
+  if (buffer->use_vbo) {
     glBindBuffer (GL_ARRAY_BUFFER, buffer->vbo_id);
-    glUnmapBuffer (GL_ARRAY_BUFFER);
-    buffer->triangle_array = NULL;
-  }
 
-  glVertexPointer (3, GL_FLOAT, 5 * sizeof (GLfloat), buffer->local ?
-                     buffer->triangle_array : BUF_OFFSET (0));
+    if (buffer->use_map) {
+      glUnmapBuffer (GL_ARRAY_BUFFER);
+      buffer->triangle_array = NULL;
+    } else {
+      glBufferSubData (GL_ARRAY_BUFFER, 0, NUM_BUF_GLFLOATS * sizeof (GLfloat),
+                       buffer->triangle_array);
+    }
+  }
 
-  glTexCoordPointer (2, GL_FLOAT, 5 * sizeof (GLfloat), buffer->local ?
-                       buffer->triangle_array + 3 : BUF_OFFSET (3));
+  glTexCoordPointer (2, GL_FLOAT, 5 * sizeof (GLfloat), buffer->use_vbo ?
+                       BUF_OFFSET (3) : buffer->triangle_array + 3);
+  glVertexPointer (3, GL_FLOAT, 5 * sizeof (GLfloat), buffer->use_vbo ?
+                     BUF_OFFSET (0) : buffer->triangle_array + 0);
 
   glEnableClientState (GL_VERTEX_ARRAY);
   glEnableClientState (GL_TEXTURE_COORD_ARRAY);
diff --git a/src/hid/common/hidgl.h b/src/hid/common/hidgl.h
index d5f745a..0a7b68e 100644
--- a/src/hid/common/hidgl.h
+++ b/src/hid/common/hidgl.h
@@ -32,7 +32,8 @@ typedef struct {
   unsigned int total_triangles;
   unsigned int total_vertices;
   GLuint vbo_id;
-  bool local;
+  bool use_vbo;
+  bool use_map;
 } triangle_buffer;
 
 extern triangle_buffer buffer;
