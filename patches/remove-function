Bottom: b4c5d565582880b50c79bda391ec01e3356771c9
Top:    06ef4166b818943012b3d41005acf03d4d9ab6a3
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2014-07-03 23:55:10 +0100

Remove function GetGroupOfLayer, use GetLayerGroupNumberByNumber() instead.

These functions are virtually identical, the only difference being special-case
handling in the deleted function to force returning max_group if passed layer
number "max_copper_layer".

This actually (as it happens), corresponds to the bottom silk layer, and this
handling is suspect at best. GetLayerGroupNumberByNumber() will return the
group corresponding to the bottom of the board (whichever that may be).


---

diff --git a/src/line.c b/src/line.c
index f20f705..469f0f6 100644
--- a/src/line.c
+++ b/src/line.c
@@ -321,8 +321,8 @@ drc_lines (PointType *end, bool way)
       x_is_long = false;
       length = abs (dy);
     }
-  group = GetGroupOfLayer (INDEXOFCURRENT);
 
+  group = GetLayerGroupNumberByNumber (INDEXOFCURRENT);
   info.bottom_side = (GetLayerGroupNumberBySide (BOTTOM_SIDE) == group);
   info.top_side = (GetLayerGroupNumberBySide (TOP_SIDE) == group);
 
diff --git a/src/misc.c b/src/misc.c
index 1b654a7..4f381ae 100644
--- a/src/misc.c
+++ b/src/misc.c
@@ -1288,7 +1288,7 @@ PushOnTopOfLayerStack (int NewTop)
 {
   int i;
 
-  /* ignore silk layers */
+  /* ignore silk and other extra layers */
   if (NewTop < max_copper_layer)
     {
       /* first find position of passed one */
@@ -1322,22 +1322,22 @@ ChangeGroupVisibility (int Layer, bool On, bool ChangeStackOrder)
             Layer, On, ChangeStackOrder);
 
   /* decrement 'i' to keep stack in order of layergroup */
-  if ((group = GetGroupOfLayer (Layer)) < max_group)
-    for (i = PCB->LayerGroups.Number[group]; i;)
-      {
-        int layer = PCB->LayerGroups.Entries[group][--i];
+  group = GetLayerGroupNumberByNumber (Layer);
+  for (i = PCB->LayerGroups.Number[group]; i;)
+    {
+      int layer = PCB->LayerGroups.Entries[group][--i];
 
-        /* don't count the passed member of the group */
-        if (layer != Layer && layer < max_copper_layer)
-          {
-            PCB->Data->Layer[layer].On = On;
+      /* don't count the passed member of the group */
+      if (layer != Layer && layer < max_copper_layer)
+        {
+          PCB->Data->Layer[layer].On = On;
 
-            /* push layer on top of stack if switched on */
-            if (On && ChangeStackOrder)
-              PushOnTopOfLayerStack (layer);
-            changed++;
-          }
-      }
+          /* push layer on top of stack if switched on */
+          if (On && ChangeStackOrder)
+            PushOnTopOfLayerStack (layer);
+          changed++;
+        }
+    }
 
   /* change at least the passed layer */
   PCB->Data->Layer[Layer].On = On;
@@ -1450,26 +1450,6 @@ LayerStringToLayerStack (char *s)
     }
 }
 
-/* ----------------------------------------------------------------------
- * lookup the group to which a layer belongs to
- * returns max_group if no group is found, or is
- * passed Layer is equal to max_copper_layer
- */
-int
-GetGroupOfLayer (int Layer)
-{
-  int group, i;
-
-  if (Layer == max_copper_layer)
-    return max_group;
-  for (group = 0; group < max_group; group++)
-    for (i = 0; i < PCB->LayerGroups.Number[group]; i++)
-      if (PCB->LayerGroups.Entries[group][i] == Layer)
-        return (group);
-  return max_group;
-}
-
-
 /* ---------------------------------------------------------------------------
  * returns the layergroup number for the passed pointer
  */
diff --git a/src/misc.h b/src/misc.h
index 635af68..d6f33e5 100644
--- a/src/misc.h
+++ b/src/misc.h
@@ -75,7 +75,6 @@ int GetLayerNumber (DataType *, LayerType *);
 int GetLayerGroupNumberByPointer (LayerType *);
 int GetLayerGroupNumberByNumber (Cardinal);
 int GetLayerGroupNumberBySide (int);
-int GetGroupOfLayer (int);
 int ChangeGroupVisibility (int, bool, bool);
 void LayerStringToLayerStack (char *);
