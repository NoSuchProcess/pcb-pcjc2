Bottom: 5cc18ff2e9d00fa9e8053f0f72ac0280499a512c
Top:    10387dbda88643d092840c59fdc678cd78fb1ea8
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2015-01-07 01:27:39 +0000

Revert "Remove unused / unecessary parameters from CreateNewPCB and CreateNewPCBPost"

This reverts commit 897cf1b4b07cbeba319982b04fc589b59ca94273.

The SetDefaultNames parameter to CreateNewPCB was not used (despite various
callers passing both true and false). The use_default parameter to
CreateNewPCBPost only had callers passing '1' at this point, so the
parameter can be removed.


---

diff --git a/src/action.c b/src/action.c
index c886d79..b8b3fe7 100644
--- a/src/action.c
+++ b/src/action.c
@@ -5938,8 +5938,8 @@ ActionNew (int argc, char **argv, Coord x, Coord y)
 	SaveInTMP ();
       RemovePCB (PCB);
       PCB = NULL;
-      PCB = CreateNewPCB ();
-      CreateNewPCBPost (PCB);
+      PCB = CreateNewPCB (true);
+      CreateNewPCBPost (PCB, 1);
 
       /* setup the new name and reset some values to default */
       free (PCB->Name);
diff --git a/src/buffer.c b/src/buffer.c
index 789985d..3b51ba1 100644
--- a/src/buffer.c
+++ b/src/buffer.c
@@ -1121,7 +1121,7 @@ ConvertBufferToElement (BufferType *Buffer)
 bool
 LoadLayoutToBuffer (BufferType *Buffer, char *Filename)
 {
-  PCBType *newPCB = CreateNewPCB ();
+  PCBType *newPCB = CreateNewPCB (false);
 
   /* new data isn't added to the undo list */
   if (!ParsePCB (newPCB, Filename))
diff --git a/src/create.c b/src/create.c
index 013c8d9..7da96ee 100644
--- a/src/create.c
+++ b/src/create.c
@@ -146,7 +146,7 @@ pcb_colors_from_settings (PCBType *ptr)
  * creates a new PCB
  */
 PCBType *
-CreateNewPCB (void)
+CreateNewPCB (bool SetDefaultNames)
 {
   PCBType *ptr;
   int i;
@@ -220,19 +220,21 @@ CreateNewPCB (void)
  * pre-existing PCB.
  */
 int
-CreateNewPCBPost (PCBType *pcb)
+CreateNewPCBPost (PCBType *pcb, int use_defaults)
 {
   /* copy default settings */
   pcb_colors_from_settings (pcb);
 
-  if (ParseGroupString (Settings.Groups, &pcb->LayerGroups, &pcb->Data->LayerN))
-    return 1;
-
-  pcb->Data->Layer[top_silk_layer].Name = strdup ("top silk");
-  pcb->Data->Layer[bottom_silk_layer].Name = strdup ("bottom silk");
-  pcb->Data->Layer[top_soldermask_layer].Name = strdup ("top soldermask");
-  pcb->Data->Layer[bottom_soldermask_layer].Name = strdup ("bottom soldermask");
+  if (use_defaults)
+    {
+      if (ParseGroupString (Settings.Groups, &pcb->LayerGroups, &pcb->Data->LayerN))
+	return 1;
 
+      pcb->Data->Layer[top_silk_layer].Name = strdup ("top silk");
+      pcb->Data->Layer[bottom_silk_layer].Name = strdup ("bottom silk");
+      pcb->Data->Layer[top_soldermask_layer].Name = strdup ("top soldermask");
+      pcb->Data->Layer[bottom_soldermask_layer].Name = strdup ("bottom soldermask");
+    }
   return 0;
 }
 
diff --git a/src/create.h b/src/create.h
index f352e06..e9c2697 100644
--- a/src/create.h
+++ b/src/create.h
@@ -39,10 +39,10 @@ void CreateBeLenient (bool);
 
 DataType * CreateNewBuffer (void);
 void pcb_colors_from_settings (PCBType *);
-PCBType * CreateNewPCB ();
+PCBType * CreateNewPCB (bool);
 /* Called after PCB->Data->LayerN is set.  Returns zero if no errors,
    else nonzero.  */
-int CreateNewPCBPost (PCBType *);
+int CreateNewPCBPost (PCBType *, int /* set defaults */);
 PinType * CreateNewVia (DataType *, Coord, Coord, Coord, Coord, Coord, Coord, char *, FlagType);
 LineType * CreateDrawnLineOnLayer (LayerType *, Coord, Coord, Coord, Coord, Coord, Coord, FlagType);
 LineType * CreateNewLineOnLayer (LayerType *, Coord, Coord, Coord, Coord, Coord, Coord, FlagType);
diff --git a/src/file.c b/src/file.c
index a8ee601..3abca69 100644
--- a/src/file.c
+++ b/src/file.c
@@ -386,7 +386,7 @@ real_load_pcb (char *Filename, bool revert)
 {
   const char *unit_suffix, *grid_size;
   char *new_filename;
-  PCBType *newPCB = CreateNewPCB ();
+  PCBType *newPCB = CreateNewPCB (false);
   PCBType *oldPCB;
 #ifdef DEBUG
   double elapsed;
@@ -408,7 +408,7 @@ real_load_pcb (char *Filename, bool revert)
     {
       RemovePCB (oldPCB);
 
-      CreateNewPCBPost (PCB);
+      CreateNewPCBPost (PCB, 1);
       ResetStackAndVisibility ();
 
       /* update cursor location */
diff --git a/src/main.c b/src/main.c
index 673a7b9..a217134 100644
--- a/src/main.c
+++ b/src/main.c
@@ -1990,10 +1990,10 @@ main (int argc, char *argv[])
     }
 
   /* Create a new PCB object in memory */
-  PCB = CreateNewPCB ();
+  PCB = CreateNewPCB (true);
   ParseGroupString (Settings.Groups, &PCB->LayerGroups, &PCB->Data->LayerN);
   /* Add silk layers to newly created PCB */
-  CreateNewPCBPost (PCB);
+  CreateNewPCBPost (PCB, 1);
   if (argc > 1)
     command_line_pcb = argv[1];
 
diff --git a/src/parse_y.y b/src/parse_y.y
index eaa92c7..fe675a2 100644
--- a/src/parse_y.y
+++ b/src/parse_y.y
@@ -196,7 +196,7 @@ parsepcb
 			{
 			  PCBType *pcb_save = PCB;
 
-			  CreateNewPCBPost (yyPCB);
+			  CreateNewPCBPost (yyPCB, 1);
 			/* initialize the polygon clipping now since
 			 * we didn't know the layer grouping before.
 			 */
@@ -226,7 +226,7 @@ parsepcb
 		    if (yyPCB != NULL)
 		      {
 			/* This case is when we load a footprint with file->open, or from the command line */
-			CreateNewPCBPost (yyPCB);
+			CreateNewPCBPost (yyPCB, 1);
 			ParseGroupString("1,c:2,s", &yyPCB->LayerGroups, &yyData->LayerN);
 			e = yyPCB->Data->Element->data; /* we know there's only one */
 			PCB = yyPCB;
