Bottom: 24715b4db27963bdcdb321576847c4da74da5c02
Top:    7a349b8b2e7e99204b09eb17a355b7d16a05301b
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2014-06-28 19:43:15 +0100

Determine layer count in ParseGroupString

This may break support for reading a board without a valid Groups()
construct, although that will only affect ancient PCB files.


---

diff --git a/globalconst.h b/globalconst.h
index b7794ae..b9401ba 100755
--- a/globalconst.h
+++ b/globalconst.h
@@ -72,7 +72,6 @@
 #define	MAX_LAYER		16	/* max number of layer, check source */
 					/* code for more changes, a *lot* more changes */
 #define	MAX_GROUP		MAX_LAYER	/* max number of layer groups (should be equal to MAX_LAYER) */
-#define DEF_LAYER		8	/* default number of layers for new boards */
 #define NUM_STYLES		4
 #define	MIN_LINESIZE		MIL_TO_COORD(0.01)	/* thickness of lines */
 #define	MAX_LINESIZE		LARGE_VALUE
diff --git a/src/action.c b/src/action.c
index 8142467..8cd389c 100644
--- a/src/action.c
+++ b/src/action.c
@@ -5934,7 +5934,6 @@ ActionNew (int argc, char **argv, Coord x, Coord y)
       RemovePCB (PCB);
       PCB = NULL;
       PCB = CreateNewPCB (true);
-      PCB->Data->LayerN = DEF_LAYER;
       CreateNewPCBPost (PCB, 1);
 
       /* setup the new name and reset some values to default */
diff --git a/src/create.c b/src/create.c
index 5ea94c8..f01c118 100644
--- a/src/create.c
+++ b/src/create.c
@@ -220,7 +220,7 @@ CreateNewPCBPost (PCBType *pcb, int use_defaults)
 
   if (use_defaults)
     {
-      if (ParseGroupString (Settings.Groups, &pcb->LayerGroups, DEF_LAYER))
+      if (ParseGroupString (Settings.Groups, &pcb->LayerGroups, &pcb->Data->LayerN))
 	return 1;
 
       pcb->Data->Layer[top_silk_layer].Name = strdup ("silk");
diff --git a/src/hid/gtk/gui-config.c b/src/hid/gtk/gui-config.c
index e109593..6e37f6d 100644
--- a/src/hid/gtk/gui-config.c
+++ b/src/hid/gtk/gui-config.c
@@ -1468,7 +1468,7 @@ config_layers_apply (void)
       s = make_layer_group_string (&PCB->LayerGroups);
       if (dup_core_string (&Settings.Groups, s))
 	{
-	  ParseGroupString (Settings.Groups, &Settings.LayerGroups, max_copper_layer);
+	  ParseGroupString (Settings.Groups, &Settings.LayerGroups, &max_copper_layer);
 	  ghidgui->config_modified = TRUE;
 	}
       g_free (s);
diff --git a/src/main.c b/src/main.c
index 9521397..a6b22ad 100644
--- a/src/main.c
+++ b/src/main.c
@@ -1982,8 +1982,7 @@ main (int argc, char *argv[])
 
   /* Create a new PCB object in memory */
   PCB = CreateNewPCB (true);
-  PCB->Data->LayerN = DEF_LAYER;
-  ParseGroupString (Settings.Groups, &PCB->LayerGroups, DEF_LAYER);
+  ParseGroupString (Settings.Groups, &PCB->LayerGroups, &PCB->Data->LayerN);
   /* Add silk layers to newly created PCB */
   CreateNewPCBPost (PCB, 1);
   if (argc > 1)
diff --git a/src/misc.c b/src/misc.c
index e2644f8..fa38c85 100644
--- a/src/misc.c
+++ b/src/misc.c
@@ -987,13 +987,57 @@ error:
  * comma separated layer numbers (1,2,b:4,6,8,t)
  */
 int
-ParseGroupString (char *s, LayerGroupType *LayerGroup, int LayerN)
+ParseGroupString (char *group_string, LayerGroupType *LayerGroup, int *LayerN)
 {
+  char *s;
   int group, member, layer;
   bool c_set = false,        /* flags for the two special layers to */
     s_set = false;              /* provide a default setting for old formats */
   int groupnum[MAX_LAYER + 2];
 
+  *LayerN = 0;
+
+  /* Deterimine the maximum layer number */
+  for (s = group_string; s && *s; s++)
+    {
+      while (*s && isspace ((int) *s))
+        s++;
+
+      switch (*s)
+        {
+        case 'c':
+        case 'C':
+        case 't':
+        case 'T':
+        case 's':
+        case 'S':
+        case 'b':
+        case 'B':
+          break;
+
+        default:
+          if (!isdigit ((int) *s))
+            goto error;
+          *LayerN = MAX (*LayerN, atoi (s));
+          break;
+        }
+
+      while (*++s && isdigit ((int) *s));
+
+      /* ignore white spaces and check for separator */
+      while (*s && isspace ((int) *s))
+        s++;
+
+      if (*s == '\0')
+        break;
+
+      if (*s != ':' ||
+          *s != ',')
+        goto error;
+    }
+
+  printf ("ParseGroupString (\"%s\", %p, %p) - found %i layers\n", group_string, LayerGroup, LayerN, *LayerN);
+
   /* clear struct */
   memset (LayerGroup, 0, sizeof (LayerGroupType));
 
@@ -1002,7 +1046,9 @@ ParseGroupString (char *s, LayerGroupType *LayerGroup, int LayerN)
     groupnum[layer] = -1;
 
   /* loop over all groups */
-  for (group = 0; s && *s && group < LayerN; group++)
+  for (s = group_string, group = 0;
+       s && *s && group < *LayerN;
+       s++, group++)
     {
       while (*s && isspace ((int) *s))
         s++;
@@ -1019,7 +1065,7 @@ ParseGroupString (char *s, LayerGroupType *LayerGroup, int LayerN)
             case 'C':
             case 't':
             case 'T':
-              layer = LayerN + TOP_SILK_LAYER;
+              layer = *LayerN + TOP_SILK_LAYER;
               c_set = true;
               break;
 
@@ -1027,18 +1073,16 @@ ParseGroupString (char *s, LayerGroupType *LayerGroup, int LayerN)
             case 'S':
             case 'b':
             case 'B':
-              layer = LayerN + BOTTOM_SILK_LAYER;
+              layer = *LayerN + BOTTOM_SILK_LAYER;
               s_set = true;
               break;
 
             default:
-              if (!isdigit ((int) *s))
-                goto error;
               layer = atoi (s) - 1;
               break;
             }
-          if (layer > LayerN + MAX (BOTTOM_SILK_LAYER, TOP_SILK_LAYER) ||
-              member >= LayerN + 1)
+          if (layer > *LayerN + MAX (BOTTOM_SILK_LAYER, TOP_SILK_LAYER) ||
+              member >= *LayerN + 1)
             goto error;
           groupnum[layer] = group;
           LayerGroup->Entries[group][member++] = layer;
@@ -1049,12 +1093,8 @@ ParseGroupString (char *s, LayerGroupType *LayerGroup, int LayerN)
             s++;
           if (!*s || *s == ':')
             break;
-          if (*s != ',')
-            goto error;
         }
       LayerGroup->Number[group] = member;
-      if (*s == ':')
-        s++;
     }
 
   /* If no explicit solder or component layer group was found in the layer
@@ -1062,14 +1102,14 @@ ParseGroupString (char *s, LayerGroupType *LayerGroup, int LayerN)
    * This is done by assigning the relevant silkscreen layers to those groups.
    */
   if (!s_set)
-    LayerGroup->Entries[0][LayerGroup->Number[0]++] = LayerN + BOTTOM_SILK_LAYER;
+    LayerGroup->Entries[0][LayerGroup->Number[0]++] = *LayerN + BOTTOM_SILK_LAYER;
   if (!c_set)
-    LayerGroup->Entries[1][LayerGroup->Number[1]++] = LayerN + TOP_SILK_LAYER;
+    LayerGroup->Entries[1][LayerGroup->Number[1]++] = *LayerN + TOP_SILK_LAYER;
 
   /* Assign a unique layer group to each layer that was not explicitly
    * assigned a particular group by its presence in the layer group string.
    */
-  for (layer = 0; layer < LayerN && group < LayerN; layer++)
+  for (layer = 0; layer < *LayerN && group < *LayerN; layer++)
     if (groupnum[layer] == -1)
       {
         LayerGroup->Entries[group][0] = layer;
diff --git a/src/misc.h b/src/misc.h
index 25db4dc..635af68 100644
--- a/src/misc.h
+++ b/src/misc.h
@@ -63,7 +63,7 @@ BoxType * GetDataBoundingBox (DataType *);
 void CenterDisplay (Coord, Coord);
 void SetFontInfo (FontType *);
 char *make_route_string (RouteStyleType rs[], int n_styles);
-int ParseGroupString (char *, LayerGroupType *, int /* LayerN */);
+int ParseGroupString (char *, LayerGroupType *, int * /* LayerN */);
 int ParseRouteString (char *, RouteStyleType *, const char *);
 void QuitApplication (void);
 char *EvaluateFilename (char *, char *, char *, char *);
diff --git a/src/parse_y.y b/src/parse_y.y
index fcf57cc..dcafe11 100644
--- a/src/parse_y.y
+++ b/src/parse_y.y
@@ -75,8 +75,6 @@ extern	FontType	*yyFont;
 extern	int		yylineno;		/* linenumber */
 extern	char		*yyfilename;	/* in this file */
 
-static char *layer_group_string; 
-
 static AttributeListType *attr_list; 
 
 int yyerror(const char *s);
@@ -176,7 +174,12 @@ parsepcb
 				yyData = yyPCB->Data;
 				yyData->pcb = yyPCB;
 				yyData->LayerN = 0;
-				layer_group_string = NULL;
+				/* Parse the default layer group string, just in case the file doesn't have one */
+				if (ParseGroupString (Settings.Groups, &yyPCB->LayerGroups, &yyData->LayerN))
+				    {
+				      Message(_("illegal default layer-group string\n"));
+				      YYABORT;
+				    }
 			}
 		  pcbfileversion
 		  pcbname 
@@ -194,14 +197,7 @@ parsepcb
 			{
 			  PCBType *pcb_save = PCB;
 
-			  if (layer_group_string == NULL)
-			    layer_group_string = Settings.Groups;
 			  CreateNewPCBPost (yyPCB, 0);
-			  if (ParseGroupString(layer_group_string, &yyPCB->LayerGroups, yyData->LayerN))
-			    {
-			      Message(_("illegal layer-group string\n"));
-			      YYABORT;
-			    }
 			/* initialize the polygon clipping now since
 			 * we didn't know the layer grouping before.
 			 */
@@ -217,13 +213,14 @@ parsepcb
 		| {
 		    if (yyPCB != NULL)
 		      {
-			/* This is the case where we load a footprint with file->open, or from the command line */
+printf ("FOO\n");
+			/* This case is when we load a footprint with file->open, or from the command line */
 			yyFont = &yyPCB->Font;
 			yyData = yyPCB->Data;
 			yyData->pcb = yyPCB;
 			yyData->LayerN = 0;
-			layer_group_string = NULL;
-		      }
+		      //}
+		      } else printf ("YO\n");
 		  }
 		  element
 		  {
@@ -231,10 +228,10 @@ parsepcb
 		    ElementType *e;
 		    if (yyPCB != NULL)
 		      {
-			/* This is the case where we load a footprint with file->open, or from the command line */
-			yyData->LayerN = 2;
+printf ("BAR\n");
+			/* This case is when we load a footprint with file->open, or from the command line */
 			CreateNewPCBPost (yyPCB, 0);
-			ParseGroupString("1,c:2,s", &yyPCB->LayerGroups, yyData->LayerN);
+			ParseGroupString("1,c:2,s", &yyPCB->LayerGroups, &yyData->LayerN);
 			e = yyPCB->Data->Element->data; /* we know there's only one */
 			PCB = yyPCB;
 			MoveElementLowLevel (yyPCB->Data, e, -e->BoundingBox.X1, -e->BoundingBox.Y1);
@@ -242,7 +239,7 @@ parsepcb
 			yyPCB->MaxWidth = e->BoundingBox.X2;
 			yyPCB->MaxHeight = e->BoundingBox.Y2;
 			yyPCB->is_footprint = 1;
-		      }
+		      } else printf ("HELLO\n");
 		  }
 		;
 
@@ -627,7 +624,11 @@ Groups("1,2,c:3:4:5,6,s:7,8")
 pcbgroups
 		: T_GROUPS '(' STRING ')'
 			{
-			  layer_group_string = $3;
+			  if (ParseGroupString ($3, &yyPCB->LayerGroups, &yyData->LayerN))
+			    {
+			      Message(_("illegal layer-group string\n"));
+			      YYABORT;
+			    }
 			}
 		|
 		;
@@ -884,8 +885,6 @@ layer
                          	if (Layer->Name == NULL)
                                    Layer->Name = strdup("");
 				LayerFlag[$3-1] = true;
-				if (yyData->LayerN + 2 < $3)
-				  yyData->LayerN = $3 - 2;
 			}
 		  layerdata ')'
 		;
