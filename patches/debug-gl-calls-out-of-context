Bottom: 7d92bb0b1f73077f55d8d76b54ef4dfa6fd99313
Top:    edf04251e346dfdb6faff201a420439a236a06df
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-25 02:14:18 +0000

Debug GL calls out of context


---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index d7f1734..9ce5844 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -47,6 +47,7 @@ static hidGC current_gc = NULL;
 static char *current_color = NULL;
 static double global_alpha_mult = 1.0;
 static int alpha_changed = 0;
+static bool check_gl_drawing_ok_hack = false;
 
 
 /* Sets gport->u_gc to the "right" GC to use (wrt mask or window)
@@ -857,6 +858,9 @@ ghid_show_crosshair (gboolean show)
   static GdkColor cross_color;
   extern float global_depth;
 
+  if (!check_gl_drawing_ok_hack)
+    return;
+
   if (gport->x_crosshair < 0 || ghidgui->creating) {// || !gport->has_entered) {
     printf ("Returning\n");
     return;
@@ -1806,6 +1810,7 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
   ghid_start_drawing (port);
 
   hidgl_init ();
+  check_gl_drawing_ok_hack = true;
 
   /* If we don't have any stencil bits available,
      we can't use the hidgl polygon drawing routine */
@@ -2018,6 +2023,7 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
 
   hidgl_flush_triangles (&buffer);
 
+  check_gl_drawing_ok_hack = false;
   ghid_end_drawing (port);
 
   return FALSE;
@@ -2083,6 +2089,8 @@ ghid_pinout_preview_expose (GtkWidget *widget,
     return FALSE;
   }
 
+  check_gl_drawing_ok_hack = true;
+
   glEnable (GL_BLEND);
   glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
 
@@ -2129,6 +2137,8 @@ ghid_pinout_preview_expose (GtkWidget *widget,
   else
     glFlush ();
 
+  check_gl_drawing_ok_hack = false;
+
   /* end drawing to current GL-context */
   gdk_gl_drawable_gl_end (pGlDrawable);
 
@@ -2157,6 +2167,7 @@ ghid_render_pixmap (int cx, int cy, double zoom, int width, int height, int dept
   int save_width, save_height;
   int save_view_width, save_view_height;
   BoxType region;
+  bool save_check_gl_drawing_ok_hack;
 
   save_zoom = gport->zoom;
   save_width = gport->width;
@@ -2196,6 +2207,9 @@ ghid_render_pixmap (int cx, int cy, double zoom, int width, int height, int dept
     return NULL;
   }
 
+  save_check_gl_drawing_ok_hack = check_gl_drawing_ok_hack;
+  check_gl_drawing_ok_hack = true;
+
   glEnable (GL_BLEND);
   glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
 
@@ -2240,6 +2254,8 @@ ghid_render_pixmap (int cx, int cy, double zoom, int width, int height, int dept
 
   glFlush ();
 
+  check_gl_drawing_ok_hack = save_check_gl_drawing_ok_hack;
+
   /* end drawing to current GL-context */
   gdk_gl_drawable_gl_end (gldrawable);
 //  gdk_gl_context_destroy (glcontext);
