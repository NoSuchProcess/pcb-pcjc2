Bottom: 1b6f46bd81a3d1093d292803e60903de15f4adf0
Top:    cbb8033e60f755ec64df59d5451fb4a55c15a8fc
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-12-25 13:47:45 +0000

find.c: Remove file-global "IsBad", use PlowsPolygons() return value.

This variable was used to communicate state from the drc_callback(),
however PlowsPolygons() returns the sum of the values returned by
its callback function. As our callback returns 0 on success, 1 on
DRC failure, we know any non-zero return from PlowsPolygons()
implies a DRC problem.


---

diff --git a/src/find.c b/src/find.c
index 7e93380..dd38281 100644
--- a/src/find.c
+++ b/src/find.c
@@ -273,7 +273,6 @@ static void *thing_ptr1, *thing_ptr2, *thing_ptr3;
 static int thing_type;
 static bool User = false;    /* user action causing this */
 static bool drc = false;     /* whether to stop if finding something not found */
-static bool IsBad = false;
 static Cardinal drcerr_count;   /* count of drc errors */
 static Cardinal TotalP, TotalV, NumberOfPads[2];
 static ListType LineList[MAX_LAYER],    /* list of objects to */
@@ -3570,11 +3569,10 @@ doIsBad:
   pcb_drc_violation_free (violation);
   free (object_id_list);
   free (object_type_list);
+
   if (!throw_drc_dialog())
-    {
-      IsBad = true;
-      return 1;
-    }
+    return 1;
+
   IncrementUndoSerialNumber ();
   Undo (true);
   return 0;
@@ -3594,6 +3592,7 @@ DRCAll (void)
   DrcViolationType *violation;
   int tmpcnt;
   int nopastecnt = 0;
+  bool IsBad;
 
   reset_drc_dialog_message();
 
@@ -3668,9 +3667,11 @@ DRCAll (void)
       COPPERLINE_LOOP (PCB->Data);
       {
         /* check line clearances in polygons */
-        PlowsPolygon (PCB->Data, LINE_TYPE, layer, line, drc_callback);
-        if (IsBad)
-          break;
+        if (PlowsPolygon (PCB->Data, LINE_TYPE, layer, line, drc_callback))
+          {
+            IsBad = true;
+            break;
+          }
         if (line->Thickness < PCB->minWid)
           {
             AddObjectToFlagUndoList (LINE_TYPE, layer, line, line);
@@ -3710,9 +3711,11 @@ DRCAll (void)
     {
       COPPERARC_LOOP (PCB->Data);
       {
-        PlowsPolygon (PCB->Data, ARC_TYPE, layer, arc, drc_callback);
-        if (IsBad)
-          break;
+        if (PlowsPolygon (PCB->Data, ARC_TYPE, layer, arc, drc_callback))
+          {
+            IsBad = true;
+            break;
+          }
         if (arc->Thickness < PCB->minWid)
           {
             AddObjectToFlagUndoList (ARC_TYPE, layer, arc, arc);
@@ -3752,9 +3755,11 @@ DRCAll (void)
     {
       ALLPIN_LOOP (PCB->Data);
       {
-        PlowsPolygon (PCB->Data, PIN_TYPE, element, pin, drc_callback);
-        if (IsBad)
-          break;
+        if (PlowsPolygon (PCB->Data, PIN_TYPE, element, pin, drc_callback))
+          {
+            IsBad = true;
+            break;
+          }
         if (!TEST_FLAG (HOLEFLAG, pin) &&
             pin->Thickness - pin->DrillingHole < 2 * PCB->minRing)
           {
@@ -3826,9 +3831,11 @@ DRCAll (void)
     {
       ALLPAD_LOOP (PCB->Data);
       {
-        PlowsPolygon (PCB->Data, PAD_TYPE, element, pad, drc_callback);
-        if (IsBad)
-          break;
+        if (PlowsPolygon (PCB->Data, PAD_TYPE, element, pad, drc_callback))
+          {
+            IsBad = true;
+            break;
+          }
         if (pad->Thickness < PCB->minWid)
           {
             AddObjectToFlagUndoList (PAD_TYPE, element, pad, pad);
@@ -3868,9 +3875,11 @@ DRCAll (void)
     {
       VIA_LOOP (PCB->Data);
       {
-        PlowsPolygon (PCB->Data, VIA_TYPE, via, via, drc_callback);
-        if (IsBad)
-          break;
+        if (PlowsPolygon (PCB->Data, VIA_TYPE, via, via, drc_callback))
+          {
+            IsBad = true;
+            break;
+          }
         if (!TEST_FLAG (HOLEFLAG, via) &&
             via->Thickness - via->DrillingHole < 2 * PCB->minRing)
           {
