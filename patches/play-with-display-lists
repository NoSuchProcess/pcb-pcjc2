Bottom: 5b9fcb8ca0e7b11b4983d1cf19426abd9adaf675
Top:    b1e7d9d7ba66e8a87f6dbc28c6a90fdf0382ae46
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-08-24 00:48:14 +0100

Play with display lists


---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index ea63be6..65ecbce 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1563,6 +1563,8 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
                              GdkEventExpose *ev,
                              GHidPort *port)
 {
+  static int one_shot = 1;
+  static int display_list;
   BoxType region;
   int eleft, eright, etop, ebottom;
   int min_x, min_y;
@@ -1607,6 +1609,13 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
   glTranslatef (-widget->allocation.width / 2., -widget->allocation.height / 2., 0);
   glGetFloatv (GL_MODELVIEW_MATRIX, (GLfloat *)last_modelview_matrix);
 
+#if 0
+  if (one_shot) {
+
+    display_list = glGenLists(1);
+    glNewList (display_list, GL_COMPILE);
+#endif
+
   glEnable (GL_STENCIL_TEST);
   glClearColor (gport->offlimits_color.red / 65535.,
                 gport->offlimits_color.green / 65535.,
@@ -1742,6 +1751,15 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
   hidgl_flush_triangles (&buffer);
   glPopMatrix ();
 
+#if 0
+    glEndList ();
+    one_shot = 0;
+  } else {
+    /* Second and subsequent times */
+    glCallList (display_list);
+  }
+#endif
+
   ghid_show_crosshair (TRUE);
 
   hidgl_flush_triangles (&buffer);
