Bottom: 44042ad2145015cebb119139a59892473cc8bbe7
Top:    f05c6efb04da89be0d9ef97dea2ce8efb294df63
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-10-24 19:02:42 +0100

Play with display lists


---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index c8c47db..7190c76 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1732,6 +1732,8 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
                              GdkEventExpose *ev,
                              GHidPort *port)
 {
+  static int one_shot = 1;
+  static int display_list;
   BoxType region;
   int eleft, eright, etop, ebottom;
   int min_x, min_y;
@@ -1776,6 +1778,13 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
   glTranslatef (-widget->allocation.width / 2., -widget->allocation.height / 2., 0);
   glGetFloatv (GL_MODELVIEW_MATRIX, (GLfloat *)last_modelview_matrix);
 
+#if 0
+  if (one_shot) {
+
+    display_list = glGenLists(1);
+    glNewList (display_list, GL_COMPILE);
+#endif
+
   glEnable (GL_STENCIL_TEST);
   glClearColor (port->offlimits_color.red / 65535.,
                 port->offlimits_color.green / 65535.,
@@ -1911,6 +1920,15 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
   hidgl_flush_triangles (&buffer);
   glPopMatrix ();
 
+#if 0
+    glEndList ();
+    one_shot = 0;
+  } else {
+    /* Second and subsequent times */
+    glCallList (display_list);
+  }
+#endif
+
   ghid_show_crosshair (TRUE);
 
   hidgl_flush_triangles (&buffer);
