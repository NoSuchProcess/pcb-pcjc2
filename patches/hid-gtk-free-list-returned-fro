Bottom: b4db52ff5ea3c236b6b952a4c9d74bd00fd16a58
Top:    65f42312bd58f218afc8ed030c8c7356927f8bfc
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-09-05 16:42:59 +0100

hid/gtk: Free list returned from gtk_container_get_children()

We can (and should) g_list_free() the list of children returned when
we are finished with it.

Whilst we are at it, convert the while loop to a for loop and use a
tighter condition on the loop termination test. The existing test worked,
but would leave a negative number in the object counter we test against.
This would not work if the object counters were ever unsigned integers
(as they might plausibly be).


---

diff --git a/src/hid/gtk/ghid-main-menu.c b/src/hid/gtk/ghid-main-menu.c
index 9ac0367..d816498 100644
--- a/src/hid/gtk/ghid-main-menu.c
+++ b/src/hid/gtk/ghid-main-menu.c
@@ -519,7 +519,7 @@ void
 ghid_main_menu_install_layer_selector (GHidMainMenu *mm,
                                        GHidLayerSelector *ls)
 {
-  GList *children;
+  GList *children, *iter;
 
   /* @layerview */
   if (mm->layer_view_shell)
@@ -527,13 +527,13 @@ ghid_main_menu_install_layer_selector (GHidMainMenu *mm,
       /* Remove old children */
       children = gtk_container_get_children
                    (GTK_CONTAINER (mm->layer_view_shell));
-      children = g_list_nth (children, mm->layer_view_pos);
-      while (children && mm->n_layer_views--)
-        {
-          gtk_container_remove (GTK_CONTAINER (mm->layer_view_shell),
-                                children->data);
-          children = g_list_next (children);
-        }
+      for (iter = g_list_nth (children, mm->layer_view_pos);
+           iter != NULL && mm->n_layer_views > 0;
+           iter = g_list_next (iter), mm->n_layer_views --)
+        gtk_container_remove (GTK_CONTAINER (mm->layer_view_shell),
+                              iter->data);
+      g_list_free (children);
+
       /* Install new ones */
       mm->n_layer_views = ghid_layer_selector_install_view_items
                             (ls, mm->layer_view_shell, mm->layer_view_pos);
@@ -545,13 +545,13 @@ ghid_main_menu_install_layer_selector (GHidMainMenu *mm,
       /* Remove old children */
       children = gtk_container_get_children
                    (GTK_CONTAINER (mm->layer_pick_shell));
-      children = g_list_nth (children, mm->layer_pick_pos);
-      while (children && mm->n_layer_picks--)
-        {
-          gtk_container_remove (GTK_CONTAINER (mm->layer_pick_shell),
-                                children->data);
-          children = g_list_next (children);
-        }
+      for (iter = g_list_nth (children, mm->layer_pick_pos);
+           iter != NULL && mm->n_layer_picks > 0;
+           iter = g_list_next (iter), mm->n_layer_picks --)
+        gtk_container_remove (GTK_CONTAINER (mm->layer_pick_shell),
+                              iter->data);
+      g_list_free (children);
+
       /* Install new ones */
       mm->n_layer_picks = ghid_layer_selector_install_pick_items
                             (ls, mm->layer_pick_shell, mm->layer_pick_pos);
@@ -563,20 +563,19 @@ void
 ghid_main_menu_install_route_style_selector (GHidMainMenu *mm,
                                              GHidRouteStyleSelector *rss)
 {
-  GList *children;
+  GList *children, *iter;
   /* @routestyles */
   if (mm->route_style_shell)
     {
       /* Remove old children */
       children = gtk_container_get_children
                    (GTK_CONTAINER (mm->route_style_shell));
-      children = g_list_nth (children, mm->route_style_pos);
-      while (children && mm->n_route_styles--)
-        {
-          gtk_container_remove (GTK_CONTAINER (mm->route_style_shell),
-                                children->data);
-          children = g_list_next (children);
-        }
+      for (iter = g_list_nth (children, mm->route_style_pos);
+           iter != NULL && mm->n_route_styles > 0;
+           iter = g_list_next (iter), mm->n_route_styles --)
+        gtk_container_remove (GTK_CONTAINER (mm->route_style_shell),
+                              iter->data);
+      g_list_free (children);
       /* Install new ones */
       mm->n_route_styles = ghid_route_style_selector_install_items
                              (rss, mm->route_style_shell, mm->route_style_pos);
