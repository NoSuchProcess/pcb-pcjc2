Bottom: f241e768998e1073e20ca1e8ad4b559b021a9164
Top:    f411c2c57d07cf5d7a0e7b1f931a0b1a68839241
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-11-13 01:05:27 +0000

hid/common: Fix memory leak in polygon NoHoles clipping routine

poly_CopyContour creates the edge tree, as does ContourToPoly(),
which overwrite the one created in poly_CopyContour().

Replace call to ContourToPoly() with a discrete alternative without
the poly_PreContour() call.

Also, don't try to poly_Free() the output of poly_Boolean_free() in
an error condition. poly_Boolean_free() re-uses the A input polygon
for its output, so attempting to free that might be dangerous.

poly_Boolean_free() should free its inputs (and any partial output)
if it encounters an error.


---

diff --git a/src/hid/common/draw_helpers.c b/src/hid/common/draw_helpers.c
index 81fb850..5020745 100644
--- a/src/hid/common/draw_helpers.c
+++ b/src/hid/common/draw_helpers.c
@@ -76,16 +76,11 @@ fill_clipped_contour (hidGC gc, PLINE *pl, const BoxType *clip_box)
   clip_poly = RectPoly (clip_box->X1, clip_box->X2,
                         clip_box->Y1, clip_box->Y2);
   poly_CopyContour (&pl_copy, pl);
-  piece_poly = ContourToPoly (pl_copy);
+  piece_poly = poly_Create ();
+  poly_InclContour (piece_poly, pl_copy);
   x = poly_Boolean_free (piece_poly, clip_poly,
                          &clipped_pieces, PBO_ISECT);
-  if (x != err_ok)
-    {
-      poly_Free (&clipped_pieces);
-      return;
-    }
-
-  if (clipped_pieces == NULL)
+  if (x != err_ok || clipped_pieces == NULL)
     return;
 
   draw_piece = clipped_pieces;
