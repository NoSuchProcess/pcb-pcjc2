Bottom: 2eee8982fcd1e14263d58ade8080438507ed1862
Top:    ae9f4dbeacfeb5bd98658f9a56935c7e8a41566b
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2013-01-03 17:10:47 +0000

find.c: Fix possible un-assigned use of "flag" in DRCFind(), fix bloated test.

Caught by inspection.. no idea why the compiler didn't notice.

Before commit 4cbfadfb7a496e60c25f47c88bdb374b4d3777bb, our local "flag"
variable was the file-global "TheFlag". If the "shrink" test was not run,
the code called ClearFlagOnAllObjects() with the previously assigned
"TheFlag". After the above commit, we would use "flag" unassigned.

If the shrink test is executed, the "FOUNDFLAG" is cleared from objects,
leaving a SELECTEDFLAG image on the copper in question as a reference to
compare against when considering the bloated geometry. (This is the wrong
reference, as we should be comparing against the non-shrunk case).

If the shrink test was not run, we left no reference for the boated test.

We should clear FOUNDFLAG _and_ SELECTEDFLAG after the shrunk test, then
construct a new reference to start with, using non-bloated geometry.

This partly fies the behaviour of the bloated test, as it is now run
against a non-bloated reference, not a shrunk reference. This fixes
false reports of "Copper areas too close" for track objects encountered
after a "Potential for broken trace" warning.

There are still other issues with the bloated DRC test. One important one
is that it may run multiple times on the same geometry if a "Potential
for broken trace" error is present, or if the "shrink" test is not run.

The repeated runs are because in the "Potential for broken trace" case,
only part of the track (or none if we skip the shrink test) will get the
DRCFLAG set. DRCFind then will be called repeatedly on all pins, pads and
vias, despite having already touched the geometry with the bloated test.
To fix this, we need to separate the shrink and bloat tests into distinct
passes, and set the DRCFLAG on objects during both tests. We can't simply
set the DRCFLAG from the bloated test as it stands, as doing so would
mask investigating "Potential for broken trace" cases after the first
encountered.

An example of false "Copper areas too close" being fixed by this commit
is the following test-case:

FileVersion[20091103]
PCB["" 65.000mm 15.0000mm]

Grid[984.251969 0.0000 0.0000 1]
PolyArea[3100.006200]
Thermal[0.500000]
DRC[0.5000mm 0.5000mm 0.5000mm 0.2500mm 0.4000mm 0.5000mm]
Flags("nameonpcb,uniquename,clearnew,snappin")
Groups("1,c:2,s:3:4")
Styles["Signal,0.5000mm,1.0000mm,0.5000mm,0.2500mm:Power,25.00mil,60.00mil,35.00mil,10.00mil:Fat,40.00mil,60.00mil,35.00mil,10.00mil:Skinny,6.00mil,24.02mil,11.81mil,6.00mil"]

Attribute("PCB::grid::unit" "mm")
Attribute("PCB::grid::size" "0.2500mm")

Via[9.7500mm 7.2500mm 1.6000mm 0.5000mm 0.0000 0.5000mm "" ""]
Via[53.5000mm 7.2500mm 1.6000mm 0.5000mm 0.0000 0.5000mm "" ""]
Layer(1 "top")
(
	Line[9.7500mm 8.5000mm 28.0000mm 8.5000mm 0.5000mm 0.5000mm "clearline"]
	Line[9.7500mm 7.2500mm 9.7500mm 8.5000mm 0.5000mm 0.5000mm "clearline"]
	Line[28.2500mm 8.5000mm 53.5000mm 8.5000mm 0.5000mm 0.5000mm "clearline"]
	Line[53.5000mm 7.2500mm 53.5000mm 8.5000mm 0.5000mm 0.5000mm "clearline"]
)
Layer(2 "bottom")
(
)
Layer(3 "silk")
(
)
Layer(4 "silk")
(
)


---

diff --git a/src/find.c b/src/find.c
index e63572e..9198df4 100644
--- a/src/find.c
+++ b/src/find.c
@@ -3396,7 +3396,13 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
     }
   /* now check the bloated condition */
   drc = false;
+  flag = FOUNDFLAG | SELECTEDFLAG;
   ClearFlagOnAllObjects (false, flag);
+  Bloat = 0;
+  flag = SELECTEDFLAG;
+  ListStart (What, ptr1, ptr2, ptr3, flag);
+  DoIt (flag, true, false);
+  DumpList ();
   flag = FOUNDFLAG;
   ListStart (What, ptr1, ptr2, ptr3, flag);
   Bloat = PCB->Bloat;
