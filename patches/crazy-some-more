Bottom: 72ad55afd8e805b3c12e858b042eb2a3c74ea78e
Top:    67ab7ebe286d7bc94391b8177e4b0e78e641dd73
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-30 15:20:42 +0100

Crazy some more


---

diff --git a/src/draw.c b/src/draw.c
index d8b5e03..7bbbc08 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -83,7 +83,6 @@ static bool doing_assy = false;
  * some local prototypes
  */
 static void DrawEverything (BoxTypePtr);
-static void DrawPPV (int group, const BoxType *);
 static int DrawLayerGroup (int, const BoxType *);
 static void AddPart (void *);
 static void DrawEMark (ElementTypePtr, LocationType, LocationType, bool);
@@ -142,22 +141,6 @@ set_pv_color (PinType *pv, int type)
 }
 
 static int
-pin_callback (const BoxType * b, void *cl)
-{
-  set_pv_color ((PinType *)b, PIN_TYPE);
-  dapi->draw_pin ((PinType *)b, NULL, NULL);
-  return 1;
-}
-
-static int
-via_callback (const BoxType * b, void *cl)
-{
-  set_pv_color ((PinType *)b, VIA_TYPE);
-  dapi->draw_via ((PinType *)b, NULL, NULL);
-  return 1;
-}
-
-static int
 pad_callback (const BoxType * b, void *cl)
 {
   PadTypePtr pad = (PadTypePtr) b;
@@ -248,54 +231,6 @@ EMark_callback (const BoxType * b, void *cl)
   return 1;
 }
 
-static int
-pin_hole_callback (const BoxType * b, void *cl)
-{
-  PinType *pin = (PinType*)b;
-  int plated = cl ? *(int *) cl : -1;
-
-  if ((plated == 0 && !TEST_FLAG (HOLEFLAG, pin)) ||
-      (plated == 1 &&  TEST_FLAG (HOLEFLAG, pin)))
-    return 1;
-
-  if (TEST_FLAG (WARNFLAG, pin))          gui->set_color (Output.fgGC, PCB->WarnColor);
-  else if (TEST_FLAG (SELECTEDFLAG, pin)) gui->set_color (Output.fgGC, PCB->PinSelectedColor);
-  else                                    gui->set_color (Output.fgGC, Settings.BlackColor);
-
-  dapi->draw_pin_hole (pin, NULL, NULL);
-  return 1;
-}
-
-static int
-via_hole_callback (const BoxType * b, void *cl)
-{
-  PinType *via = (PinType*)b;
-  int plated = cl ? *(int *) cl : -1;
-
-  if ((plated == 0 && !TEST_FLAG (HOLEFLAG, via)) ||
-      (plated == 1 &&  TEST_FLAG (HOLEFLAG, via)))
-    return 1;
-
-  if (TEST_FLAG (WARNFLAG, via))          gui->set_color (Output.fgGC, PCB->WarnColor);
-  else if (TEST_FLAG (SELECTEDFLAG, via)) gui->set_color (Output.fgGC, PCB->ViaSelectedColor);
-  else                                    gui->set_color (Output.fgGC, Settings.BlackColor);
-
-  dapi->draw_via_hole (via, NULL, NULL);
-  return 1;
-}
-
-static void
-DrawHoles (bool draw_plated, bool draw_unplated, BoxType *drawn_area)
-{
-  int plated = -1;
-
-  if ( draw_plated && !draw_unplated) plated = 1;
-  if (!draw_plated &&  draw_unplated) plated = 0;
-
-  r_search (PCB->Data->pin_tree, drawn_area, NULL, pin_hole_callback, &plated);
-  r_search (PCB->Data->via_tree, drawn_area, NULL, via_hole_callback, &plated);
-}
-
 typedef struct
 {
   int nplated;
@@ -389,7 +324,7 @@ PrintAssembly (int side, const BoxType * drawn_area)
 
   gui->set_draw_faded (Output.fgGC, 1);
   DrawLayerGroup (side_group, drawn_area);
-  DrawPPV (side_group, drawn_area);
+  dapi->draw_ppv (side_group, drawn_area, NULL);
   gui->set_draw_faded (Output.fgGC, 0);
 
   /* draw package */
@@ -452,7 +387,7 @@ DrawEverything (BoxTypePtr drawn_area)
 
       if (gui->set_layer (0, group, 0))
         if (DrawLayerGroup (group, drawn_area) && !gui->gui)
-          DrawPPV (group, drawn_area);
+          dapi->draw_ppv (group, drawn_area, NULL);
     }
 
   if (TEST_FLAG (CHECKPLANESFLAG, PCB) && gui->gui)
@@ -460,16 +395,16 @@ DrawEverything (BoxTypePtr drawn_area)
 
   /* Draw pins, pads, vias below silk */
   if (gui->gui)
-    DrawPPV (SWAP_IDENT ? solder : component, drawn_area);
+    dapi->draw_ppv (SWAP_IDENT ? solder : component, drawn_area, NULL);
   else
     {
       CountHoles (&plated, &unplated, drawn_area);
 
       if (plated && gui->set_layer ("plated-drill", SL (PDRILL, 0), 0))
-        DrawHoles (true, false, drawn_area);
+        dapi->draw_holes (1, drawn_area, NULL);
 
       if (unplated && gui->set_layer ("unplated-drill", SL (PDRILL, 0), 0))
-        DrawHoles (false, true, drawn_area);
+        dapi->draw_holes (0, drawn_area, NULL);
     }
 
   /* Draw the solder mask if turned on */
@@ -557,46 +492,6 @@ DrawEMark (ElementTypePtr e, LocationType X, LocationType Y,
     }
 }
 
-/* ---------------------------------------------------------------------------
- * Draws pins pads and vias - Always draws for non-gui HIDs,
- * otherwise drawing depends on PCB->PinOn and PCB->ViaOn
- */
-static void
-DrawPPV (int group, const BoxType *drawn_area)
-{
-  int component_group = GetLayerGroupNumberByNumber (component_silk_layer);
-  int solder_group = GetLayerGroupNumberByNumber (solder_silk_layer);
-  int side;
-
-  if (PCB->PinOn || !gui->gui)
-    {
-      /* draw element pins */
-      r_search (PCB->Data->pin_tree, drawn_area, NULL, pin_callback, NULL);
-
-      /* draw element pads */
-      if (group == component_group)
-        {
-          side = COMPONENT_LAYER;
-          r_search (PCB->Data->pad_tree, drawn_area, NULL, pad_callback, &side);
-        }
-
-      if (group == solder_group)
-        {
-          side = SOLDER_LAYER;
-          r_search (PCB->Data->pad_tree, drawn_area, NULL, pad_callback, &side);
-        }
-    }
-
-  /* draw vias */
-  if (PCB->ViaOn || !gui->gui)
-    {
-      r_search (PCB->Data->via_tree, drawn_area, NULL, via_callback, NULL);
-      r_search (PCB->Data->via_tree, drawn_area, NULL, via_hole_callback, NULL);
-    }
-  if (PCB->PinOn || doing_assy)
-    r_search (PCB->Data->pin_tree, drawn_area, NULL, pin_hole_callback, NULL);
-}
-
 static int
 pin_mask_callback (const BoxType * b, void *cl)
 {
diff --git a/src/draw_funcs.c b/src/draw_funcs.c
index 839d777..28ab8d4 100644
--- a/src/draw_funcs.c
+++ b/src/draw_funcs.c
@@ -337,6 +337,94 @@ via_hole_callback (const BoxType * b, void *cl)
 }
 
 static void
+set_pv_color (PinType *pv, int type)
+{
+  if (TEST_FLAG (WARNFLAG, pv))          gui->set_color (Output.fgGC, PCB->WarnColor);
+  else if (TEST_FLAG (SELECTEDFLAG, pv)) gui->set_color (Output.fgGC, (type == VIA_TYPE) ? PCB->ViaSelectedColor
+                                                                                         : PCB->PinSelectedColor);
+  else if (TEST_FLAG (FOUNDFLAG, pv))    gui->set_color (Output.fgGC, PCB->ConnectedColor);
+  else                                   gui->set_color (Output.fgGC, (type == VIA_TYPE) ? PCB->ViaColor
+                                                                                         : PCB->PinColor);
+}
+
+static int
+pin_callback (const BoxType * b, void *cl)
+{
+  set_pv_color ((PinType *)b, PIN_TYPE);
+  dapi->draw_pin ((PinType *)b, NULL, NULL);
+  return 1;
+}
+
+static int
+via_callback (const BoxType * b, void *cl)
+{
+  set_pv_color ((PinType *)b, VIA_TYPE);
+  dapi->draw_via ((PinType *)b, NULL, NULL);
+  return 1;
+}
+
+static int
+pad_callback (const BoxType * b, void *cl)
+{
+  PadTypePtr pad = (PadTypePtr) b;
+  int *side = cl;
+
+  if (ON_SIDE (pad, *side))
+    {
+      if (TEST_FLAG (WARNFLAG, pad))          gui->set_color (Output.fgGC, PCB->WarnColor);
+      else if (TEST_FLAG (SELECTEDFLAG, pad)) gui->set_color (Output.fgGC, PCB->PinSelectedColor);
+      else if (TEST_FLAG (FOUNDFLAG, pad))    gui->set_color (Output.fgGC, PCB->ConnectedColor);
+      else if (FRONT (pad))                   gui->set_color (Output.fgGC, PCB->PinColor);
+      else                                    gui->set_color (Output.fgGC, PCB->InvisibleObjectsColor);
+
+      dapi->draw_pad (pad, NULL, NULL);
+    }
+  return 1;
+}
+
+static void
+draw_ppv (int group, const BoxType *drawn_area, void *userdata)
+{
+  int component_group = GetLayerGroupNumberByNumber (component_silk_layer);
+  int solder_group = GetLayerGroupNumberByNumber (solder_silk_layer);
+  int side;
+
+  if (PCB->PinOn || !gui->gui)
+    {
+      /* draw element pins */
+      r_search (PCB->Data->pin_tree, drawn_area, NULL, pin_callback, NULL);
+
+      /* draw element pads */
+      if (group == component_group)
+        {
+          side = COMPONENT_LAYER;
+          r_search (PCB->Data->pad_tree, drawn_area, NULL, pad_callback, &side);
+        }
+
+      if (group == solder_group)
+        {
+          side = SOLDER_LAYER;
+          r_search (PCB->Data->pad_tree, drawn_area, NULL, pad_callback, &side);
+        }
+    }
+
+  /* draw vias */
+  if (PCB->ViaOn)
+    r_search (PCB->Data->via_tree, drawn_area, NULL, via_callback, NULL);
+
+  dapi->draw_holes (-1, drawn_area, NULL);
+}
+
+static void
+draw_holes (int plated, const BoxType *drawn_area, void *userdata)
+{
+  if (PCB->PinOn)
+    r_search (PCB->Data->pin_tree, drawn_area, NULL, pin_hole_callback, &plated);
+  if (PCB->ViaOn)
+    r_search (PCB->Data->via_tree, drawn_area, NULL, via_hole_callback, &plated);
+}
+
+static void
 draw_layer (LayerType *layer, const BoxType *drawn_area, void *userdata)
 {
   int component_group = GetLayerGroupNumberByNumber (component_silk_layer);
@@ -351,13 +439,8 @@ draw_layer (LayerType *layer, const BoxType *drawn_area, void *userdata)
   if (TEST_FLAG (CHECKPLANESFLAG, PCB))
     return;
 
-  /* draw all visible lines this layer */
   r_search (layer->line_tree, drawn_area, NULL, line_callback, layer);
-
-  /* draw the layer arcs on drawn_area */
-  r_search (layer->arc_tree, drawn_area, NULL, arc_callback, layer);
-
-  /* draw the layer text on drawn_area */
+  r_search (layer->arc_tree,  drawn_area, NULL, arc_callback,  layer);
   r_search (layer->text_tree, drawn_area, NULL, text_callback, layer);
 
   /* We should check for gui->gui here, but it's kinda cool seeing the
@@ -380,14 +463,6 @@ draw_layer (LayerType *layer, const BoxType *drawn_area, void *userdata)
   if (layer_num >= max_copper_layer)
     return;
 
-#if 0
-  /* Don't draw vias on layers which are out of the layer stack */
-  if ((group >= component_group && group >= solder_group) ||
-      (group <= component_group && group <= solder_group))
-    return;
-#endif
-
-  /* draw element pins */
   r_search (PCB->Data->pin_tree, drawn_area, NULL, pin_inlayer_callback, layer);
 
   /* draw element pads */
@@ -417,6 +492,9 @@ struct draw_funcs d_f = {
   .draw_rat       = draw_rat,
   .draw_arc       = draw_arc,
   .draw_poly      = draw_poly,
+
+  .draw_ppv       = draw_ppv,
+  .draw_holes     = draw_holes,
   .draw_layer     = draw_layer,
 };
 
diff --git a/src/draw_funcs.h b/src/draw_funcs.h
index 9f21809..ba4982d 100644
--- a/src/draw_funcs.h
+++ b/src/draw_funcs.h
@@ -12,6 +12,8 @@ struct draw_funcs {
   void (*draw_rat)       (RatType *,     const BoxType *, void *);
   void (*draw_arc)       (ArcType *,     const BoxType *, void *);
   void (*draw_poly)      (PolygonType *, const BoxType *, void *);
+  void (*draw_ppv)       (int,           const BoxType *, void *);
+  void (*draw_holes)     (int,           const BoxType *, void *);
   void (*draw_layer)     (LayerType *,   const BoxType *, void *);
 };
