Bottom: 8edb67e194f7176946b7ca5639d7a1a87ca9b251
Top:    b1877fbf1dadaefa4b156f62a2dda17c6edc03ff
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-02-02 05:35:59 +0000

Fiddle with the order objects are clipped from pours

Seems to save a little bit of time clipping polygons at startup. It seems
that clipping simpler, but common objects first, such as lines, means
those clips go faster. We then clip the more complex items which introduce
more complexity to the polygons.








---

diff --git a/src/pour.c b/src/pour.c
index 5fe398e..f2f8519 100644
--- a/src/pour.c
+++ b/src/pour.c
@@ -637,16 +637,17 @@ ClearPour (DataTypePtr Data, LayerTypePtr Layer, PourType * pour,
 
   if (setjmp (info.env) == 0)
     {
-      r  = r_search (Data->via_tree, &region, NULL, pin_sub_callback, &info);
-      r += r_search (Data->pin_tree, &region, NULL, pin_sub_callback, &info);
+      r = 0;
       GROUP_LOOP (Data, group);
       {
+        r += r_search (layer->pour_tree, &region, NULL, pour_sub_callback, &info);
         r += r_search (layer->line_tree, &region, NULL, line_sub_callback, &info);
         r += r_search (layer->arc_tree,  &region, NULL, arc_sub_callback,  &info);
         r += r_search (layer->text_tree, &region, NULL, text_sub_callback, &info);
-        r += r_search (layer->pour_tree, &region, NULL, pour_sub_callback, &info);
       }
       END_LOOP;
+      r += r_search (Data->via_tree, &region, NULL, pin_sub_callback, &info);
+      r += r_search (Data->pin_tree, &region, NULL, pin_sub_callback, &info);
       if (info.solder || group == Group (Data, max_layer + COMPONENT_LAYER))
         r += r_search (Data->pad_tree, &region, NULL, pad_sub_callback, &info);
     }
