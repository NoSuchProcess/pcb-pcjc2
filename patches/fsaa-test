Bottom: f6e5d722efdd096b7c1c146c7693eadc97050f0f
Top:    a55aa671e92ec72e0cb63694778b43539464ff02
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-01-25 20:52:47 +0000

FSAA test

NB: This requires a patched libgtkglext - revert this patch to un-break
build without that patch


---

diff --git a/0001-FSAA-PATCH-FOUND-FROM-INTERWEBS.patch b/0001-FSAA-PATCH-FOUND-FROM-INTERWEBS.patch
new file mode 100644
index 0000000..a1ec90f
--- /dev/null
+++ b/0001-FSAA-PATCH-FOUND-FROM-INTERWEBS.patch
@@ -0,0 +1,153 @@
+From ee73c6f6ba6e3a5f1b85256b7797c4f771e3af8b Mon Sep 17 00:00:00 2001
+From: Peter Clifton <pcjc2@cam.ac.uk>
+Date: Tue, 25 Jan 2011 20:49:21 +0000
+Subject: [PATCH] FSAA PATCH FOUND FROM INTERWEBS
+
+---
+ Makefile.am               |    2 +-
+ examples/simple.c         |   19 ++++++++++++++++++-
+ gdk/gdkglconfig.c         |   17 +++++++++++++++++
+ gdk/gdkglconfig.h         |    9 ++++++++-
+ gdk/x11/gdkglconfig-x11.c |   14 ++++++++++++--
+ 5 files changed, 56 insertions(+), 5 deletions(-)
+
+diff --git a/Makefile.am b/Makefile.am
+index ab78753..e510678 100644
+--- a/Makefile.am
++++ b/Makefile.am
+@@ -1,7 +1,7 @@
+ ## -*- Makefile -*-
+ ## Makefile.am for gtkglext
+ 
+-SUBDIRS = gdk gtk docs examples
++SUBDIRS = gdk gtk docs #examples
+ 
+ ACLOCAL_AMFLAGS = -I m4macros
+ DISTCHECK_CONFIGURE_FLAGS = --enable-gtk-doc
+diff --git a/examples/simple.c b/examples/simple.c
+index 3c0ea98..a11547a 100644
+--- a/examples/simple.c
++++ b/examples/simple.c
+@@ -181,6 +181,8 @@ examine_gl_config_attrib (GdkGLConfig *glconfig)
+   print_gl_config_attrib (glconfig, "GDK_GL_ACCUM_GREEN_SIZE", GDK_GL_ACCUM_GREEN_SIZE, FALSE);
+   print_gl_config_attrib (glconfig, "GDK_GL_ACCUM_BLUE_SIZE",  GDK_GL_ACCUM_BLUE_SIZE,  FALSE);
+   print_gl_config_attrib (glconfig, "GDK_GL_ACCUM_ALPHA_SIZE", GDK_GL_ACCUM_ALPHA_SIZE, FALSE);
++  print_gl_config_attrib (glconfig, "GDK_GL_SAMPLE_BUFFERS",   GDK_GL_SAMPLE_BUFFERS,   FALSE);
++  pring_gl_config_attrib (glconfig, "GDK_GL_SAMPLES",          GDK_GL_SAMPLES,          FALSE);
+ 
+   g_print ("\n");
+ }
+@@ -224,7 +226,22 @@ main (int   argc,
+   /* Try double-buffered visual */
+   glconfig = gdk_gl_config_new_by_mode (GDK_GL_MODE_RGB    |
+                                         GDK_GL_MODE_DEPTH  |
+-                                        GDK_GL_MODE_DOUBLE);
++                                        GDK_GL_MODE_DOUBLE |
++                                        GDK_GL_MODE_MULTISAMPLE |
++                                        /* 2x FSAA */
++                                        (2 << GDK_GL_MODE_SAMPLES_SHIFT));
++  
++    if (glconfig == NULL)
++    {
++      g_print ("*** Cannot find a multisampled visual.\n");
++      g_print ("*** Trying without FSAA.\n");
++
++      /* Try single-buffered visual */
++      glconfig = gdk_gl_config_new_by_mode (GDK_GL_MODE_RGB    |
++                                        GDK_GL_MODE_DEPTH  |
++                                        GDK_GL_MODE_DOUBLE );
++    }
++  
+   if (glconfig == NULL)
+     {
+       g_print ("*** Cannot find the double-buffered visual.\n");
+diff --git a/gdk/gdkglconfig.c b/gdk/gdkglconfig.c
+index 3d30b7c..71067ec 100644
+--- a/gdk/gdkglconfig.c
++++ b/gdk/gdkglconfig.c
+@@ -99,6 +99,8 @@ gdk_gl_config_new_ci (GdkScreen       *screen,
+   return NULL;
+ }
+ 
++#define GDK_GL_MODE_SAMPLES_MASK 0xff000000
++
+ static GdkGLConfig *
+ gdk_gl_config_new_rgb (GdkScreen       *screen,
+                        GdkGLConfigMode  mode)
+@@ -150,6 +152,21 @@ gdk_gl_config_new_rgb (GdkScreen       *screen,
+           list[n++] = 1;
+         }
+     }
++  if (mode & GDK_GL_MODE_MULTISAMPLE)
++    {
++       list[n++] = GDK_GL_SAMPLE_BUFFERS;
++       list[n++] = 1;
++       if (mode & GDK_GL_MODE_SAMPLES_MASK)
++         {
++            list[n++] = GDK_GL_SAMPLES;
++            list[n++] = (mode & GDK_GL_MODE_SAMPLES_MASK) >> GDK_GL_MODE_SAMPLES_SHIFT;
++         }
++       else /* Default to 2xFSAA */
++         {
++            list[n++] = GDK_GL_SAMPLES;
++            list[n++] = 2;
++         }
++    }
+   list[n] = GDK_GL_ATTRIB_LIST_NONE;
+ 
+   return gdk_gl_config_new_for_screen (screen, list);
+diff --git a/gdk/gdkglconfig.h b/gdk/gdkglconfig.h
+index d877b0e..a087235 100644
+--- a/gdk/gdkglconfig.h
++++ b/gdk/gdkglconfig.h
+@@ -41,7 +41,8 @@ typedef enum
+   GDK_GL_MODE_DEPTH       = 1 << 4,
+   GDK_GL_MODE_STENCIL     = 1 << 5,
+   GDK_GL_MODE_ACCUM       = 1 << 6,
+-  GDK_GL_MODE_MULTISAMPLE = 1 << 7   /* not supported yet */
++  GDK_GL_MODE_MULTISAMPLE = 1 << 7,
++  GDK_GL_MODE_SAMPLES_SHIFT = 24 /* Upper 8 bits reserved to select FSAA level */
+ } GdkGLConfigMode;
+ 
+ typedef struct _GdkGLConfigClass GdkGLConfigClass;
+@@ -71,6 +72,12 @@ struct _GdkGLConfig
+   guint has_depth_buffer   : 1;
+   guint has_stencil_buffer : 1;
+   guint has_accum_buffer   : 1;
++  /* TODO: When ready to break ABI, enable the following, and remove n_sample_buffers
++   * According to the spec, GLX_SAMPLE_BUFFERS_ARB has no meaning for values > 1
++   * See also gdkglconfig-x11.c
++  guint n_sample_buffers   : 1;
++  guint n_samples;
++  */
+ };
+ 
+ struct _GdkGLConfigClass
+diff --git a/gdk/x11/gdkglconfig-x11.c b/gdk/x11/gdkglconfig-x11.c
+index c47caf0..0041426 100644
+--- a/gdk/x11/gdkglconfig-x11.c
++++ b/gdk/x11/gdkglconfig-x11.c
+@@ -353,8 +353,18 @@ gdk_gl_config_init_attrib (GdkGLConfig *glconfig)
+   _GET_CONFIG (GLX_ACCUM_RED_SIZE);
+   glconfig->has_accum_buffer = value ? TRUE : FALSE;
+ 
+-  /* Number of multisample buffers (not supported yet) */
+-  glconfig->n_sample_buffers = 0;
++  /* Number of multisample buffers */
++  _GET_CONFIG( GLX_SAMPLE_BUFFERS_ARB);
++  glconfig->n_sample_buffers = value;
++
++  /* TODO: When ready to break ABI, enable the following:
++     See also gdkglconfig.h
++  _GET_CONFIG( GLX_SAMPLE_BUFFERS_ARB);
++  glconfig->n_sample_buffers = value ? TRUE : FALSE;
++
++  _GET_CONFIG( GLX_SAMPLES_ARB);
++  glconfig->n_samples = value;
++  */
+ 
+ #undef _GET_CONFIG
+ }
+-- 
+1.7.2.3
+
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 2a9de6c..0e71e72 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -998,12 +998,18 @@ ghid_init_renderer (int *argc, char ***argv, GHidPort *port)
   priv->glconfig = gdk_gl_config_new_by_mode (GDK_GL_MODE_RGBA    |
                                               GDK_GL_MODE_STENCIL |
                                            // GDK_GL_MODE_DEPTH   |
-                                              GDK_GL_MODE_DOUBLE);
+                                              GDK_GL_MODE_DOUBLE  |
+                                              GDK_GL_MODE_MULTISAMPLE |
+                                              /* 2x FSAA */
+                                              (2 << GDK_GL_MODE_SAMPLES_SHIFT)
+                                              );
   if (!priv->glconfig)
     {
       printf ("Could not setup GL-context!\n");
       return; /* Should we abort? */
     }
+
+  printf ("Num samples: %i\n", gdk_gl_config_get_n_sample_buffers (priv->glconfig));
 }
 
 void
@@ -2255,7 +2261,9 @@ ghid_render_pixmap (int cx, int cy, double zoom, int width, int height, int dept
   glconfig = gdk_gl_config_new_by_mode (GDK_GL_MODE_RGB     |
                                         GDK_GL_MODE_STENCIL |
 //                                        GDK_GL_MODE_DEPTH   |
-                                        GDK_GL_MODE_SINGLE);
+                                        GDK_GL_MODE_SINGLE |
+                                        /* 2x FSAA */
+                                        (2 << GDK_GL_MODE_SAMPLES_SHIFT));
 
   pixmap = gdk_pixmap_new (NULL, width, height, depth);
   glpixmap = gdk_pixmap_set_gl_capability (pixmap, glconfig, NULL);
