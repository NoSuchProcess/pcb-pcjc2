Bottom: 27f6112453ab2f5c2845a6599571ce12e16ef122
Top:    561ca6079291d397ced455b28cce0f5e6ef4a3a1
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-01-07 23:44:06 +0000

hid/gtk: Fix prelight state for layer button to show current status

One of the ways we identify whether a layer is switched on or off is
by changing the background colour of the GtkToggleButton representing
that layer.

Fix the prelight (mouse-over) background style to match the current
button state, so as to give immediate feed-back when the user presses
the button, and make the interface less confusing.

Closes-bug: lp-699150


---

diff --git a/src/hid/gtk/gui-top-window.c b/src/hid/gtk/gui-top-window.c
index b4c8c42..51ad6fd 100644
--- a/src/hid/gtk/gui-top-window.c
+++ b/src/hid/gtk/gui-top-window.c
@@ -1465,7 +1465,8 @@ layer_enable_button_cb (GtkWidget * widget, gpointer data)
 }
 
 static void
-layer_button_set_color (LayerButtonSet * lb, gchar * color_string)
+layer_button_set_color (LayerButtonSet * lb, gchar * color_string,
+                        bool set_prelight)
 {
   GdkColor color;
 
@@ -1475,7 +1476,8 @@ layer_button_set_color (LayerButtonSet * lb, gchar * color_string)
   color.red = color.green = color.blue = 0;
   ghid_map_color_string (color_string, &color);
   gtk_widget_modify_bg (lb->layer_enable_ebox, GTK_STATE_ACTIVE, &color);
-  gtk_widget_modify_bg (lb->layer_enable_ebox, GTK_STATE_PRELIGHT, &color);
+  gtk_widget_modify_bg (lb->layer_enable_ebox, GTK_STATE_PRELIGHT,
+                        set_prelight ? &color : NULL);
 
   gtk_widget_modify_fg (lb->label, GTK_STATE_ACTIVE, &WhitePixel);
 }
@@ -1573,7 +1575,7 @@ make_layer_buttons (GtkWidget * vbox, GHidPort * port)
       lb->text = g_strdup (text);
       lb->label = label;
 
-      layer_button_set_color (lb, color_string);
+      layer_button_set_color (lb, color_string, active);
       gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (button), active);
 
       g_signal_connect (G_OBJECT (button), "toggled",
@@ -1605,11 +1607,13 @@ ghid_layer_buttons_color_update (void)
 
   for (i = 0; i < N_LAYER_BUTTONS; ++i)
     {
+      bool active;
+
       lb = &layer_buttons[i];
 
       layer_process (&color_string, NULL, NULL, i);
-
-      layer_button_set_color (lb, color_string);
+      active = gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (lb));
+      layer_button_set_color (lb, color_string, active);
     }
 }
