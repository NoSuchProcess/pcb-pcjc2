Bottom: 335652c037c611042518784cfbb9c4fadce8d782
Top:    4951bf3c312c4cecdaef76cf02871ab8890ea72e
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-23 15:34:53 +0100

draw.c: Add layer side parameter to DrawMask()

Don't use the global variable SWAP_IDENT to choose which side to draw.


---

diff --git a/src/draw.c b/src/draw.c
index d6dce62..0a99bbc 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -101,7 +101,7 @@ static void SetPVColor (PinTypePtr, int);
 static void DrawEMark (ElementTypePtr, LocationType, LocationType, bool);
 static void ClearPad (PadTypePtr, bool);
 static void DrawHole (PinTypePtr);
-static void DrawMask (BoxType *);
+static void DrawMask (int side, BoxType *);
 static void DrawRats (BoxType *);
 static void DrawSilk (int, int, const BoxType *);
 static int pin_callback (const BoxType * b, void *cl);
@@ -475,19 +475,11 @@ DrawEverything (BoxTypePtr drawn_area)
     }
   /* Draw the solder mask if turned on */
   if (gui->set_layer ("componentmask", SL (MASK, TOP), 0))
-    {
-      int save_swap = SWAP_IDENT;
-      SWAP_IDENT = 0;
-      DrawMask (drawn_area);
-      SWAP_IDENT = save_swap;
-    }
+    DrawMask (COMPONENT_LAYER, drawn_area);
+
   if (gui->set_layer ("soldermask", SL (MASK, BOTTOM), 0))
-    {
-      int save_swap = SWAP_IDENT;
-      SWAP_IDENT = 1;
-      DrawMask (drawn_area);
-      SWAP_IDENT = save_swap;
-    }
+    DrawMask (SOLDER_LAYER, drawn_area);
+
   /* Draw top silkscreen */
   if (gui->set_layer ("topsilk", SL (SILK, TOP), 0))
     DrawSilk (0, component_silk_layer, drawn_area);
@@ -660,7 +652,8 @@ static int
 clearPad_callback (const BoxType * b, void *cl)
 {
   PadTypePtr pad = (PadTypePtr) b;
-  if (!XOR (TEST_FLAG (ONSOLDERFLAG, pad), SWAP_IDENT) && pad->Mask)
+  int *side = cl;
+  if (TEST_FLAG (ONSOLDERFLAG, pad) == (side == SOLDER_LAYER) && pad->Mask)
     ClearPad (pad, true);
   return 1;
 }
@@ -677,7 +670,6 @@ DrawSilk (int new_swap, int layer, const BoxType * drawn_area)
      pins and pads.  We decided it was a bad idea to do this
      unconditionally, but the code remains.  */
 #endif
-  int save_swap = SWAP_IDENT;
   SWAP_IDENT = new_swap;
 
 #if 0
@@ -697,7 +689,7 @@ DrawSilk (int new_swap, int layer, const BoxType * drawn_area)
   gui->use_mask (HID_MASK_CLEAR);
   r_search (PCB->Data->pin_tree, drawn_area, NULL, clearPin_callback, NULL);
   r_search (PCB->Data->via_tree, drawn_area, NULL, clearPin_callback, NULL);
-  r_search (PCB->Data->pad_tree, drawn_area, NULL, clearPad_callback, NULL);
+  r_search (PCB->Data->pad_tree, drawn_area, NULL, clearPad_callback, &side);
 
   if (gui->poly_after)
     {
@@ -711,7 +703,6 @@ DrawSilk (int new_swap, int layer, const BoxType * drawn_area)
     }
   gui->use_mask (HID_MASK_OFF);
 #endif
-  SWAP_IDENT = save_swap;
 }
 
 
@@ -736,7 +727,7 @@ DrawMaskBoardArea (int mask_type, BoxType *screen)
  * draws solder mask layer - this will cover nearly everything
  */
 static void
-DrawMask (BoxType * screen)
+DrawMask (int side, BoxType * screen)
 {
   int thin = TEST_FLAG(THINDRAWFLAG, PCB) || TEST_FLAG(THINDRAWPOLYFLAG, PCB);
 
@@ -750,7 +741,7 @@ DrawMask (BoxType * screen)
 
   r_search (PCB->Data->pin_tree, screen, NULL, clearPin_callback, NULL);
   r_search (PCB->Data->via_tree, screen, NULL, clearPin_callback, NULL);
-  r_search (PCB->Data->pad_tree, screen, NULL, clearPad_callback, NULL);
+  r_search (PCB->Data->pad_tree, screen, NULL, clearPad_callback, &side);
 
   if (thin)
     gui->set_color (Output.pmGC, "erase");
