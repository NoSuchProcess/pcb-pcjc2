Bottom: ba0a57baa1e0925399aa52a00077908e23c895da
Top:    0923142f2b43454cf8c4ac2f95996022eff442dc
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-03-27 17:29:15 +0100

hid/gtk: More efficient mask drawing


---

diff --git a/src/draw.c b/src/draw.c
index e4bf2d3..46367b5 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -788,11 +788,9 @@ DrawMask (BoxType * screen)
   if (thin)
     gui->set_color (Output.pmGC, PCB->MaskColor);
   else
-    {
-      DrawMaskBoardArea (HID_MASK_BEFORE, screen);
-      gui->use_mask (HID_MASK_CLEAR);
-    }
+    DrawMaskBoardArea (HID_MASK_BEFORE, screen);
 
+  gui->use_mask (HID_MASK_CLEAR);
   r_search (PCB->Data->pin_tree, screen, NULL, clearPin_callback, &info);
   r_search (PCB->Data->via_tree, screen, NULL, clearPin_callback, &info);
   r_search (PCB->Data->pad_tree, screen, NULL, clearPad_callback, &info);
@@ -800,10 +798,9 @@ DrawMask (BoxType * screen)
   if (thin)
     gui->set_color (Output.pmGC, "erase");
   else
-    {
-      DrawMaskBoardArea (HID_MASK_AFTER, screen);
-      gui->use_mask (HID_MASK_OFF);
-    }
+    DrawMaskBoardArea (HID_MASK_AFTER, screen);
+
+  gui->use_mask (HID_MASK_OFF);
 }
 
 static void
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index f0edbac..04672b2 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -327,31 +327,29 @@ ghid_use_mask (int use_it)
   switch (use_it)
     {
     case HID_MASK_BEFORE:
-      /* Write '1' to the stencil buffer where the solder-mask is drawn. */
-      glColorMask (0, 0, 0, 0);                   // Disable writting in color buffer
-      glEnable (GL_STENCIL_TEST);                 // Enable Stencil test
+      /* Ignore, this renderer doesn't use it */
+      return;
+
+    case HID_MASK_CLEAR:
+      /* Write '1' to the stencil buffer where the solder-mask should not be drawn. */
+      glColorMask (0, 0, 0, 0);                             // Disable writting in color buffer
+      glEnable (GL_STENCIL_TEST);                           // Enable Stencil test
       stencil_bit = hidgl_assign_clear_stencil_bit();       // Get a new (clean) bitplane to stencil with
       glStencilFunc (GL_ALWAYS, stencil_bit, stencil_bit);  // Always pass stencil test, write stencil_bit
       glStencilMask (stencil_bit);                          // Only write to our subcompositing stencil bitplane
-      glStencilOp (GL_KEEP, GL_KEEP, GL_REPLACE); // Stencil pass => replace stencil value (with 1)
-      break;
-
-    case HID_MASK_CLEAR:
-      /* Drawing operations clear the stencil buffer to '0' */
-      glStencilFunc (GL_ALWAYS, 0, stencil_bit);  // Always pass stencil test, write 0
-      glStencilOp (GL_KEEP, GL_KEEP, GL_REPLACE); // Stencil pass => replace stencil value (with 0)
+      glStencilOp (GL_KEEP, GL_KEEP, GL_REPLACE);           // Stencil pass => replace stencil value (with 1)
       break;
 
     case HID_MASK_AFTER:
-      /* Drawing operations as masked to areas where the stencil buffer is '1' */
+      /* Drawing operations as masked to areas where the stencil buffer is '0' */
       glColorMask (1, 1, 1, 1);                   // Enable drawing of r, g, b & a
-      glStencilFunc (GL_LEQUAL, stencil_bit, stencil_bit);   // Draw only where our bit of the stencil buffer is set
+      glStencilFunc (GL_GEQUAL, 0, stencil_bit);  // Draw only where our bit of the stencil buffer is clear
       glStencilOp (GL_KEEP, GL_KEEP, GL_KEEP);    // Stencil buffer read only
       break;
 
     case HID_MASK_OFF:
       /* Disable stenciling */
-      hidgl_return_stencil_bit (stencil_bit);               // Relinquish any bitplane we previously used
+      hidgl_return_stencil_bit (stencil_bit);     // Relinquish any bitplane we previously used
       glDisable (GL_STENCIL_TEST);                // Disable Stencil test
       break;
     }
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 2356ba1..ad335a3 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -979,7 +979,7 @@ HID ghid_hid = {
   1,				/* gui */
   0,				/* printer */
   0,				/* exporter */
-  1,				/* poly before */
+  0,				/* poly before */
   1,				/* poly after */
   0,				/* poly dicer */
