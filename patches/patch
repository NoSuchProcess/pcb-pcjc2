Bottom: 799817db26572836f175d32bdd60ba07cd85538c
Top:    10ecf8b7802e5761976e9a821167199fbf21756f
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2014-06-26 21:12:40 +0100

Replace {COMPONENT,SOLDER}_LAYER with {TOP,BOTTOM}_{SILK_LAYER,SIDE} depending on usage

We used the {COMPONENT,SOLDER}_LAYER constants for two distinct meanings:

1. To identify board sides, ie. use as an integer constant representing top / bottom
2. As an offset at the end of the layer array to index the two silk-screen layers

Split the usage of these constants as appropriate, so the difference in meaning
is clear. {TOP,BOTTOM}_SIDE are used where we need an integer constant (1 and 0
respectively) refering to the side of the board. This is used as a side specifier
in draw.c, and for indexing arrays of pads per board-side in find.c.

Usage as an offset into the layer for referencing the silk-screen layers is now
{TOP,BOTTOM}_SILK_LAYER. The relevant offset of PCB->LayerN must still be added.


---

diff --git a/src/const.h b/src/const.h
index 7cbf194..08fe253 100644
--- a/src/const.h
+++ b/src/const.h
@@ -36,11 +36,18 @@
 #include "globalconst.h"
 
 /* ---------------------------------------------------------------------------
- * the layer-numbers of the two additional special layers
- * 'component' and 'solder'. The offset of MAX_LAYER is not added
+ * integer codings for the board sides.
  */
-#define	SOLDER_LAYER		0
-#define	COMPONENT_LAYER		1
+#define BOTTOM_SIDE             0
+#define TOP_SIDE                1
+
+
+/* ---------------------------------------------------------------------------
+ * the layer-numbers of the two additional special (silkscreen) layers
+ * 'bottom' and 'top'. The offset of MAX_LAYER is not added
+ */
+#define BOTTOM_SILK_LAYER       0
+#define TOP_SILK_LAYER          1
 
 /* ---------------------------------------------------------------------------
  * misc constants
diff --git a/src/data.h b/src/data.h
index 28cbfda..d298d49 100644
--- a/src/data.h
+++ b/src/data.h
@@ -47,8 +47,8 @@ extern PCBType *PCB;
 
 #define max_group (PCB->Data->LayerN)
 #define max_copper_layer (PCB->Data->LayerN)
-#define solder_silk_layer (max_copper_layer + SOLDER_LAYER)
-#define component_silk_layer (max_copper_layer + COMPONENT_LAYER)
+#define solder_silk_layer (max_copper_layer + BOTTOM_SILK_LAYER)
+#define component_silk_layer (max_copper_layer + TOP_SILK_LAYER)
 
 extern SettingType Settings;
 
diff --git a/src/draw.c b/src/draw.c
index a682f9d..20d4492 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -571,7 +571,7 @@ DrawEverything (const BoxType *drawn_area)
   if (!TEST_FLAG (CHECKPLANESFLAG, PCB)
       && gui->set_layer ("invisible", SL (INVISIBLE, 0), 0))
     {
-      side = SWAP_IDENT ? COMPONENT_LAYER : SOLDER_LAYER;
+      side = SWAP_IDENT ? TOP_SIDE : BOTTOM_SIDE;
       if (PCB->ElementOn)
 	{
 	  r_search (PCB->Data->element_tree, drawn_area, NULL, element_callback, &side);
@@ -620,25 +620,25 @@ DrawEverything (const BoxType *drawn_area)
   /* Draw the solder mask if turned on */
   if (gui->set_layer ("componentmask", SL (MASK, TOP), 0))
     {
-      DrawMask (COMPONENT_LAYER, drawn_area);
+      DrawMask (TOP_SIDE, drawn_area);
       gui->end_layer ();
     }
 
   if (gui->set_layer ("soldermask", SL (MASK, BOTTOM), 0))
     {
-      DrawMask (SOLDER_LAYER, drawn_area);
+      DrawMask (BOTTOM_SIDE, drawn_area);
       gui->end_layer ();
     }
 
   if (gui->set_layer ("topsilk", SL (SILK, TOP), 0))
     {
-      DrawSilk (COMPONENT_LAYER, drawn_area);
+      DrawSilk (TOP_SIDE, drawn_area);
       gui->end_layer ();
     }
 
   if (gui->set_layer ("bottomsilk", SL (SILK, BOTTOM), 0))
     {
-      DrawSilk (SOLDER_LAYER, drawn_area);
+      DrawSilk (BOTTOM_SIDE, drawn_area);
       gui->end_layer ();
     }
 
@@ -656,29 +656,29 @@ DrawEverything (const BoxType *drawn_area)
         }
     }
 
-  paste_empty = IsPasteEmpty (COMPONENT_LAYER);
+  paste_empty = IsPasteEmpty (TOP_SIDE);
   if (gui->set_layer ("toppaste", SL (PASTE, TOP), paste_empty))
     {
-      DrawPaste (COMPONENT_LAYER, drawn_area);
+      DrawPaste (TOP_SIDE, drawn_area);
       gui->end_layer ();
     }
 
-  paste_empty = IsPasteEmpty (SOLDER_LAYER);
+  paste_empty = IsPasteEmpty (BOTTOM_SIDE);
   if (gui->set_layer ("bottompaste", SL (PASTE, BOTTOM), paste_empty))
     {
-      DrawPaste (SOLDER_LAYER, drawn_area);
+      DrawPaste (BOTTOM_SIDE, drawn_area);
       gui->end_layer ();
     }
 
   if (gui->set_layer ("topassembly", SL (ASSY, TOP), 0))
     {
-      PrintAssembly (COMPONENT_LAYER, drawn_area);
+      PrintAssembly (TOP_SIDE, drawn_area);
       gui->end_layer ();
     }
 
   if (gui->set_layer ("bottomassembly", SL (ASSY, BOTTOM), 0))
     {
-      PrintAssembly (SOLDER_LAYER, drawn_area);
+      PrintAssembly (BOTTOM_SIDE, drawn_area);
       gui->end_layer ();
     }
 
@@ -751,13 +751,13 @@ DrawPPV (int group, const BoxType *drawn_area)
       /* draw element pads */
       if (group == component_group)
         {
-          side = COMPONENT_LAYER;
+          side = TOP_SIDE;
           r_search (PCB->Data->pad_tree, drawn_area, NULL, pad_callback, &side);
         }
 
       if (group == solder_group)
         {
-          side = SOLDER_LAYER;
+          side = BOTTOM_SIDE;
           r_search (PCB->Data->pad_tree, drawn_area, NULL, pad_callback, &side);
         }
     }
diff --git a/src/find.c b/src/find.c
index 99893da..bfc0e14 100644
--- a/src/find.c
+++ b/src/find.c
@@ -124,6 +124,9 @@
 #define	IS_PV_ON_PAD(PV,Pad) \
 	( IsPointInPad((PV)->X, (PV)->Y, MAX((PV)->Thickness/2 +Bloat,0), (Pad)))
 
+#define BOTTOM_LAYER 0
+#define TOP_LAYER 1
+
 static DrcViolationType
 *pcb_drc_violation_new (const char *title,
                         const char *explanation,
@@ -495,13 +498,13 @@ InitComponentLookup (void)
   /* initialize pad data; start by counting the total number
    * on each of the two possible layers
    */
-  NumberOfPads[COMPONENT_LAYER] = NumberOfPads[SOLDER_LAYER] = 0;
+  NumberOfPads[TOP_SIDE] = NumberOfPads[BOTTOM_SIDE] = 0;
   ALLPAD_LOOP (PCB->Data);
   {
     if (TEST_FLAG (ONSOLDERFLAG, pad))
-      NumberOfPads[SOLDER_LAYER]++;
+      NumberOfPads[BOTTOM_SIDE]++;
     else
-      NumberOfPads[COMPONENT_LAYER]++;
+      NumberOfPads[TOP_SIDE]++;
   }
   ENDALL_LOOP;
   for (i = 0; i < 2; i++)
@@ -631,8 +634,8 @@ LOCtoPVpad_callback (const BoxType * b, void *cl)
 
   if (!TEST_FLAG (i->flag, pad) && IS_PV_ON_PAD (i->pv, pad) &&
       !TEST_FLAG (HOLEFLAG, i->pv) &&
-      ADD_PAD_TO_LIST (TEST_FLAG (ONSOLDERFLAG, pad) ? SOLDER_LAYER :
-                       COMPONENT_LAYER, pad, i->flag))
+      ADD_PAD_TO_LIST (TEST_FLAG (ONSOLDERFLAG, pad) ? BOTTOM_SIDE :
+                       TOP_SIDE, pad, i->flag))
     longjmp (i->env, 1);
   return 0;
 }
@@ -1686,7 +1689,7 @@ LOCtoArcPad_callback (const BoxType * b, void *cl)
   struct lo_info *i = (struct lo_info *) cl;
 
   if (!TEST_FLAG (i->flag, pad) && i->layer ==
-      (TEST_FLAG (ONSOLDERFLAG, pad) ? SOLDER_LAYER : COMPONENT_LAYER)
+      (TEST_FLAG (ONSOLDERFLAG, pad) ? BOTTOM_SIDE : TOP_SIDE)
       && ArcPadIntersect (i->arc, pad) && ADD_PAD_TO_LIST (i->layer, pad, i->flag))
     longjmp (i->env, 1);
   return 0;
@@ -1820,7 +1823,7 @@ LOCtoLinePad_callback (const BoxType * b, void *cl)
   struct lo_info *i = (struct lo_info *) cl;
 
   if (!TEST_FLAG (i->flag, pad) && i->layer ==
-      (TEST_FLAG (ONSOLDERFLAG, pad) ? SOLDER_LAYER : COMPONENT_LAYER)
+      (TEST_FLAG (ONSOLDERFLAG, pad) ? BOTTOM_SIDE : TOP_SIDE)
       && LinePadIntersect (i->line, pad) && ADD_PAD_TO_LIST (i->layer, pad, i->flag))
     longjmp (i->env, 1);
   return 0;
@@ -1955,7 +1958,7 @@ LOCtoPad_callback (const BoxType * b, void *cl)
   struct rat_info *i = (struct rat_info *) cl;
 
   if (!TEST_FLAG (i->flag, pad) && i->layer ==
-	(TEST_FLAG (ONSOLDERFLAG, pad) ? SOLDER_LAYER : COMPONENT_LAYER) &&
+	(TEST_FLAG (ONSOLDERFLAG, pad) ? BOTTOM_SIDE : TOP_SIDE) &&
       ((pad->Point1.X == i->Point->X && pad->Point1.Y == i->Point->Y) ||
        (pad->Point2.X == i->Point->X && pad->Point2.Y == i->Point->Y) ||
        ((pad->Point1.X + pad->Point2.X) / 2 == i->Point->X &&
@@ -2103,7 +2106,7 @@ LOCtoPadPad_callback (const BoxType * b, void *cl)
   struct lo_info *i = (struct lo_info *) cl;
 
   if (!TEST_FLAG (i->flag, pad) && i->layer ==
-      (TEST_FLAG (ONSOLDERFLAG, pad) ? SOLDER_LAYER : COMPONENT_LAYER)
+      (TEST_FLAG (ONSOLDERFLAG, pad) ? BOTTOM_SIDE : TOP_SIDE)
       && PadPadIntersect (pad, i->pad) && ADD_PAD_TO_LIST (i->layer, pad, i->flag))
     longjmp (i->env, 1);
   return 0;
@@ -2222,7 +2225,7 @@ LOCtoPolyPad_callback (const BoxType * b, void *cl)
   struct lo_info *i = (struct lo_info *) cl;
 
   if (!TEST_FLAG (i->flag, pad) && i->layer ==
-      (TEST_FLAG (ONSOLDERFLAG, pad) ? SOLDER_LAYER : COMPONENT_LAYER)
+      (TEST_FLAG (ONSOLDERFLAG, pad) ? BOTTOM_SIDE : TOP_SIDE)
       && IsPadInPolygon (pad, i->polygon))
     {
       if (ADD_PAD_TO_LIST (i->layer, pad, i->flag))
@@ -2677,8 +2680,8 @@ PrintAndSelectUnusedPinsAndPadsOfElement (ElementType *Element, FILE * FP, int f
             if (ADD_PV_TO_LIST (pin, flag))
               return true;
             DoIt (flag, true, true);
-            number = PadList[COMPONENT_LAYER].Number
-              + PadList[SOLDER_LAYER].Number + PVList.Number;
+            number = PadList[TOP_SIDE].Number
+              + PadList[BOTTOM_SIDE].Number + PVList.Number;
             /* the pin has no connection if it's the only
              * list entry; don't count vias
              */
@@ -2718,11 +2721,11 @@ PrintAndSelectUnusedPinsAndPadsOfElement (ElementType *Element, FILE * FP, int f
       {
         int i;
         if (ADD_PAD_TO_LIST (TEST_FLAG (ONSOLDERFLAG, pad)
-                             ? SOLDER_LAYER : COMPONENT_LAYER, pad, flag))
+                             ? BOTTOM_SIDE : TOP_SIDE, pad, flag))
           return true;
         DoIt (flag, true, true);
-        number = PadList[COMPONENT_LAYER].Number
-          + PadList[SOLDER_LAYER].Number + PVList.Number;
+        number = PadList[TOP_SIDE].Number
+          + PadList[BOTTOM_SIDE].Number + PVList.Number;
         /* the pin has no connection if it's the only
          * list entry; don't count vias
          */
@@ -2813,8 +2816,8 @@ PrintElementConnections (ElementType *Element, FILE * FP, int flag, bool AndDraw
     DoIt (flag, true, AndDraw);
     /* printout all found connections */
     PrintPinConnections (FP, true);
-    PrintPadConnections (COMPONENT_LAYER, FP, false);
-    PrintPadConnections (SOLDER_LAYER, FP, false);
+    PrintPadConnections (TOP_SIDE, FP, false);
+    PrintPadConnections (BOTTOM_SIDE, FP, false);
     fputs ("\t}\n", FP);
     if (PrepareNextLoop (FP))
       return (true);
@@ -2832,14 +2835,14 @@ PrintElementConnections (ElementType *Element, FILE * FP, int flag, bool AndDraw
         fputs ("\t\t__CHECKED_BEFORE__\n\t}\n", FP);
         continue;
       }
-    layer = TEST_FLAG (ONSOLDERFLAG, pad) ? SOLDER_LAYER : COMPONENT_LAYER;
+    layer = TEST_FLAG (ONSOLDERFLAG, pad) ? BOTTOM_SIDE : TOP_SIDE;
     if (ADD_PAD_TO_LIST (layer, pad, flag))
       return true;
     DoIt (flag, true, AndDraw);
     /* print all found connections */
     PrintPadConnections (layer, FP, true);
     PrintPadConnections (layer ==
-                         (COMPONENT_LAYER ? SOLDER_LAYER : COMPONENT_LAYER),
+                         (TOP_SIDE ? BOTTOM_SIDE : TOP_SIDE),
                          FP, false);
     PrintPinConnections (FP, false);
     fputs ("\t}\n", FP);
@@ -3032,7 +3035,7 @@ ListStart (int type, void *ptr1, void *ptr2, void *ptr3, int flag)
         PadType *pad = (PadType *) ptr2;
         if (ADD_PAD_TO_LIST
             (TEST_FLAG
-             (ONSOLDERFLAG, pad) ? SOLDER_LAYER : COMPONENT_LAYER, pad, flag))
+             (ONSOLDERFLAG, pad) ? BOTTOM_SIDE : TOP_SIDE, pad, flag))
           return true;
         break;
       }
diff --git a/src/fontmode.c b/src/fontmode.c
index e09f825..4afd3cd 100644
--- a/src/fontmode.c
+++ b/src/fontmode.c
@@ -88,8 +88,8 @@ FontEdit (int argc, char **argv, Coord Ux, Coord Uy)
   Settings.minWid = PCB->minWid = 1;
   Settings.minSlk = PCB->minSlk = 1;
 
-  MoveLayerToGroup (max_copper_layer + COMPONENT_LAYER, 0);
-  MoveLayerToGroup (max_copper_layer + SOLDER_LAYER, 1);
+  MoveLayerToGroup (max_copper_layer + TOP_SILK_LAYER, 0);
+  MoveLayerToGroup (max_copper_layer + BOTTOM_SILK_LAYER, 1);
 
   while (PCB->Data->LayerN > 4)
     MoveLayer (4, -1);
diff --git a/src/macro.h b/src/macro.h
index 0c680ab..3c69571 100644
--- a/src/macro.h
+++ b/src/macro.h
@@ -152,11 +152,11 @@ extern int mem_any_set (unsigned char *, int);
 	((TEST_FLAG(ONSOLDERFLAG, (o)) != 0) == SWAP_IDENT)
 
 /* ---------------------------------------------------------------------------
- *  Determines if an object is on the given side. side is either SOLDER_LAYER
- *  or COMPONENT_LAYER.
+ *  Determines if an object is on the given side. side is either BOTTOM_GROUP
+ *  or TOP_GROUP.
  */
 #define ON_SIDE(element, side) \
-        (TEST_FLAG (ONSOLDERFLAG, element) == (side == SOLDER_LAYER))
+        (TEST_FLAG (ONSOLDERFLAG, element) == (side == BOTTOM_SIDE))
 
 /* ---------------------------------------------------------------------------
  * some loop shortcuts
diff --git a/src/misc.c b/src/misc.c
index 064c3e4..8d12706 100644
--- a/src/misc.c
+++ b/src/misc.c
@@ -1019,7 +1019,7 @@ ParseGroupString (char *s, LayerGroupType *LayerGroup, int LayerN)
             case 'C':
             case 't':
             case 'T':
-              layer = LayerN + COMPONENT_LAYER;
+              layer = LayerN + TOP_SILK_LAYER;
               c_set = true;
               break;
 
@@ -1027,7 +1027,7 @@ ParseGroupString (char *s, LayerGroupType *LayerGroup, int LayerN)
             case 'S':
             case 'b':
             case 'B':
-              layer = LayerN + SOLDER_LAYER;
+              layer = LayerN + BOTTOM_SILK_LAYER;
               s_set = true;
               break;
 
@@ -1037,7 +1037,7 @@ ParseGroupString (char *s, LayerGroupType *LayerGroup, int LayerN)
               layer = atoi (s) - 1;
               break;
             }
-          if (layer > LayerN + MAX (SOLDER_LAYER, COMPONENT_LAYER) ||
+          if (layer > LayerN + MAX (BOTTOM_SILK_LAYER, TOP_SILK_LAYER) ||
               member >= LayerN + 1)
             goto error;
           groupnum[layer] = group;
@@ -1056,14 +1056,19 @@ ParseGroupString (char *s, LayerGroupType *LayerGroup, int LayerN)
       if (*s == ':')
         s++;
     }
+
+  /* If no explicit solder or component layer group was found in the layer
+   * group string, make group 0 the bottom side, and group 1 the top side.
+   * This is done by assigning the relevant silkscreen layers to those groups.
+   */
   if (!s_set)
-    LayerGroup->Entries[SOLDER_LAYER][LayerGroup->Number[SOLDER_LAYER]++] =
-      LayerN + SOLDER_LAYER;
+    LayerGroup->Entries[0][LayerGroup->Number[0]++] = LayerN + BOTTOM_SILK_LAYER;
   if (!c_set)
-    LayerGroup->
-      Entries[COMPONENT_LAYER][LayerGroup->Number[COMPONENT_LAYER]++] =
-      LayerN + COMPONENT_LAYER;
+    LayerGroup->Entries[1][LayerGroup->Number[1]++] = LayerN + TOP_SILK_LAYER;
 
+  /* Assign a unique layer group to each layer that was not explicitly
+   * assigned a particular group by its presence in the layer group string.
+   */
   for (layer = 0; layer < LayerN && group < LayerN; layer++)
     if (groupnum[layer] == -1)
       {
diff --git a/src/parse_y.y b/src/parse_y.y
index 6cd4c7b..72a0046 100644
--- a/src/parse_y.y
+++ b/src/parse_y.y
@@ -1060,7 +1060,7 @@ text_newformat
 				if ($8 & ONSILKFLAG)
 				{
 					LayerType *lay = &yyData->Layer[yyData->LayerN +
-						(($8 & ONSOLDERFLAG) ? SOLDER_LAYER : COMPONENT_LAYER)];
+						(($8 & ONSOLDERFLAG) ? BOTTOM_SILK_LAYER : TOP_SILK_LAYER)];
 
 					CreateNewText(lay ,yyFont, OU ($3), OU ($4), $5, $6, $7,
 						      OldFlags($8));
@@ -1085,7 +1085,7 @@ text_hi_format
 				if ($8.f & ONSILKFLAG)
 				{
 					LayerType *lay = &yyData->Layer[yyData->LayerN +
-						(($8.f & ONSOLDERFLAG) ? SOLDER_LAYER : COMPONENT_LAYER)];
+						(($8.f & ONSOLDERFLAG) ? BOTTOM_SILK_LAYER : TOP_SILK_LAYER)];
 
 					CreateNewText(lay, yyFont, NU ($3), NU ($4), $5, $6, $7, $8);
 				}
