Bottom: a99942b38164521467ea330dc8b743371908a38d
Top:    0821ae5e76378d0cd9aac4c1e121c565f44fa426
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-04 23:45:02 +0000

Place drawing of crosshair attached objects under the control of the HID

This allows GUIs which have defined setup and tear-down requirements
before drawing to manage when these objects are drawn.

Expose some API from crosshair.c to perform the actual drawing on
demand, and add a hook to the HID structure to notify the GUI when
it would previously have called the drawing routines directly.


---

diff --git a/src/crosshair.c b/src/crosshair.c
index e765399..a885a63 100644
--- a/src/crosshair.c
+++ b/src/crosshair.c
@@ -85,7 +85,6 @@ static void XORDrawMoveOrCopyObject (void);
 static void XORDrawAttachedLine (LocationType, LocationType, LocationType,
 				 LocationType, BDimension);
 static void XORDrawAttachedArc (BDimension);
-static void DrawAttached (bool);
 
 /* ---------------------------------------------------------------------------
  * creates a tmp polygon with coordinates converted to screen system
@@ -566,7 +565,7 @@ XORDrawMoveOrCopyObject (void)
 /* ---------------------------------------------------------------------------
  * draws additional stuff that follows the crosshair
  */
-static void
+void
 DrawAttached (bool BlockToo)
 {
   BDimension s;
diff --git a/src/crosshair.h b/src/crosshair.h
index 8299778..77a418f 100644
--- a/src/crosshair.h
+++ b/src/crosshair.h
@@ -46,7 +46,7 @@
 #define	STATE_SECOND	1
 #define	STATE_THIRD		2
 
-
+void DrawAttached (bool);
 void CrosshairOn (bool);
 void CrosshairOff (bool);
 void HideCrosshair (bool);
