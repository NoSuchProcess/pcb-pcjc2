Bottom: 790e7b3d7557af2f2c670cebf90da46fba76b774
Top:    372272662646f25c28f8f52dabb95bc2de1adfd3
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-02-11 17:27:01 +0000

Allow polygons with CLEARLINEFLAG set to cut out other polygons

Gives the possibility to mask out regions which are to be free of
polygon fill.














---

diff --git a/src/buffer.c b/src/buffer.c
index 8acbfce..a88d11f 100644
--- a/src/buffer.c
+++ b/src/buffer.c
@@ -364,6 +364,7 @@ MovePolygonToBuffer (LayerTypePtr Layer, PolygonTypePtr Polygon)
   LayerTypePtr lay;
   PolygonTypePtr polygon;
 
+  RestoreToPolygon (Source, POLYGON_TYPE, Layer, Polygon);
   r_delete_entry (Layer->polygon_tree, (BoxTypePtr) Polygon);
   lay = &Dest->Layer[GetLayerNumber (Source, Layer)];
   polygon = GetPolygonMemory (lay);
@@ -377,6 +378,7 @@ MovePolygonToBuffer (LayerTypePtr Layer, PolygonTypePtr Polygon)
   if (!lay->polygon_tree)
     lay->polygon_tree = r_create_tree (NULL, 0, 0);
   r_insert_entry (lay->polygon_tree, (BoxTypePtr) polygon, 0);
+  ClearFromPolygon (Source, POLYGON_TYPE, Layer, Polygon);
   return (polygon);
 }
 
diff --git a/src/change.c b/src/change.c
index 0599ee4..e0ef99b 100644
--- a/src/change.c
+++ b/src/change.c
@@ -123,6 +123,9 @@ static void *ChangeTextJoin (LayerTypePtr, TextTypePtr);
 static void *SetTextJoin (LayerTypePtr, TextTypePtr);
 static void *ClrTextJoin (LayerTypePtr, TextTypePtr);
 static void *ChangePolyClear (LayerTypePtr, PolygonTypePtr);
+static void *ChangePolyJoin (LayerTypePtr, PolygonTypePtr);
+static void *SetPolyJoin (LayerTypePtr, PolygonTypePtr);
+static void *ClrPolyJoin (LayerTypePtr, PolygonTypePtr);
 
 /* ---------------------------------------------------------------------------
  * some local identifiers
@@ -217,7 +220,7 @@ static ObjectFunctionType ChangeSquareFunctions = {
 static ObjectFunctionType ChangeJoinFunctions = {
   ChangeLineJoin,
   ChangeTextJoin,
-  NULL,
+  ChangePolyJoin,
   NULL,
   NULL,
   NULL,
@@ -277,7 +280,7 @@ static ObjectFunctionType SetSquareFunctions = {
 static ObjectFunctionType SetJoinFunctions = {
   SetLineJoin,
   SetTextJoin,
-  NULL,
+  SetPolyJoin,
   NULL,
   NULL,
   NULL,
@@ -319,7 +322,7 @@ static ObjectFunctionType ClrSquareFunctions = {
 static ObjectFunctionType ClrJoinFunctions = {
   ClrLineJoin,
   ClrTextJoin,
-  NULL,
+  ClrPolyJoin,
   NULL,
   NULL,
   NULL,
@@ -1191,6 +1194,31 @@ ChangeTextJoin (LayerTypePtr Layer, TextTypePtr Text)
 }
 
 /* ---------------------------------------------------------------------------
+ * changes the clearance flag of a polygon
+ */
+static void *
+ChangePolyJoin (LayerTypePtr Layer, PolygonTypePtr poly)
+{
+  if (TEST_FLAG (LOCKFLAG, poly))
+    return (NULL);
+  ErasePolygon (poly);
+  if (TEST_FLAG(CLEARLINEFLAG, poly))
+  {
+  AddObjectToClearPolyUndoList (POLYGON_TYPE, Layer, poly, poly, False);
+  RestoreToPolygon (PCB->Data, POLYGON_TYPE, Layer, poly);
+  }
+  AddObjectToFlagUndoList (LINE_TYPE, Layer, poly, poly);
+  TOGGLE_FLAG (CLEARLINEFLAG, poly);
+  if (TEST_FLAG(CLEARLINEFLAG, poly))
+  {
+  AddObjectToClearPolyUndoList (POLYGON_TYPE, Layer, poly, poly, True);
+  ClearFromPolygon (PCB->Data, POLYGON_TYPE, Layer, poly);
+  }
+  DrawPolygon (Layer, poly, 0);
+  return (poly);
+}
+
+/* ---------------------------------------------------------------------------
  * sets the clearance flag of a text
  */
 static void *
@@ -1202,6 +1230,17 @@ SetTextJoin (LayerTypePtr Layer, TextTypePtr Text)
 }
 
 /* ---------------------------------------------------------------------------
+ * sets the clearance flag of a polygon
+ */
+static void *
+SetPolyJoin (LayerTypePtr Layer, PolygonTypePtr poly)
+{
+  if (TEST_FLAG (LOCKFLAG, poly) || TEST_FLAG (CLEARLINEFLAG, poly))
+    return (NULL);
+  return ChangePolyJoin (Layer, poly);
+}
+
+/* ---------------------------------------------------------------------------
  * clears the clearance flag of a text
  */
 static void *
@@ -1213,6 +1252,17 @@ ClrTextJoin (LayerTypePtr Layer, TextTypePtr Text)
 }
 
 /* ---------------------------------------------------------------------------
+ * clears the clearance flag of a polygon
+ */
+static void *
+ClrPolyJoin (LayerTypePtr Layer, PolygonTypePtr poly)
+{
+  if (TEST_FLAG (LOCKFLAG, poly) || !TEST_FLAG (CLEARLINEFLAG, poly))
+    return (NULL);
+  return ChangePolyJoin (Layer, poly);
+}
+
+/* ---------------------------------------------------------------------------
  * changes the square flag of all pins on an element
  */
 static void *
diff --git a/src/change.h b/src/change.h
index 7f43fba..1be41aa 100644
--- a/src/change.h
+++ b/src/change.h
@@ -56,7 +56,7 @@
 	(ELEMENT_TYPE | PIN_TYPE | VIA_TYPE)
 
 #define CHANGEJOIN_TYPES	\
-	(ARC_TYPE | LINE_TYPE | TEXT_TYPE)
+	(ARC_TYPE | LINE_TYPE | TEXT_TYPE | POLYGON_TYPE)
 
 #define CHANGETHERMAL_TYPES	\
 	(PIN_TYPE | VIA_TYPE)
diff --git a/src/draw.c b/src/draw.c
index de0666f..93658bf 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -1759,8 +1759,9 @@ DrawPolygonLowLevel (PolygonTypePtr Polygon, void *data)
       x[i] = v->point[0];
       y[i++] = v->point[1];
     }
-  if (TEST_FLAG (THINDRAWFLAG, PCB)
-      || TEST_FLAG (THINDRAWPOLYFLAG, PCB))
+  if (TEST_FLAG (THINDRAWFLAG, PCB) ||
+      TEST_FLAG (THINDRAWPOLYFLAG, PCB) ||
+      TEST_FLAG (CLEARLINEFLAG, Polygon))
     {
       gui->set_line_width (Output.fgGC, 1);
       for (i = 0; i < n - 1; i++)
diff --git a/src/move.c b/src/move.c
index 003c2e0..aebfc30 100644
--- a/src/move.c
+++ b/src/move.c
@@ -355,10 +355,12 @@ MovePolygon (LayerTypePtr Layer, PolygonTypePtr Polygon)
     {
       ErasePolygon (Polygon);
     }
+  RestoreToPolygon (PCB->Data, POLYGON_TYPE, Layer, Polygon);
   r_delete_entry (Layer->polygon_tree, (BoxType *) Polygon);
   MovePolygonLowLevel (Polygon, DeltaX, DeltaY);
   r_insert_entry (Layer->polygon_tree, (BoxType *) Polygon, 0);
   InitClip (PCB->Data, Layer, Polygon);
+  ClearFromPolygon (PCB->Data, POLYGON_TYPE, Layer, Polygon);
   if (Layer->On)
     {
       DrawPolygon (Layer, Polygon, 0);
@@ -418,12 +420,14 @@ MovePolygonPoint (LayerTypePtr Layer, PolygonTypePtr Polygon,
     {
       ErasePolygon (Polygon);
     }
+  RestoreToPolygon (PCB->Data, POLYGON_TYPE, Layer, Polygon);
   r_delete_entry (Layer->polygon_tree, (BoxType *) Polygon);
   MOVE (Point->X, Point->Y, DeltaX, DeltaY);
   SetPolygonBoundingBox (Polygon);
   r_insert_entry (Layer->polygon_tree, (BoxType *) Polygon, 0);
   RemoveExcessPolygonPoints (Layer, Polygon);
   InitClip (PCB->Data, Layer, Polygon);
+  ClearFromPolygon (PCB->Data, POLYGON_TYPE, Layer, Polygon);
   if (Layer->On)
     {
       DrawPolygon (Layer, Polygon, 0);
diff --git a/src/polygon.c b/src/polygon.c
index f3bfb72..1999b43 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -779,6 +779,20 @@ SubtractPad (PadType * pad, PolygonType * p)
   return Subtract (np, p, True);
 }
 
+static int
+SubtractPolygon (PolygonType * poly, PolygonType * p)
+{
+  POLYAREA *np;
+
+  /* Don't subtract from ourselves! */
+  if (poly == p || !TEST_FLAG (CLEARLINEFLAG, poly))
+    return 0;
+
+  np = original_poly (poly);
+
+  return Subtract (np, p, True);
+}
+
 struct cpInfo
 {
   const BoxType *other;
@@ -880,6 +894,24 @@ text_sub_callback (const BoxType * b, void *cl)
 }
 
 static int
+poly_sub_callback (const BoxType * b, void *cl)
+{
+  PolygonTypePtr poly = (PolygonTypePtr) b;
+  struct cpInfo *info = (struct cpInfo *) cl;
+  PolygonTypePtr polygon;
+
+  /* don't subtract the object that was put back! */
+  if (b == info->other)
+    return 0;
+  if (!TEST_FLAG (CLEARLINEFLAG, poly))
+    return 0;
+  polygon = info->polygon;
+  if (SubtractPolygon (poly, polygon) < 0)
+    longjmp (info->env, 1);
+  return 1;
+}
+
+static int
 Group (DataTypePtr Data, Cardinal layer)
 {
   Cardinal i, j;
@@ -927,6 +959,8 @@ clearPoly (DataTypePtr Data, LayerTypePtr Layer, PolygonType * polygon,
           r_search (layer->arc_tree, &region, NULL, arc_sub_callback, &info);
 	r +=
           r_search (layer->text_tree, &region, NULL, text_sub_callback, &info);
+        r +=
+          r_search (layer->polygon_tree, &region, NULL, poly_sub_callback, &info);
       }
       END_LOOP;
       if (info.solder || group == Group (Data, max_layer + COMPONENT_LAYER))
@@ -1047,6 +1081,26 @@ UnsubtractPad (PadType * pad, LayerType * l, PolygonType * p)
   return 1;
 }
 
+static int
+UnsubtractPolygon (PolygonType * poly, LayerType * l, PolygonType * p)
+{
+  POLYAREA *np;
+
+  /* Don't subtract from ourselves! */
+  if (poly == p || !TEST_FLAG (CLEARLINEFLAG, poly))
+    return 0;
+
+  /* overlap a bit to prevent notches from rounding errors */
+  np = BoxPolyBloated (&poly->BoundingBox, UNSUBTRACT_BLOAT);
+
+  if (!np)
+    return 0;
+  if (!Unsubtract (np, p))
+    return 0;
+  clearPoly (PCB->Data, l, p, (const BoxType *) poly, 2 * UNSUBTRACT_BLOAT);
+  return 1;
+}
+
 static Boolean inhibit = False;
 
 int
@@ -1334,6 +1388,10 @@ subtract_plow (DataTypePtr Data, LayerTypePtr Layer, PolygonTypePtr Polygon,
       SubtractPad ((PadTypePtr) ptr2, Polygon);
       Polygon->NoHolesValid = 0;
       return 1;
+    case POLYGON_TYPE:
+      SubtractPolygon ((PolygonTypePtr) ptr2, Polygon);
+      Polygon->NoHolesValid = 0;
+      return 1;
     case TEXT_TYPE:
       SubtractText ((TextTypePtr) ptr2, Polygon);
       Polygon->NoHolesValid = 0;
@@ -1361,6 +1419,9 @@ add_plow (DataTypePtr Data, LayerTypePtr Layer, PolygonTypePtr Polygon,
     case PAD_TYPE:
       UnsubtractPad ((PadTypePtr) ptr2, Layer, Polygon);
       return 1;
+    case POLYGON_TYPE:
+      UnsubtractPolygon ((PolygonTypePtr) ptr2, Layer, Polygon);
+      return 1;
     case TEXT_TYPE:
       UnsubtractText ((TextTypePtr) ptr2, Layer, Polygon);
       return 1;
@@ -1424,6 +1485,7 @@ PlowsPolygon (DataType * Data, int type, void *ptr1, void *ptr2,
     case LINE_TYPE:
     case ARC_TYPE:
     case TEXT_TYPE:
+    case POLYGON_TYPE:
       /* the cast works equally well for lines and arcs */
       if (!TEST_FLAG (CLEARLINEFLAG, (LineTypePtr) ptr2))
         return 0;
@@ -1477,8 +1539,7 @@ RestoreToPolygon (DataType * Data, int type, void *ptr1, void *ptr2)
 {
   if (type == POLYGON_TYPE)
     InitClip (PCB->Data, (LayerTypePtr) ptr1, (PolygonTypePtr) ptr2);
-  else
-    PlowsPolygon (Data, type, ptr1, ptr2, add_plow);
+  PlowsPolygon (Data, type, ptr1, ptr2, add_plow);
 }
 
 void
@@ -1486,8 +1547,7 @@ ClearFromPolygon (DataType * Data, int type, void *ptr1, void *ptr2)
 {
   if (type == POLYGON_TYPE)
     InitClip (PCB->Data, (LayerTypePtr) ptr1, (PolygonTypePtr) ptr2);
-  else
-    PlowsPolygon (Data, type, ptr1, ptr2, subtract_plow);
+  PlowsPolygon (Data, type, ptr1, ptr2, subtract_plow);
 }
 
 Boolean
