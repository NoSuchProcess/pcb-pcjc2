Bottom: 5a84716d0b1a4084852e5a10700da1806afe50c6
Top:    8d41a7d279cd16deecf59cbaf1f6279b2ffbcf29
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2012-11-14 20:03:56 +0000

Allow polygons with CLEARLINEFLAG set to cut out other polygons

Gives the possibility to mask out regions which are to be free of
polygon fill.


















---

diff --git a/src/buffer.c b/src/buffer.c
index d311420..05ecbc8 100644
--- a/src/buffer.c
+++ b/src/buffer.c
@@ -362,6 +362,7 @@ MovePolygonToBuffer (LayerType *layer, PolygonType *polygon)
 {
   LayerType *lay = &Dest->Layer[GetLayerNumber (Source, layer)];
 
+  RestoreToPolygon (Source, POLYGON_TYPE, layer, polygon);
   r_delete_entry (layer->polygon_tree, (BoxType *)polygon);
 
   layer->Polygon = g_list_remove (layer->Polygon, polygon);
@@ -374,6 +375,7 @@ MovePolygonToBuffer (LayerType *layer, PolygonType *polygon)
   if (!lay->polygon_tree)
     lay->polygon_tree = r_create_tree (NULL, 0, 0);
   r_insert_entry (lay->polygon_tree, (BoxType *)polygon, 0);
+  ClearFromPolygon (Source, POLYGON_TYPE, layer, polygon);
   return (polygon);
 }
 
diff --git a/src/change.c b/src/change.c
index 7e95672..ae70f94 100644
--- a/src/change.c
+++ b/src/change.c
@@ -120,6 +120,9 @@ static void *ChangeTextJoin (LayerType *, TextType *);
 static void *SetTextJoin (LayerType *, TextType *);
 static void *ClrTextJoin (LayerType *, TextType *);
 static void *ChangePolyClear (LayerType *, PolygonType *);
+static void *ChangePolyJoin (LayerType *, PolygonType *);
+static void *SetPolyJoin (LayerType *, PolygonType *);
+static void *ClrPolyJoin (LayerType *, PolygonType *);
 
 /* ---------------------------------------------------------------------------
  * some local identifiers
@@ -214,7 +217,7 @@ static ObjectFunctionType ChangeSquareFunctions = {
 static ObjectFunctionType ChangeJoinFunctions = {
   ChangeLineJoin,
   ChangeTextJoin,
-  NULL,
+  ChangePolyJoin,
   NULL,
   NULL,
   NULL,
@@ -274,7 +277,7 @@ static ObjectFunctionType SetSquareFunctions = {
 static ObjectFunctionType SetJoinFunctions = {
   SetLineJoin,
   SetTextJoin,
-  NULL,
+  SetPolyJoin,
   NULL,
   NULL,
   NULL,
@@ -316,7 +319,7 @@ static ObjectFunctionType ClrSquareFunctions = {
 static ObjectFunctionType ClrJoinFunctions = {
   ClrLineJoin,
   ClrTextJoin,
-  NULL,
+  ClrPolyJoin,
   NULL,
   NULL,
   NULL,
@@ -1240,6 +1243,31 @@ ChangeTextJoin (LayerType *Layer, TextType *Text)
 }
 
 /* ---------------------------------------------------------------------------
+ * changes the clearance flag of a polygon
+ */
+static void *
+ChangePolyJoin (LayerTypePtr Layer, PolygonTypePtr poly)
+{
+  if (TEST_FLAG (LOCKFLAG, poly))
+    return (NULL);
+  ErasePolygon (poly);
+  if (TEST_FLAG(CLEARLINEFLAG, poly))
+  {
+  AddObjectToClearPolyUndoList (POLYGON_TYPE, Layer, poly, poly, false);
+  RestoreToPolygon (PCB->Data, POLYGON_TYPE, Layer, poly);
+  }
+  AddObjectToFlagUndoList (LINE_TYPE, Layer, poly, poly);
+  TOGGLE_FLAG (CLEARLINEFLAG, poly);
+  if (TEST_FLAG(CLEARLINEFLAG, poly))
+  {
+  AddObjectToClearPolyUndoList (POLYGON_TYPE, Layer, poly, poly, true);
+  ClearFromPolygon (PCB->Data, POLYGON_TYPE, Layer, poly);
+  }
+  DrawPolygon (Layer, poly);
+  return (poly);
+}
+
+/* ---------------------------------------------------------------------------
  * sets the clearance flag of a text
  */
 static void *
@@ -1251,6 +1279,17 @@ SetTextJoin (LayerType *Layer, TextType *Text)
 }
 
 /* ---------------------------------------------------------------------------
+ * sets the clearance flag of a polygon
+ */
+static void *
+SetPolyJoin (LayerTypePtr Layer, PolygonTypePtr poly)
+{
+  if (TEST_FLAG (LOCKFLAG, poly) || TEST_FLAG (CLEARLINEFLAG, poly))
+    return (NULL);
+  return ChangePolyJoin (Layer, poly);
+}
+
+/* ---------------------------------------------------------------------------
  * clears the clearance flag of a text
  */
 static void *
@@ -1262,6 +1301,17 @@ ClrTextJoin (LayerType *Layer, TextType *Text)
 }
 
 /* ---------------------------------------------------------------------------
+ * clears the clearance flag of a polygon
+ */
+static void *
+ClrPolyJoin (LayerTypePtr Layer, PolygonTypePtr poly)
+{
+  if (TEST_FLAG (LOCKFLAG, poly) || !TEST_FLAG (CLEARLINEFLAG, poly))
+    return (NULL);
+  return ChangePolyJoin (Layer, poly);
+}
+
+/* ---------------------------------------------------------------------------
  * changes the square flag of all pins on an element
  */
 static void *
diff --git a/src/change.h b/src/change.h
index 5d59362..a8f0de8 100644
--- a/src/change.h
+++ b/src/change.h
@@ -56,7 +56,7 @@
 	(ELEMENT_TYPE | PIN_TYPE | VIA_TYPE)
 
 #define CHANGEJOIN_TYPES	\
-	(ARC_TYPE | LINE_TYPE | TEXT_TYPE)
+	(ARC_TYPE | LINE_TYPE | TEXT_TYPE | POLYGON_TYPE)
 
 #define CHANGETHERMAL_TYPES	\
 	(PIN_TYPE | VIA_TYPE)
diff --git a/src/draw_funcs.c b/src/draw_funcs.c
index 2f0a5d6..a6834f2 100644
--- a/src/draw_funcs.c
+++ b/src/draw_funcs.c
@@ -166,7 +166,8 @@ draw_poly (PolygonType *polygon, const BoxType *drawn_area, void *userdata)
 
   if (gui->thindraw_pcb_polygon != NULL &&
       (TEST_FLAG (THINDRAWFLAG, PCB) ||
-       TEST_FLAG (THINDRAWPOLYFLAG, PCB)))
+       TEST_FLAG (THINDRAWPOLYFLAG, PCB) ||
+       TEST_FLAG (CLEARLINEFLAG, polygon)))
     gui->thindraw_pcb_polygon (Output.fgGC, polygon, drawn_area);
   else
     gui->fill_pcb_polygon (Output.fgGC, polygon, drawn_area);
diff --git a/src/move.c b/src/move.c
index d785823..cb2b24a 100644
--- a/src/move.c
+++ b/src/move.c
@@ -346,10 +346,12 @@ MovePolygon (LayerType *Layer, PolygonType *Polygon)
     {
       ErasePolygon (Polygon);
     }
+  RestoreToPolygon (PCB->Data, POLYGON_TYPE, Layer, Polygon);
   r_delete_entry (Layer->polygon_tree, (BoxType *)Polygon);
   MovePolygonLowLevel (Polygon, DeltaX, DeltaY);
   r_insert_entry (Layer->polygon_tree, (BoxType *)Polygon, 0);
   InitClip (PCB->Data, Layer, Polygon);
+  ClearFromPolygon (PCB->Data, POLYGON_TYPE, Layer, Polygon);
   if (Layer->On)
     {
       DrawPolygon (Layer, Polygon);
@@ -409,12 +411,14 @@ MovePolygonPoint (LayerType *Layer, PolygonType *Polygon,
     {
       ErasePolygon (Polygon);
     }
+  RestoreToPolygon (PCB->Data, POLYGON_TYPE, Layer, Polygon);
   r_delete_entry (Layer->polygon_tree, (BoxType *)Polygon);
   MOVE (Point->X, Point->Y, DeltaX, DeltaY);
   SetPolygonBoundingBox (Polygon);
   r_insert_entry (Layer->polygon_tree, (BoxType *)Polygon, 0);
   RemoveExcessPolygonPoints (Layer, Polygon);
   InitClip (PCB->Data, Layer, Polygon);
+  ClearFromPolygon (PCB->Data, POLYGON_TYPE, Layer, Polygon);
   if (Layer->On)
     {
       DrawPolygon (Layer, Polygon);
diff --git a/src/polygon.c b/src/polygon.c
index 3311b09..e15a65a 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -868,6 +868,20 @@ SubtractPad (PadType * pad, PolygonType * p)
   return Subtract (np, p, true);
 }
 
+static int
+SubtractPolygon (PolygonType * poly, PolygonType * p)
+{
+  POLYAREA *np;
+
+  /* Don't subtract from ourselves! */
+  if (poly == p || !TEST_FLAG (CLEARLINEFLAG, poly))
+    return 0;
+
+  np = original_poly (poly);
+
+  return Subtract (np, p, true);
+}
+
 struct cpInfo
 {
   const BoxType *other;
@@ -1020,6 +1034,24 @@ text_sub_callback (const BoxType * b, void *cl)
 }
 
 static int
+poly_sub_callback (const BoxType * b, void *cl)
+{
+  PolygonType *poly = (PolygonType *) b;
+  struct cpInfo *info = (struct cpInfo *) cl;
+  PolygonType *polygon;
+
+  /* don't subtract the object that was put back! */
+  if (b == info->other)
+    return 0;
+  if (!TEST_FLAG (CLEARLINEFLAG, poly))
+    return 0;
+  polygon = info->polygon;
+  if (SubtractPolygon (poly, polygon) < 0)
+    longjmp (info->env, 1);
+  return 1;
+}
+
+static int
 Group (DataType *Data, Cardinal layer)
 {
   Cardinal i, j;
@@ -1071,6 +1103,8 @@ clearPoly (DataType *Data, LayerType *Layer, PolygonType * polygon,
           r_search (layer->arc_tree, &region, NULL, arc_sub_callback, &info);
 	r +=
           r_search (layer->text_tree, &region, NULL, text_sub_callback, &info);
+        r +=
+          r_search (layer->polygon_tree, &region, NULL, poly_sub_callback, &info);
       }
       END_LOOP;
       r += r_search (Data->via_tree, &region, NULL, pin_sub_callback, &info);
@@ -1207,6 +1241,26 @@ UnsubtractPad (PadType * pad, LayerType * l, PolygonType * p)
   return 1;
 }
 
+static int
+UnsubtractPolygon (PolygonType * poly, LayerType * l, PolygonType * p)
+{
+  POLYAREA *np;
+
+  /* Don't subtract from ourselves! */
+  if (poly == p || !TEST_FLAG (CLEARLINEFLAG, poly))
+    return 0;
+
+  /* overlap a bit to prevent notches from rounding errors */
+  np = BoxPolyBloated (&poly->BoundingBox, UNSUBTRACT_BLOAT);
+
+  if (!np)
+    return 0;
+  if (!Unsubtract (np, p))
+    return 0;
+  clearPoly (PCB->Data, l, p, (const BoxType *) poly, 2 * UNSUBTRACT_BLOAT);
+  return 1;
+}
+
 static bool inhibit = false;
 
 int
@@ -1487,6 +1541,10 @@ subtract_plow (DataType *Data, LayerType *Layer, PolygonType *Polygon,
       SubtractPad ((PadType *) ptr2, Polygon);
       Polygon->NoHolesValid = 0;
       return 1;
+    case POLYGON_TYPE:
+      SubtractPolygon ((PolygonType *) ptr2, Polygon);
+      Polygon->NoHolesValid = 0;
+      return 1;
     case TEXT_TYPE:
       SubtractText ((TextType *) ptr2, Polygon);
       Polygon->NoHolesValid = 0;
@@ -1514,6 +1572,9 @@ add_plow (DataType *Data, LayerType *Layer, PolygonType *Polygon,
     case PAD_TYPE:
       UnsubtractPad ((PadType *) ptr2, Layer, Polygon);
       return 1;
+    case POLYGON_TYPE:
+      UnsubtractPolygon ((PolygonType *) ptr2, Layer, Polygon);
+      return 1;
     case TEXT_TYPE:
       UnsubtractText ((TextType *) ptr2, Layer, Polygon);
       return 1;
@@ -1577,6 +1638,7 @@ PlowsPolygon (DataType * Data, int type, void *ptr1, void *ptr2,
     case LINE_TYPE:
     case ARC_TYPE:
     case TEXT_TYPE:
+    case POLYGON_TYPE:
       /* the cast works equally well for lines and arcs */
       if (!TEST_FLAG (CLEARLINEFLAG, (LineType *) ptr2))
         return 0;
@@ -1632,8 +1694,7 @@ RestoreToPolygon (DataType * Data, int type, void *ptr1, void *ptr2)
 
   if (type == POLYGON_TYPE)
     InitClip (PCB->Data, (LayerType *) ptr1, (PolygonType *) ptr2);
-  else
-    PlowsPolygon (Data, type, ptr1, ptr2, add_plow);
+  PlowsPolygon (Data, type, ptr1, ptr2, add_plow);
 }
 
 void
@@ -1644,8 +1705,7 @@ ClearFromPolygon (DataType * Data, int type, void *ptr1, void *ptr2)
 
   if (type == POLYGON_TYPE)
     InitClip (PCB->Data, (LayerType *) ptr1, (PolygonType *) ptr2);
-  else
-    PlowsPolygon (Data, type, ptr1, ptr2, subtract_plow);
+  PlowsPolygon (Data, type, ptr1, ptr2, subtract_plow);
 }
 
 bool
