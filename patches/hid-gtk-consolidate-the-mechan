Bottom: ec614a3502d50deafe328ff5ed5416d092052c1f
Top:    70de8d908efb93d08b7cc0074d31f737d9c35bfa
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-06 22:28:09 +0100

hid/gtk: Consolidate the mechanisms used for holding off scrollbar updates

Don't duplicate mechanisms - it is confusing!


---

diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index a294777..331f214 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -58,14 +58,7 @@ ghid_port_ranges_changed (void)
 {
   GtkAdjustment *h_adj, *v_adj;
 
-  if (!ghidgui->combine_adjustments)
-    HideCrosshair ();
-  if (ghidgui->combine_adjustments)
-    {
-      ghidgui->combine_adjustments = FALSE;
-      return;
-    }
-
+  HideCrosshair ();
   ghidgui->need_restore_crosshair = TRUE;
 
   h_adj = gtk_range_get_adjustment (GTK_RANGE (ghidgui->h_range));
@@ -108,12 +101,13 @@ ghid_port_ranges_pan (gdouble x, gdouble y, gboolean relative)
   if (y1 > v_adj->upper - v_adj->page_size)
     y1 = v_adj->upper - v_adj->page_size;
 
-  if (x0 != x1 && y0 != y1)
-    ghidgui->combine_adjustments = TRUE;
-  if (x0 != x1)
-    gtk_range_set_value (GTK_RANGE (ghidgui->h_range), x1);
-  if (y0 != y1)
-    gtk_range_set_value (GTK_RANGE (ghidgui->v_range), y1);
+  ghidgui->adjustment_changed_holdoff = TRUE;
+  gtk_range_set_value (GTK_RANGE (ghidgui->h_range), x1);
+  gtk_range_set_value (GTK_RANGE (ghidgui->v_range), y1);
+  ghidgui->adjustment_changed_holdoff = FALSE;
+
+  if ((x0 != x1) || (y0 != y1))
+    ghid_port_ranges_changed();
 
   ghid_note_event_location (NULL);
   return ((x0 != x1) || (y0 != y1));
diff --git a/src/hid/gtk/gui.h b/src/hid/gtk/gui.h
index 97ebb1c..f419530 100644
--- a/src/hid/gtk/gui.h
+++ b/src/hid/gtk/gui.h
@@ -126,7 +126,7 @@ typedef struct
   gboolean adjustment_changed_holdoff,
     toggle_holdoff,
     command_entry_status_line_active,
-    auto_pan_on, in_popup, combine_adjustments;
+    auto_pan_on, in_popup;
 
   gboolean config_modified,
     small_label_markup,
