Bottom: dfbfd00c46f55a6c3647b5696a25deca732ab7fa
Top:    c58ad374c01cd455e5f13854d870aa5e5b1605b0
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-09-09 11:25:07 +0100

Speed up initial clipping (pours version of what we had before)


---

diff --git a/src/pour.c b/src/pour.c
index 61190a4..801a7b5 100644
--- a/src/pour.c
+++ b/src/pour.c
@@ -67,6 +67,8 @@ RCSID ("$Id$");
 #define ROUND(x) ((long)(((x) >= 0 ? (x) + 0.5  : (x) - 0.5)))
 
 #define UNSUBTRACT_BLOAT 100
+#define SUBTRACT_PIN_VIA_BATCH_SIZE 100
+#define SUBTRACT_LINE_BATCH_SIZE 20
 
 /* ---------------------------------------------------------------------------
  * local prototypes
@@ -526,9 +528,22 @@ struct cpInfo
   bool solder;
   POLYAREA *pg;
   BoxType *region;
+  POLYAREA *accumulate;
+  int batch_size;
   jmp_buf env;
 };
 
+static void
+subtract_accumulated (struct cpInfo *info)
+{
+  if (info->accumulate == NULL)
+    return;
+  if (subtract_poly (info->accumulate, &info->pg) < 0)
+    longjmp (info->env, 1);
+  info->accumulate = NULL;
+  info->batch_size = 0;
+}
+
 static int
 pin_sub_callback (const BoxType * b, void *cl)
 {
@@ -544,8 +559,12 @@ pin_sub_callback (const BoxType * b, void *cl)
   if (np == NULL)
     return 0;
 
-  if (subtract_poly (np, &info->pg) < 0)
-    longjmp (info->env, 1);
+  unite_poly (np, &info->accumulate);
+  info->batch_size ++;
+
+  if (info->batch_size == SUBTRACT_PIN_VIA_BATCH_SIZE)
+    subtract_accumulated (info);
+
   return 1;
 }
 
@@ -566,8 +585,12 @@ arc_sub_callback (const BoxType * b, void *cl)
   if (np == NULL)
     return 0;
 
-  if (subtract_poly (np, &info->pg) < 0)
-    longjmp (info->env, 1);
+  unite_poly (np, &info->accumulate);
+  info->batch_size ++;
+
+  if (info->batch_size == SUBTRACT_LINE_BATCH_SIZE)
+    subtract_accumulated (info);
+
   return 1;
 }
 
@@ -711,18 +734,23 @@ ClearPour (DataTypePtr Data, LayerTypePtr Layer, PourType * pour,
 
   if (setjmp (info.env) == 0)
     {
-      r  = r_search (Data->via_tree, &region, NULL, pin_sub_callback, &info);
-      r += r_search (Data->pin_tree, &region, NULL, pin_sub_callback, &info);
+      r = 0;
+      info.accumulate = NULL;
+      info.batch_size = 0;
+      if (info.solder || group == Group (Data, max_layer + COMPONENT_LAYER))
+        r += r_search (Data->pad_tree, &region, NULL, pad_sub_callback, &info);
       GROUP_LOOP (Data, group);
       {
         r += r_search (layer->line_tree, &region, NULL, line_sub_callback, &info);
+        subtract_accumulated (&info);
         r += r_search (layer->arc_tree,  &region, NULL, arc_sub_callback,  &info);
         r += r_search (layer->text_tree, &region, NULL, text_sub_callback, &info);
         r += r_search (layer->pour_tree, &region, NULL, pour_sub_callback, &info);
       }
       END_LOOP;
-      if (info.solder || group == Group (Data, max_layer + COMPONENT_LAYER))
-        r += r_search (Data->pad_tree, &region, NULL, pad_sub_callback, &info);
+      r += r_search (Data->via_tree, &region, NULL, pin_sub_callback, &info);
+      r += r_search (Data->pin_tree, &region, NULL, pin_sub_callback, &info);
+      subtract_accumulated (&info);
     }
 
   *pg = info.pg;
