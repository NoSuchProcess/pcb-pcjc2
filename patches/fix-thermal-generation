Bottom: d0822be85c5a453583a009ff631a9c5095ce33f3
Top:    b037ca4f4c5463c836a55047d539b3c1c4df68fd
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-01-23 16:48:12 +0000

Fix thermal generation


---

diff --git a/src/change.c b/src/change.c
index cb53b47..95128d0 100644
--- a/src/change.c
+++ b/src/change.c
@@ -440,21 +440,20 @@ ChangeVia2ndSize (PinTypePtr Via)
     {
       AddObjectTo2ndSizeUndoList (VIA_TYPE, Via, Via, Via);
       EraseVia (Via);
+      RestoreToPolygon (PCB->Data, VIA_TYPE, Via, Via);
       Via->DrillingHole = value;
       if (TEST_FLAG (HOLEFLAG, Via))
 	{
-	  RestoreToPolygon (PCB->Data, VIA_TYPE, Via, Via);
 	  AddObjectToSizeUndoList (VIA_TYPE, Via, Via, Via);
 	  Via->Thickness = value;
-	  ClearFromPolygon (PCB->Data, VIA_TYPE, Via, Via);
 	}
+      ClearFromPolygon (PCB->Data, VIA_TYPE, Via, Via);
       DrawVia (Via, 0);
       return (Via);
     }
   return (NULL);
 }
 
-
 /* ---------------------------------------------------------------------------
  * changes the clearance size of a via 
  * returns TRUE if changed
@@ -629,15 +628,15 @@ ChangeElement2ndSize (ElementTypePtr Element)
 	changed = true;
 	AddObjectTo2ndSizeUndoList (PIN_TYPE, Element, pin, pin);
 	ErasePin (pin);
+	RestoreToPolygon (PCB->Data, PIN_TYPE, Element, pin);
 	pin->DrillingHole = value;
-	DrawPin (pin, 0);
 	if (TEST_FLAG (HOLEFLAG, pin))
 	  {
-	    RestoreToPolygon (PCB->Data, PIN_TYPE, Element, pin);
 	    AddObjectToSizeUndoList (PIN_TYPE, Element, pin, pin);
 	    pin->Thickness = value;
-	    ClearFromPolygon (PCB->Data, PIN_TYPE, Element, pin);
 	  }
+	ClearFromPolygon (PCB->Data, PIN_TYPE, Element, pin);
+	DrawPin (pin, 0);
       }
   }
   END_LOOP;
@@ -666,15 +665,15 @@ ChangePin2ndSize (ElementTypePtr Element, PinTypePtr Pin)
     {
       AddObjectTo2ndSizeUndoList (PIN_TYPE, Element, Pin, Pin);
       ErasePin (Pin);
+      RestoreToPolygon (PCB->Data, PIN_TYPE, Element, Pin);
       Pin->DrillingHole = value;
-      DrawPin (Pin, 0);
       if (TEST_FLAG (HOLEFLAG, Pin))
 	{
-	  RestoreToPolygon (PCB->Data, PIN_TYPE, Element, Pin);
 	  AddObjectToSizeUndoList (PIN_TYPE, Element, Pin, Pin);
 	  Pin->Thickness = value;
-	  ClearFromPolygon (PCB->Data, PIN_TYPE, Element, Pin);
 	}
+      ClearFromPolygon (PCB->Data, PIN_TYPE, Element, Pin);
+      DrawPin (Pin, 0);
       return (Pin);
     }
   return (NULL);
diff --git a/src/thermal.c b/src/thermal.c
index f9dd369..93064f4 100644
--- a/src/thermal.c
+++ b/src/thermal.c
@@ -428,7 +428,7 @@ ThermPoly (PCBTypePtr p, PinTypePtr pin, Cardinal laynum)
       {
         POLYAREA *m;
         BDimension t = (pin->Thickness + pin->Clearance) / 2;
-        BDimension w = 0.5 * pcb->ThermScale * pin->Clearance;
+        BDimension w = pcb->ThermScale * (pin->Thickness - pin->DrillingHole);
         pa = CirclePoly (pin->X, pin->Y, t);
         arc = CirclePoly (pin->X, pin->Y, pin->Thickness / 2);
         /* create a thin ring */
@@ -436,15 +436,25 @@ ThermPoly (PCBTypePtr p, PinTypePtr pin, Cardinal laynum)
         /* fix me needs error checking */
         if (style == 2)
           {
-            pa = RectPoly (pin->X - t, pin->X + t, pin->Y - w, pin->Y + w);
+            pa = RectPoly (pin->X - t /* To avoid approximation errors: */ - w,
+                           pin->X + t /* To avoid approximation errors: */ + w,
+                           pin->Y - w / 2,
+                           pin->Y + w / 2);
             poly_Boolean_free (m, pa, &arc, PBO_SUB);
-            pa = RectPoly (pin->X - w, pin->X + w, pin->Y - t, pin->Y + t);
+            pa = RectPoly (pin->X - w / 2,
+                           pin->X + w / 2,
+                           pin->Y - t /* To avoid approximation errors: */ - w,
+                           pin->Y + t /* To avoid approximation errors: */ + w);
           }
         else
           {
-            pa = diag_line (pin->X, pin->Y, t, w, true);
+            pa = diag_line (pin->X, pin->Y,
+                            t /* To avoid approximation errors: */ + w,
+                            w / 2, true);
             poly_Boolean_free (m, pa, &arc, PBO_SUB);
-            pa = diag_line (pin->X, pin->Y, t, w, false);
+            pa = diag_line (pin->X, pin->Y,
+                            t /* To avoid approximation errors: */ + w,
+                            w / 2, false);
           }
         poly_Boolean_free (arc, pa, &m, PBO_SUB);
         return m;
@@ -458,9 +468,21 @@ ThermPoly (PCBTypePtr p, PinTypePtr pin, Cardinal laynum)
       a.Thickness = 1;
       a.Clearance = pin->Clearance / 2;
       a.Flags = NoFlags ();
-      a.Delta =
-        90 -
-        (a.Clearance * (1. + 2. * pcb->ThermScale) * 180) / (M_PI * a.Width);
+      a.Delta = 90 -
+        2 * asin (((pin->Thickness - pin->DrillingHole) * pcb->ThermScale / 2 +
+                   a.Clearance / 2) / a.Width) / M_PI * 180;
+      if (a.Delta < 0)
+        {
+          a.Delta = 0;
+          printf ("THERMAL DELTA < 0\n");
+          /* This is bad - we need a different shape entirely */
+        }
+      if (a.Delta < 10)
+        {
+          a.Delta = 10;
+          printf ("THERMAL DELTA < 10\n");
+          /* Quick kludge around broken ArcPoly implementation */
+        }
       a.StartAngle = 90 - a.Delta / 2 + (style == 4 ? 0 : 45);
       pa = ArcPoly (&a, a.Clearance);
       if (!pa)
