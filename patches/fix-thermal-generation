Bottom: 279fbcbda26f35a3eadf99f2b2339cdcc96a1180
Top:    12ae35c5dea9eaef60989df5eddbf3ffc30e84b9
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-19 00:25:00 +0100

Fix thermal generation

CAUTION: This patch does not give backwards compatible loading of existing
designs, and files created with it will not load the same in mainline git.


---

diff --git a/src/thermal.c b/src/thermal.c
index f9dd369..93064f4 100644
--- a/src/thermal.c
+++ b/src/thermal.c
@@ -428,7 +428,7 @@ ThermPoly (PCBTypePtr p, PinTypePtr pin, Cardinal laynum)
       {
         POLYAREA *m;
         BDimension t = (pin->Thickness + pin->Clearance) / 2;
-        BDimension w = 0.5 * pcb->ThermScale * pin->Clearance;
+        BDimension w = pcb->ThermScale * (pin->Thickness - pin->DrillingHole);
         pa = CirclePoly (pin->X, pin->Y, t);
         arc = CirclePoly (pin->X, pin->Y, pin->Thickness / 2);
         /* create a thin ring */
@@ -436,15 +436,25 @@ ThermPoly (PCBTypePtr p, PinTypePtr pin, Cardinal laynum)
         /* fix me needs error checking */
         if (style == 2)
           {
-            pa = RectPoly (pin->X - t, pin->X + t, pin->Y - w, pin->Y + w);
+            pa = RectPoly (pin->X - t /* To avoid approximation errors: */ - w,
+                           pin->X + t /* To avoid approximation errors: */ + w,
+                           pin->Y - w / 2,
+                           pin->Y + w / 2);
             poly_Boolean_free (m, pa, &arc, PBO_SUB);
-            pa = RectPoly (pin->X - w, pin->X + w, pin->Y - t, pin->Y + t);
+            pa = RectPoly (pin->X - w / 2,
+                           pin->X + w / 2,
+                           pin->Y - t /* To avoid approximation errors: */ - w,
+                           pin->Y + t /* To avoid approximation errors: */ + w);
           }
         else
           {
-            pa = diag_line (pin->X, pin->Y, t, w, true);
+            pa = diag_line (pin->X, pin->Y,
+                            t /* To avoid approximation errors: */ + w,
+                            w / 2, true);
             poly_Boolean_free (m, pa, &arc, PBO_SUB);
-            pa = diag_line (pin->X, pin->Y, t, w, false);
+            pa = diag_line (pin->X, pin->Y,
+                            t /* To avoid approximation errors: */ + w,
+                            w / 2, false);
           }
         poly_Boolean_free (arc, pa, &m, PBO_SUB);
         return m;
@@ -458,9 +468,21 @@ ThermPoly (PCBTypePtr p, PinTypePtr pin, Cardinal laynum)
       a.Thickness = 1;
       a.Clearance = pin->Clearance / 2;
       a.Flags = NoFlags ();
-      a.Delta =
-        90 -
-        (a.Clearance * (1. + 2. * pcb->ThermScale) * 180) / (M_PI * a.Width);
+      a.Delta = 90 -
+        2 * asin (((pin->Thickness - pin->DrillingHole) * pcb->ThermScale / 2 +
+                   a.Clearance / 2) / a.Width) / M_PI * 180;
+      if (a.Delta < 0)
+        {
+          a.Delta = 0;
+          printf ("THERMAL DELTA < 0\n");
+          /* This is bad - we need a different shape entirely */
+        }
+      if (a.Delta < 10)
+        {
+          a.Delta = 10;
+          printf ("THERMAL DELTA < 10\n");
+          /* Quick kludge around broken ArcPoly implementation */
+        }
       a.StartAngle = 90 - a.Delta / 2 + (style == 4 ? 0 : 45);
       pa = ArcPoly (&a, a.Clearance);
       if (!pa)
