Bottom: 2c622f2468d9e3b0d73e43039eb1048917f38b2d
Top:    45bcde928f05b65cf7f8b2d1bc5db21d46cd737e
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-10-20 23:34:37 +0100

Other projection / layer order fixes


---

diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index 990e744..5569db1 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -1484,6 +1484,7 @@ ghid_draw_everything (BoxTypePtr drawn_area)
   /* This is the reverse of the order in which we draw them.  */
   int drawn_groups[MAX_LAYER];
   struct cyl_info cyl_info;
+  int reverse_layers;
 
   extern char *current_color;
   extern Boolean Gathering;
@@ -1491,12 +1492,24 @@ ghid_draw_everything (BoxTypePtr drawn_area)
   current_color = NULL;
   Gathering = False;
 
+  /* Test direction of rendering */
+  /* Look at sign of eye coordinate system z-coord when projecting a
+     world vector along +ve Z axis, (0, 0, 1). */
+  /* FIXME: This isn't strictly correct, as I've ignored the matrix
+            elements for homogeneous coordinates. */
+    /* NB: last_modelview_matrix is transposed in memory! */
+  reverse_layers = last_modelview_matrix[2][2] < 0;
+  Settings.ShowSolderSide = reverse_layers ? !Settings.ShowSolderSide : Settings.ShowSolderSide;
+
   memset (do_group, 0, sizeof (do_group));
   for (ngroups = 0, i = 0; i < max_layer; i++) {
+    int orderi;
+
+    orderi = reverse_layers ? max_layer - i - 1 : i;
 
     // Draw in numerical order
-    LayerType *l = LAYER_PTR (i); // LAYER_ON_STACK (i);
-    int group = GetLayerGroupNumberByNumber (i); // (LayerStack[i]);
+    LayerType *l = LAYER_PTR (orderi); // LAYER_ON_STACK (i);
+    int group = GetLayerGroupNumberByNumber (orderi); // (LayerStack[i]);
 
     if (/*l->On && */!do_group[group]) {
       do_group[group] = 1;
@@ -1599,6 +1612,7 @@ ghid_draw_everything (BoxTypePtr drawn_area)
     DrawRats(drawn_area);
 
   Gathering = True;
+  Settings.ShowSolderSide = reverse_layers ? !Settings.ShowSolderSide : Settings.ShowSolderSide;
 }
 
 static int one_shot = 1;
