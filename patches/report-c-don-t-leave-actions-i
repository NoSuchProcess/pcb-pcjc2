Bottom: 843b269db50b197b8dde9a1c84a314e33bfeb77f
Top:    571d495c353e70715cf3a2dc9b7f11a66138f81e
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-09-15 00:24:17 +0100

report.c: Don't leave actions in the undo stack (and not increment the serial)

Some actions in ReportNetLengthByName() would have been lumped in with
whatever actions were next added to the undo stack.

FIXME: Could probably clean this up with a goto end; type tear-down for the
Undo at exit.


---

diff --git a/src/report.c b/src/report.c
index 4d5e27b..0e89425 100644
--- a/src/report.c
+++ b/src/report.c
@@ -783,6 +783,7 @@ ReportNetLengthByName (char *tofind, int x, int y)
   RestoreUndoSerialNumber ();
   ResetFoundLinesAndPolygons (true);
   RestoreUndoSerialNumber ();
+  IncrementUndoSerialNumber ();
 
 #if defined(USE_RE)
       use_re = 1;
@@ -805,6 +806,7 @@ ReportNetLengthByName (char *tofind, int x, int y)
 	      regerror (result, &elt_pattern, errorstring, 128);
 	      Message (_("regexp error: %s\n"), errorstring);
 	      regfree (&elt_pattern);
+              Undo (true);
 	      return (1);
 	    }
 #endif
@@ -812,6 +814,7 @@ ReportNetLengthByName (char *tofind, int x, int y)
 	  if ((elt_pattern = re_comp (tofind)) != NULL)
 	    {
 	      Message (_("re_comp error: %s\n"), elt_pattern);
+              Undo (true);
 	      return (false);
 	    }
 #endif
@@ -862,6 +865,7 @@ ReportNetLengthByName (char *tofind, int x, int y)
   if (!net_found)
     {
       gui->log ("No net named %s\n", tofind);
+      Undo (true);
       return 1;
     }
 #ifdef HAVE_REGCOMP
@@ -875,11 +879,13 @@ ReportNetLengthByName (char *tofind, int x, int y)
   if (!found && net_found)
   {
       gui->log ("Net found, but no lines or arcs were flagged.\n");
+      Undo (true);
       return 1;
   }
   else if (!found)
   {
       gui->log ("Net not found.\n");
+      Undo (true);
       return 1;
   }
 
@@ -891,6 +897,7 @@ ReportNetLengthByName (char *tofind, int x, int y)
     else
       gui->log ("Net length: %s\n", buf);
   }
+  Undo (true);
   return 0;
 }
