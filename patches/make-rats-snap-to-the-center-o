Bottom: 855f6aaecdc8a07713adf6717e1c0b4944d995f3
Top:    16eecb3dbfb6858f5cebae9b61e836a42fbaaa62
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-11-15 00:11:59 +0000

Make rats snap to the center of pads, not the edges











---

diff --git a/src/find.c b/src/find.c
index b24512a..1962234 100644
--- a/src/find.c
+++ b/src/find.c
@@ -2191,10 +2191,12 @@ LOCtoPad_callback (const BoxType * b, void *cl)
   struct rat_info *i = (struct rat_info *) cl;
 
   if (!TEST_FLAG (TheFlag, pad) && i->layer ==
-      (TEST_FLAG (ONSOLDERFLAG, pad) ? SOLDER_LAYER : COMPONENT_LAYER)
-      && (((pad->Point1.X == i->Point->X && pad->Point1.Y == i->Point->Y)) ||
-          ((pad->Point2.X == i->Point->X && pad->Point2.Y == i->Point->Y)))
-      && ADD_PAD_TO_LIST (i->layer, pad))
+	(TEST_FLAG (ONSOLDERFLAG, pad) ? SOLDER_LAYER : COMPONENT_LAYER) &&
+      ((pad->Point1.X == i->Point->X && pad->Point1.Y == i->Point->Y) ||
+       (pad->Point2.X == i->Point->X && pad->Point2.Y == i->Point->Y) ||
+       ((pad->Point1.X + pad->Point2.X) / 2 == i->Point->X &&
+        (pad->Point1.Y + pad->Point2.Y) / 2 == i->Point->Y)) &&
+      ADD_PAD_TO_LIST (i->layer, pad))
     longjmp (i->env, 1);
   return 0;
 }
@@ -2306,19 +2308,19 @@ LOCtoPadRat_callback (const BoxType * b, void *cl)
   if (!TEST_FLAG (TheFlag, rat))
     {
       if (rat->group1 == i->layer &&
-          ((rat->Point1.X == i->pad.Point1.X
-            && rat->Point1.Y == i->pad.Point1.Y)
-           || (rat->Point1.X == i->pad.Point2.X
-               && rat->Point1.Y == i->pad.Point2.Y)))
+	  ((rat->Point1.X == i->pad.Point1.X && rat->Point1.Y == i->pad.Point1.Y) ||
+	   (rat->Point1.X == i->pad.Point2.X && rat->Point1.Y == i->pad.Point2.Y) ||
+	   (rat->Point1.X == (i->pad.Point1.X + i->pad.Point2.X) / 2 &&
+	    rat->Point1.Y == (i->pad.Point1.Y + i->pad.Point2.Y) / 2)))
         {
           if (ADD_RAT_TO_LIST (rat))
             longjmp (i->env, 1);
         }
       else if (rat->group2 == i->layer &&
-               ((rat->Point2.X == i->pad.Point1.X
-                 && rat->Point2.Y == i->pad.Point1.Y)
-                || (rat->Point2.X == i->pad.Point2.X
-                    && rat->Point2.Y == i->pad.Point2.Y)))
+	       ((rat->Point2.X == i->pad.Point1.X && rat->Point2.Y == i->pad.Point1.Y) ||
+		(rat->Point2.X == i->pad.Point2.X && rat->Point2.Y == i->pad.Point2.Y) ||
+		(rat->Point2.X == (i->pad.Point1.X + i->pad.Point2.X) / 2 &&
+		 rat->Point2.Y == (i->pad.Point1.Y + i->pad.Point2.Y) / 2)))
         {
           if (ADD_RAT_TO_LIST (rat))
             longjmp (i->env, 1);
diff --git a/src/rubberband.c b/src/rubberband.c
index a806d6d..ec4920f 100644
--- a/src/rubberband.c
+++ b/src/rubberband.c
@@ -293,6 +293,16 @@ rat_callback (const BoxType * box, void *cl)
 	if (rat->Point2.X == i->pad->Point2.X &&
 	    rat->Point2.Y == i->pad->Point2.Y && rat->group2 == i->group)
 	CreateNewRubberbandEntry (NULL, (LineTypePtr) rat, &rat->Point2);
+      else
+	if (rat->Point1.X == (i->pad->Point1.X + i->pad->Point2.X) / 2 &&
+	    rat->Point1.Y == (i->pad->Point1.Y + i->pad->Point2.Y) / 2 &&
+	    rat->group1 == i->group)
+	CreateNewRubberbandEntry (NULL, (LineTypePtr) rat, &rat->Point1);
+      else
+	if (rat->Point2.X == (i->pad->Point1.X + i->pad->Point2.X) / 2 &&
+	    rat->Point2.Y == (i->pad->Point1.Y + i->pad->Point2.Y) / 2 &&
+	    rat->group2 == i->group)
+	CreateNewRubberbandEntry (NULL, (LineTypePtr) rat, &rat->Point2);
       break;
     case LINEPOINT_TYPE:
       if (rat->group1 == i->group &&
