Bottom: 03ad9c12655c1b15eab16687a3c49ff53946c01d
Top:    3b853151b01f46991014a5fddc175ad3fd432787
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-08-26 14:21:05 +0100

polygon.c: Make RectPoly return NULL for zero or negatively sized rectangles

Previously we would hit an assertion failure, where we could indicate the
problem by returning NULL.

I've hit an issue in which some expose events in the GTK (+GL) HID are
collapsing to a zero-width region on the PCB, and some code is tripping
up on the bad clip polygon produced using RectPoly on the coordinates.
This causes segfaults in the branch which contains code to clip rendering
of the soldermask at the board outline.

We could (and perhaps should) test in the expose handler, but the failure
mode here is not ideal. Since most builds of PCB run with asserts disabled,
the asserts are not hit here and a bad polygon is silently gets created
with no contours. This upsets the polygon algebra routines somewhat, but
returning a NULL (empty) polygon would be fine.


---

diff --git a/src/polygon.c b/src/polygon.c
index 7367968..b17edf0 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -335,8 +335,10 @@ RectPoly (Coord x1, Coord x2, Coord y1, Coord y2)
   PLINE *contour = NULL;
   Vector v;
 
-  assert (x2 > x1);
-  assert (y2 > y1);
+  /* Return NULL for zero or negatively sized rectangles */
+  if (x2 <= x1 || y2 <= y1)
+    return NULL;
+
   v[0] = x1;
   v[1] = y1;
   if ((contour = poly_NewContour (v)) == NULL)
