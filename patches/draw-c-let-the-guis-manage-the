Bottom: 6e20a9080a2ebb7fcb7f6706a21be9806b28aa9b
Top:    4bc9717ae3945b6d9303a0dedbc923bf66c4021d
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-26 20:13:31 +0100

draw.c: Let the GUIs manage the crosshair across a redraw


---

diff --git a/src/draw.c b/src/draw.c
index fcd605b..6eb0d81 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -154,13 +154,9 @@ AddPart (void *b)
 void
 Draw (void)
 {
-  HideCrosshair ();
-
   if (Block.X1 <= Block.X2 && Block.Y1 <= Block.Y2)
     gui->invalidate_lr (Block.X1, Block.X2, Block.Y1, Block.Y2);
 
-  RestoreCrosshair ();
-
   /* shrink the update block */
   Block.X1 = Block.Y1 =  MAXINT;
   Block.X2 = Block.Y2 = -MAXINT;
diff --git a/src/hid/gtk/gtkhid-gdk.c b/src/hid/gtk/gtkhid-gdk.c
index ba58d5d..c9947c2 100644
--- a/src/hid/gtk/gtkhid-gdk.c
+++ b/src/hid/gtk/gtkhid-gdk.c
@@ -770,9 +770,8 @@ ghid_invalidate_all ()
 
   hid_expose_callback (&ghid_hid, &region, 0);
   ghid_draw_grid ();
-  if (ghidgui->need_restore_crosshair)
-    RestoreCrosshair ();
-  ghidgui->need_restore_crosshair = FALSE;
+
+  DrawAttached ();
   ghid_screen_update ();
 }
 
diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index 268988d..b62ecf0 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -58,9 +58,6 @@ ghid_port_ranges_changed (void)
 {
   GtkAdjustment *h_adj, *v_adj;
 
-  HideCrosshair ();
-  ghidgui->need_restore_crosshair = TRUE;
-
   h_adj = gtk_range_get_adjustment (GTK_RANGE (ghidgui->h_range));
   v_adj = gtk_range_get_adjustment (GTK_RANGE (ghidgui->v_range));
   gport->view_x0 = h_adj->value;
@@ -305,11 +302,8 @@ ghid_port_key_release_cb (GtkWidget * drawing_area, GdkEventKey * kev,
   if (ghid_is_modifier_key_sym (ksym))
     ghid_note_event_location (NULL);
 
-  HideCrosshair ();
   AdjustAttachedObjects ();
   ghid_invalidate_all ();
-  RestoreCrosshair ();
-  ghid_screen_update ();
   g_idle_add (ghid_idle_cb, NULL);
   return FALSE;
 }
@@ -447,15 +441,12 @@ ghid_port_button_press_cb (GtkWidget * drawing_area,
   state = (GdkModifierType) (ev->state);
   mk = ghid_modifier_keys_state (&state);
   ghid_show_crosshair (FALSE);
-  HideCrosshair ();
 
   do_mouse_action(ev->button, mk);
 
   ghid_invalidate_all ();
-  RestoreCrosshair ();
   ghid_window_set_name_label (PCB->Name);
   ghid_set_status_line_label ();
-  ghid_show_crosshair (TRUE);
   if (!gport->panning)
     g_idle_add (ghid_idle_cb, NULL);
   return TRUE;
@@ -473,14 +464,10 @@ ghid_port_button_release_cb (GtkWidget * drawing_area,
   state = (GdkModifierType) (ev->state);
   mk = ghid_modifier_keys_state (&state);
 
-  HideCrosshair ();
-
   do_mouse_action(ev->button, mk + M_Release);
 
   AdjustAttachedObjects ();
   ghid_invalidate_all ();
-  RestoreCrosshair ();
-  ghid_screen_update ();
 
   ghid_window_set_name_label (PCB->Name);
   ghid_set_status_line_label ();
@@ -496,7 +483,6 @@ ghid_port_drawing_area_configure_event_cb (GtkWidget * widget,
 {
   static gboolean first_time_done;
 
-  HideCrosshair ();
   gport->width = ev->width;
   gport->height = ev->height;
 
@@ -530,7 +516,6 @@ ghid_port_drawing_area_configure_event_cb (GtkWidget * widget,
 
   ghid_port_ranges_scale (FALSE);
   ghid_invalidate_all ();
-  RestoreCrosshair ();
   return 0;
 }
 
diff --git a/src/hid/gtk/gui-top-window.c b/src/hid/gtk/gui-top-window.c
index f33678a..1a81c58 100644
--- a/src/hid/gtk/gui-top-window.c
+++ b/src/hid/gtk/gui-top-window.c
@@ -650,11 +650,8 @@ ghid_menu_cb (GtkAction * action, gpointer data)
    */
   if (ghidgui->toggle_holdoff == FALSE) 
     {
-      HideCrosshair ();
       AdjustAttachedObjects ();
       ghid_invalidate_all ();
-      RestoreCrosshair ();
-      ghid_screen_update ();
       ghid_window_set_name_label (PCB->Name);
       ghid_set_status_line_label ();
 #ifdef FIXME
diff --git a/src/hid/gtk/gui.h b/src/hid/gtk/gui.h
index d7f0d39..180e58c 100644
--- a/src/hid/gtk/gui.h
+++ b/src/hid/gtk/gui.h
@@ -132,7 +132,7 @@ typedef struct
     small_label_markup,
     compact_horizontal,
     compact_vertical,
-    ghid_title_window, use_command_window, need_restore_crosshair, creating;
+    ghid_title_window, use_command_window, creating;
 
   gint n_mode_button_columns,
     top_window_width,
