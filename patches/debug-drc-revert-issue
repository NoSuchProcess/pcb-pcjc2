Bottom: 1d7d9a59cafe2c4188dd4e2f4c1e7568885e3822
Top:    7b2d5c6bb7106f7aefd7af03753e3abb0f692224
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-09-13 22:46:30 +0100

Debug DRC revert issue


---

diff --git a/src/find.c b/src/find.c
index be2df67..db4c3d3 100644
--- a/src/find.c
+++ b/src/find.c
@@ -3534,7 +3534,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
           drc = false;
           Bloat = -PCB->Shrink;
           TheFlag = SELECTEDFLAG;
-          RestoreUndoSerialNumber ();
+//          RestoreUndoSerialNumber ();
           ListStart (What, ptr1, ptr2, ptr3);
           DoIt (true, true);
           DumpList ();
@@ -3588,7 +3588,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
       User = true;
       drc = false;
       Bloat = 0;
-      RestoreUndoSerialNumber ();
+//      RestoreUndoSerialNumber ();
       TheFlag = SELECTEDFLAG;
       ListStart (What, ptr1, ptr2, ptr3);
       DoIt (true, true);
diff --git a/src/hid/gtk/gui-drc-window.c b/src/hid/gtk/gui-drc-window.c
index ce0210c..9f37599 100644
--- a/src/hid/gtk/gui-drc-window.c
+++ b/src/hid/gtk/gui-drc-window.c
@@ -94,179 +94,6 @@ enum {
 };
 
 
-static void
-unset_found_flags (int AndDraw)
-{
-  int flag = FOUNDFLAG;
-  int change = 0;
-
-  VIA_LOOP (PCB->Data);
-  {
-    if (TEST_FLAG (flag, via))
-      {
-	AddObjectToFlagUndoList (VIA_TYPE, via, via, via);
-	CLEAR_FLAG (flag, via);
-	DrawVia (via);
-	change = true;
-      }
-  }
-  END_LOOP;
-  ELEMENT_LOOP (PCB->Data);
-  {
-    PIN_LOOP (element);
-    {
-      if (TEST_FLAG (flag, pin))
-	{
-	  AddObjectToFlagUndoList (PIN_TYPE, element, pin, pin);
-	  CLEAR_FLAG (flag, pin);
-	  DrawPin (pin);
-	  change = true;
-	}
-    }
-    END_LOOP;
-    PAD_LOOP (element);
-    {
-      if (TEST_FLAG (flag, pad))
-	{
-	  AddObjectToFlagUndoList (PAD_TYPE, element, pad, pad);
-	  CLEAR_FLAG (flag, pad);
-	  DrawPad (pad);
-	  change = true;
-	}
-    }
-    END_LOOP;
-  }
-  END_LOOP;
-  RAT_LOOP (PCB->Data);
-  {
-    if (TEST_FLAG (flag, line))
-      {
-	AddObjectToFlagUndoList (RATLINE_TYPE, line, line, line);
-	CLEAR_FLAG (flag, line);
-	DrawRat (line);
-	change = true;
-      }
-  }
-  END_LOOP;
-  COPPERLINE_LOOP (PCB->Data);
-  {
-    if (TEST_FLAG (flag, line))
-      {
-	AddObjectToFlagUndoList (LINE_TYPE, layer, line, line);
-	CLEAR_FLAG (flag, line);
-	DrawLine (layer, line);
-	change = true;
-      }
-  }
-  ENDALL_LOOP;
-  COPPERARC_LOOP (PCB->Data);
-  {
-    if (TEST_FLAG (flag, arc))
-      {
-	AddObjectToFlagUndoList (ARC_TYPE, layer, arc, arc);
-	CLEAR_FLAG (flag, arc);
-	DrawArc (layer, arc);
-	change = true;
-      }
-  }
-  ENDALL_LOOP;
-  COPPERPOLYGON_LOOP (PCB->Data);
-  {
-    if (TEST_FLAG (flag, polygon))
-      {
-	AddObjectToFlagUndoList (POLYGON_TYPE, layer, polygon, polygon);
-	CLEAR_FLAG (flag, polygon);
-	DrawPolygon (layer, polygon);
-	change = true;
-      }
-  }
-  ENDALL_LOOP;
-  if (change)
-    {
-      SetChangedFlag (true);
-      if (AndDraw)
-	{
-	  IncrementUndoSerialNumber ();
-	  Draw ();
-	}
-    }
-}
-
-static void
-selection_changed_cb (GtkTreeSelection *selection, gpointer user_data)
-{
-  GtkTreeModel *model;
-  GtkTreeIter iter;
-  GhidDrcViolation *violation;
-  int i;
-
-  if (!gtk_tree_selection_get_selected (selection, &model, &iter))
-    {
-      unset_found_flags (true);
-      return;
-    }
-
-  /* Check the selected node has children, if so; return. */
-  if (gtk_tree_model_iter_has_child (model, &iter))
-    return;
-
-  gtk_tree_model_get (model, &iter, DRC_VIOLATION_OBJ_COL, &violation, -1);
-
-  unset_found_flags (false);
-
-  if (violation == NULL)
-    return;
-
-  /* Flag the objects listed against this DRC violation */
-  for (i = 0; i < violation->object_count; i++)
-    {
-      int object_id = violation->object_id_list[i];
-      int object_type = violation->object_type_list[i];
-      int found_type;
-      void *ptr1, *ptr2, *ptr3;
-
-      found_type = SearchObjectByID (PCB->Data, &ptr1, &ptr2, &ptr3,
-				     object_id, object_type);
-      if (found_type == NO_TYPE)
-	{
-	  Message (_("Object ID %i identified during DRC was not found. Stale DRC window?\n"),
-		   object_id);
-	  continue;
-	}
-      AddObjectToFlagUndoList (object_type, ptr1, ptr2, ptr3);
-      SET_FLAG (FOUNDFLAG, (AnyObjectType *)ptr2);
-      switch (violation->object_type_list[i])
-	{
-	case LINE_TYPE:
-	case ARC_TYPE:
-	case POLYGON_TYPE:
-	  ChangeGroupVisibility (GetLayerNumber (PCB->Data, (LayerTypePtr) ptr1), true, true);
-	}
-      DrawObject (object_type, ptr1, ptr2);
-    }
-  SetChangedFlag (true);
-  IncrementUndoSerialNumber ();
-  Draw();
-}
-
-static void
-row_activated_cb (GtkTreeView *view, GtkTreePath *path,
-		  GtkTreeViewColumn *column, gpointer user_data)
-{
-  GtkTreeModel *model = gtk_tree_view_get_model (view);
-  GtkTreeIter iter;
-  GhidDrcViolation *violation;
-
-  gtk_tree_model_get_iter (model, &iter, path);
-
-  gtk_tree_model_get (model, &iter, DRC_VIOLATION_OBJ_COL, &violation, -1);
-
-  if (violation == NULL)
-    return;
-
-  CenterDisplay (violation->x_coord, violation->y_coord);
-}
-
 
 enum
 {
@@ -733,6 +560,7 @@ ghid_violation_renderer_render (GtkCellRenderer      *cell,
 									  expose_area,
 									  flags);
 
+#if 0
   if (violation == NULL)
     return;
 
@@ -756,6 +584,7 @@ ghid_violation_renderer_render (GtkCellRenderer      *cell,
 		     mydrawable, 0, 0,
 		     cell_area->x + cell_area->width + VIOLATION_PIXMAP_PIXEL_BORDER,
 		     cell_area->y + VIOLATION_PIXMAP_PIXEL_BORDER, -1, -1);
+#endif
 }
 
 
@@ -892,10 +721,10 @@ ghid_drc_window_show (gboolean raise)
   gtk_container_add (GTK_CONTAINER (scrolled_window), drc_list);
 
   gtk_tree_view_set_rules_hint (GTK_TREE_VIEW (drc_list), TRUE);
-  g_signal_connect (gtk_tree_view_get_selection (GTK_TREE_VIEW (drc_list)), "changed",
-		    G_CALLBACK (selection_changed_cb), NULL);
-  g_signal_connect (drc_list, "row-activated",
-		    G_CALLBACK (row_activated_cb), NULL);
+//  g_signal_connect (gtk_tree_view_get_selection (GTK_TREE_VIEW (drc_list)), "changed",
+//		    G_CALLBACK (selection_changed_cb), NULL);
+//  g_signal_connect (drc_list, "row-activated",
+//		    G_CALLBACK (row_activated_cb), NULL);
 
   violation_renderer = gtk_cell_renderer_text_new ();
   gtk_tree_view_insert_column_with_attributes (GTK_TREE_VIEW (drc_list),
diff --git a/src/undo.c b/src/undo.c
index 576b9cb..02333cf 100644
--- a/src/undo.c
+++ b/src/undo.c
@@ -961,6 +961,7 @@ Undo (bool draw)
   UndoListTypePtr ptr;
   int Types = 0;
   int unique;
+  printf("undo: %d\n", draw);
 
   unique = TEST_FLAG (UNIQUENAMEFLAG, PCB);
   CLEAR_FLAG (UNIQUENAMEFLAG, PCB);
@@ -1126,6 +1127,8 @@ Redo (bool draw)
   UndoListTypePtr ptr;
   int Types = 0;
 
+  printf("redo: %d\n", draw);
+
   andDraw = draw;
   do
     {
@@ -1162,6 +1165,7 @@ void
 RestoreUndoSerialNumber (void)
 {
   Serial = SavedSerial;
+  printf("restore undo to %d\n", Serial);
 }
 
 /* ---------------------------------------------------------------------------
@@ -1172,6 +1176,7 @@ SaveUndoSerialNumber (void)
 {
   Bumped = false;
   SavedSerial = Serial;
+  printf("save undo to %d\n", Serial);
 }
 
 /* ---------------------------------------------------------------------------
@@ -1185,12 +1190,15 @@ IncrementUndoSerialNumber (void)
   if (!Locked)
     {
       /* don't increment if nothing was added */
-      if (UndoN == 0 || UndoList[UndoN - 1].Serial != Serial)
+      if (UndoN == 0 || UndoList[UndoN - 1].Serial != Serial) {
+        printf ("BAM\n");
 	return;
+      }
       Serial++;
       Bumped = true;
       SetChangedFlag (true);
     }
+  printf("increment undo locked=%d bump=%d\n", Locked, Serial);
 }
 
 /* ---------------------------------------------------------------------------
