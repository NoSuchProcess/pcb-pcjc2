Bottom: e69bfe7e6e438bd79820c13ea498f1a81dd6a664
Top:    10b05bb6ecf7364c5f2299c1a61bd4d17ddf6dc8
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-09-05 11:57:02 +0100

hid/gtk: Avoid double-destroying the file-changed info_bar on "Reload"

This was caused by an addition I made in the earlier patch to destroy
the info_bar when the user manually reverts or loads a new file).

The callback on revert button was trying to delete it (again) after
the revert _action_ we call triggered a destroy of the widget. Avoid
this by destroying the info_bar before we call the revert action.


---

diff --git a/src/hid/gtk/gui-top-window.c b/src/hid/gtk/gui-top-window.c
index 1352be0..b06feb7 100644
--- a/src/hid/gtk/gui-top-window.c
+++ b/src/hid/gtk/gui-top-window.c
@@ -614,11 +614,11 @@ info_bar_response_cb (GtkInfoBar *info_bar,
 {
   GhidGui *_gui = (GhidGui *)user_data;
 
-  if (response_id == GTK_RESPONSE_ACCEPT)
-    hid_actionl ("LoadFrom", "revert", "none", NULL);
-
   gtk_widget_destroy (_gui->info_bar);
   _gui->info_bar = NULL;
+
+  if (response_id == GTK_RESPONSE_ACCEPT)
+    hid_actionl ("LoadFrom", "revert", "none", NULL);
 }
 
 static void
