Bottom: 4dcbd8e547c863967eeb8678aca0d41859127772
Top:    01026523f11be09aa989c5f5fdcd3533393397b2
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-12-15 18:52:22 +0000

find.c: Make Is{Arc,Line,Pad,Polygon}InPolygon() functions static

These are only used from within find.c, so make them static so the
compiler is more free to optimise their usage.


---

diff --git a/src/find.c b/src/find.c
index 6a1a7b4..4734aac 100644
--- a/src/find.c
+++ b/src/find.c
@@ -330,6 +330,11 @@ static void GotoError (void);
 static bool DRCFind (int, void *, void *, void *);
 static bool ListStart (int, void *, void *, void *);
 static bool SetThing (int, void *, void *, void *);
+static bool IsArcInPolygon (ArcType *, PolygonType *);
+static bool IsLineInPolygon (LineType *, PolygonType *);
+static bool IsPadInPolygon (PadType *, PolygonType *);
+static bool IsPolygonInPolygon (PolygonType *, PolygonType *);
+
 
 /* ---------------------------------------------------------------------------
  * some of the 'pad' routines are the same as for lines because the 'pad'
@@ -2373,7 +2378,7 @@ LookupLOConnectionsToPolygon (PolygonType *Polygon, Cardinal LayerGroup)
  * - check the two end points of the arc. If none of them matches
  * - check all segments of the polygon against the arc.
  */
-bool
+static bool
 IsArcInPolygon (ArcType *Arc, PolygonType *Polygon)
 {
   BoxType *Box = (BoxType *) Arc;
@@ -2405,7 +2410,7 @@ IsArcInPolygon (ArcType *Arc, PolygonType *Polygon)
  * - check the two end points of the line. If none of them matches
  * - check all segments of the polygon against the line.
  */
-bool
+static bool
 IsLineInPolygon (LineType *Line, PolygonType *Polygon)
 {
   BoxType *Box = (BoxType *) Line;
@@ -2444,7 +2449,7 @@ IsLineInPolygon (LineType *Line, PolygonType *Polygon)
  *
  * The polygon is assumed to already have been proven non-clearing
  */
-bool
+static bool
 IsPadInPolygon (PadType *pad, PolygonType *polygon)
 {
     return IsLineInPolygon ((LineType *) pad, polygon);
@@ -2456,7 +2461,7 @@ IsPadInPolygon (PadType *pad, PolygonType *polygon)
  * First check all points out of P1 against P2 and vice versa.
  * If both fail check all lines of P1 against the ones of P2
  */
-bool
+static bool
 IsPolygonInPolygon (PolygonType *P1, PolygonType *P2)
 {
   if (!P1->Clipped || !P2->Clipped)
diff --git a/src/find.h b/src/find.h
index d811634..4c9279d 100644
--- a/src/find.h
+++ b/src/find.h
@@ -48,7 +48,6 @@ bool LineArcIntersect (LineType *, ArcType *);
 bool PinLineIntersect (PinType *, LineType *);
 bool LinePadIntersect (LineType *, PadType *);
 bool ArcPadIntersect (ArcType *, PadType *);
-bool IsPolygonInPolygon (PolygonType *, PolygonType *);
 void LookupElementConnections (ElementType *, FILE *);
 void LookupConnectionsToAllElements (FILE *);
 void LookupConnection (Coord, Coord, bool, Coord, int, bool AndRats);
@@ -66,8 +65,5 @@ void RatFindHook (int, void *, void *, void *, bool, bool);
 void SaveFindFlag (int);
 void RestoreFindFlag (void);
 int DRCAll (void);
-bool IsLineInPolygon (LineType *, PolygonType *);
-bool IsArcInPolygon (ArcType *, PolygonType *);
-bool IsPadInPolygon (PadType *, PolygonType *);
 
 #endif
