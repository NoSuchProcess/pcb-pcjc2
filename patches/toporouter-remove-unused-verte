Bottom: ef12221b9b980010ecf33567429f0b17dee2a194
Top:    d4b08189fdb10c3b1d5bc5b796b0285ec9e6c744
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-10-01 13:33:59 +0100

toporouter: Remove unused vertex_move_towards_point[_values]() functions


---

diff --git a/src/toporouter.c b/src/toporouter.c
index e5310b0..1c4c332 100644
--- a/src/toporouter.c
+++ b/src/toporouter.c
@@ -858,40 +858,6 @@ coord_move_towards_coord_values(gdouble ax, gdouble ay, gdouble px, gdouble py,
 
 /* moves vertex v d units in the direction of vertex p */
 void
-vertex_move_towards_point_values(GtsVertex *v, gdouble px, gdouble py, gdouble d, gdouble *x, gdouble *y) 
-{
-  gdouble dx = px - GTS_POINT(v)->x;
-  gdouble dy = py - GTS_POINT(v)->y;
-  gdouble theta = atan(fabs(dy/dx));
-
-  g_assert(finite(theta));
-
-  if( dx >= 0. ) {
-
-    if( dy >= 0. ) {
-      *x = GTS_POINT(v)->x + (d * cos(theta));
-      *y = GTS_POINT(v)->y + (d * sin(theta));
-    }else{
-      *x = GTS_POINT(v)->x + (d * cos(theta));
-      *y = GTS_POINT(v)->y - (d * sin(theta));
-    }
-
-  }else{
-    
-    if( dy >= 0. ) {
-      *x = GTS_POINT(v)->x - (d * cos(theta));
-      *y = GTS_POINT(v)->y + (d * sin(theta));
-    }else{
-      *x = GTS_POINT(v)->x - (d * cos(theta));
-      *y = GTS_POINT(v)->y - (d * sin(theta));
-    }
-
-  }
-
-}
-
-/* moves vertex v d units in the direction of vertex p */
-void
 vertex_move_towards_vertex_values(GtsVertex *v, GtsVertex *p, gdouble d, gdouble *x, gdouble *y) 
 {
   gdouble dx = GTS_POINT(p)->x - GTS_POINT(v)->x;
@@ -5197,40 +5163,6 @@ routing_return:
 
 /* moves vertex v d units in the direction of vertex p */
 void
-vertex_move_towards_point(GtsVertex *v, gdouble px, gdouble py, gdouble d) 
-{
-  gdouble dx = px - GTS_POINT(v)->x;
-  gdouble dy = py - GTS_POINT(v)->y;
-  gdouble theta = atan(fabs(dy/dx));
-
-  g_assert(finite(theta));
-
-  if( dx >= 0. ) {
-
-    if( dy >= 0. ) {
-      GTS_POINT(v)->x += d * cos(theta);
-      GTS_POINT(v)->y += d * sin(theta);
-    }else{
-      GTS_POINT(v)->x += d * cos(theta);
-      GTS_POINT(v)->y -= d * sin(theta);
-    }
-
-  }else{
-    
-    if( dy >= 0. ) {
-      GTS_POINT(v)->x -= d * cos(theta);
-      GTS_POINT(v)->y += d * sin(theta);
-    }else{
-      GTS_POINT(v)->x -= d * cos(theta);
-      GTS_POINT(v)->y -= d * sin(theta);
-    }
-
-  }
-
-}
-
-/* moves vertex v d units in the direction of vertex p */
-void
 vertex_move_towards_vertex(GtsVertex *v, GtsVertex *p, gdouble d) 
 {
   gdouble dx = GTS_POINT(p)->x - GTS_POINT(v)->x;
