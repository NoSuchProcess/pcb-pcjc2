Bottom: 4977b9a4f1756d2a337e038303c1261f8da0b398
Top:    f2ba62bb03489f33055865980cf06942f66694a9
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-10-01 13:33:59 +0100

toporouter: Remove unused vertex_move_towards_point[_values]() functions


---

diff --git a/src/toporouter.c b/src/toporouter.c
index a89679c..9aef423 100644
--- a/src/toporouter.c
+++ b/src/toporouter.c
@@ -859,40 +859,6 @@ coord_move_towards_coord_values(gdouble ax, gdouble ay, gdouble px, gdouble py,
 
 /* moves vertex v d units in the direction of vertex p */
 void
-vertex_move_towards_point_values(GtsVertex *v, gdouble px, gdouble py, gdouble d, gdouble *x, gdouble *y) 
-{
-  gdouble dx = px - GTS_POINT(v)->x;
-  gdouble dy = py - GTS_POINT(v)->y;
-  gdouble theta = atan(fabs(dy/dx));
-
-  g_assert(finite(theta));
-
-  if( dx >= 0. ) {
-
-    if( dy >= 0. ) {
-      *x = GTS_POINT(v)->x + (d * cos(theta));
-      *y = GTS_POINT(v)->y + (d * sin(theta));
-    }else{
-      *x = GTS_POINT(v)->x + (d * cos(theta));
-      *y = GTS_POINT(v)->y - (d * sin(theta));
-    }
-
-  }else{
-    
-    if( dy >= 0. ) {
-      *x = GTS_POINT(v)->x - (d * cos(theta));
-      *y = GTS_POINT(v)->y + (d * sin(theta));
-    }else{
-      *x = GTS_POINT(v)->x - (d * cos(theta));
-      *y = GTS_POINT(v)->y - (d * sin(theta));
-    }
-
-  }
-
-}
-
-/* moves vertex v d units in the direction of vertex p */
-void
 vertex_move_towards_vertex_values(GtsVertex *v, GtsVertex *p, gdouble d, gdouble *x, gdouble *y) 
 {
   gdouble dx = GTS_POINT(p)->x - GTS_POINT(v)->x;
@@ -5198,40 +5164,6 @@ routing_return:
 
 /* moves vertex v d units in the direction of vertex p */
 void
-vertex_move_towards_point(GtsVertex *v, gdouble px, gdouble py, gdouble d) 
-{
-  gdouble dx = px - GTS_POINT(v)->x;
-  gdouble dy = py - GTS_POINT(v)->y;
-  gdouble theta = atan(fabs(dy/dx));
-
-  g_assert(finite(theta));
-
-  if( dx >= 0. ) {
-
-    if( dy >= 0. ) {
-      GTS_POINT(v)->x += d * cos(theta);
-      GTS_POINT(v)->y += d * sin(theta);
-    }else{
-      GTS_POINT(v)->x += d * cos(theta);
-      GTS_POINT(v)->y -= d * sin(theta);
-    }
-
-  }else{
-    
-    if( dy >= 0. ) {
-      GTS_POINT(v)->x -= d * cos(theta);
-      GTS_POINT(v)->y += d * sin(theta);
-    }else{
-      GTS_POINT(v)->x -= d * cos(theta);
-      GTS_POINT(v)->y -= d * sin(theta);
-    }
-
-  }
-
-}
-
-/* moves vertex v d units in the direction of vertex p */
-void
 vertex_move_towards_vertex(GtsVertex *v, GtsVertex *p, gdouble d) 
 {
   gdouble dx = GTS_POINT(p)->x - GTS_POINT(v)->x;
