Bottom: 951915eb7454627df6bfcbc1cfc048e5775a96ad
Top:    47c7589729c325b494b1f07f8eaa9e2daaa319aa
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2015-01-11 18:36:41 +0000

Refresh of move-some-fields-from-the-hid

---

diff --git a/src/draw.c b/src/draw.c
index 5eaa3fc..45f72c0 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -566,7 +566,7 @@ DrawEverything (const BoxType *drawn_area)
    * first draw all 'invisible' stuff
    */
   if (!TEST_FLAG (CHECKPLANESFLAG, PCB)
-      && gui->graphics->set_layer ("invisible", SL (INVISIBLE, 0), 0))
+      && hid_draw_set_layer (gui->graphics, "invisible", SL (INVISIBLE, 0), 0))
     {
       side = SWAP_IDENT ? TOP_SIDE : BOTTOM_SIDE;
       if (PCB->ElementOn)
@@ -576,7 +576,7 @@ DrawEverything (const BoxType *drawn_area)
 	  DrawLayer (&(PCB->Data->Layer[max_copper_layer + side]), drawn_area);
 	}
       r_search (PCB->Data->pad_tree, drawn_area, NULL, pad_callback, &side);
-      gui->graphics->end_layer ();
+      hid_draw_end_layer (gui->graphics);
     }
 
   /* draw all layers in layerstack order */
@@ -584,10 +584,10 @@ DrawEverything (const BoxType *drawn_area)
     {
       int group = drawn_groups[i];
 
-      if (gui->graphics->set_layer (0, group, 0))
+      if (hid_draw_set_layer (gui->graphics, 0, group, 0))
         {
           DrawLayerGroup (group, drawn_area);
-          gui->graphics->end_layer ();
+          hid_draw_end_layer (gui->graphics);
         }
     }
 
@@ -601,42 +601,42 @@ DrawEverything (const BoxType *drawn_area)
     {
       CountHoles (&plated, &unplated, drawn_area);
 
-      if (plated && gui->graphics->set_layer ("plated-drill", SL (PDRILL, 0), 0))
+      if (plated && hid_draw_set_layer (gui->graphics, "plated-drill", SL (PDRILL, 0), 0))
         {
           DrawHoles (true, false, drawn_area);
-          gui->graphics->end_layer ();
+          hid_draw_end_layer (gui->graphics);
         }
 
-      if (unplated && gui->graphics->set_layer ("unplated-drill", SL (UDRILL, 0), 0))
+      if (unplated && hid_draw_set_layer (gui->graphics, "unplated-drill", SL (UDRILL, 0), 0))
         {
           DrawHoles (false, true, drawn_area);
-          gui->graphics->end_layer ();
+          hid_draw_end_layer (gui->graphics);
         }
     }
 
   /* Draw the solder mask if turned on */
-  if (gui->graphics->set_layer ("componentmask", SL (MASK, TOP), 0))
+  if (hid_draw_set_layer (gui->graphics, "componentmask", SL (MASK, TOP), 0))
     {
       DrawMask (TOP_SIDE, drawn_area);
-      gui->graphics->end_layer ();
+      hid_draw_end_layer (gui->graphics);
     }
 
-  if (gui->graphics->set_layer ("soldermask", SL (MASK, BOTTOM), 0))
+  if (hid_draw_set_layer (gui->graphics, "soldermask", SL (MASK, BOTTOM), 0))
     {
       DrawMask (BOTTOM_SIDE, drawn_area);
-      gui->graphics->end_layer ();
+      hid_draw_end_layer (gui->graphics);
     }
 
-  if (gui->graphics->set_layer ("topsilk", SL (SILK, TOP), 0))
+  if (hid_draw_set_layer (gui->graphics, "topsilk", SL (SILK, TOP), 0))
     {
       DrawSilk (TOP_SIDE, drawn_area);
-      gui->graphics->end_layer ();
+      hid_draw_end_layer (gui->graphics);
     }
 
-  if (gui->graphics->set_layer ("bottomsilk", SL (SILK, BOTTOM), 0))
+  if (hid_draw_set_layer (gui->graphics, "bottomsilk", SL (SILK, BOTTOM), 0))
     {
       DrawSilk (BOTTOM_SIDE, drawn_area);
-      gui->graphics->end_layer ();
+      hid_draw_end_layer (gui->graphics);
     }
 
   if (gui->graphics->klass->gui)
@@ -646,43 +646,43 @@ DrawEverything (const BoxType *drawn_area)
 	r_search (PCB->Data->element_tree, drawn_area, NULL, EMark_callback,
 		  NULL);
       /* Draw rat lines on top */
-      if (gui->graphics->set_layer ("rats", SL (RATS, 0), 0))
+      if (hid_draw_set_layer (gui->graphics, "rats", SL (RATS, 0), 0))
         {
           DrawRats(drawn_area);
-          gui->graphics->end_layer ();
+          hid_draw_end_layer (gui->graphics);
         }
     }
 
   paste_empty = IsPasteEmpty (TOP_SIDE);
-  if (gui->graphics->set_layer ("toppaste", SL (PASTE, TOP), paste_empty))
+  if (hid_draw_set_layer (gui->graphics, "toppaste", SL (PASTE, TOP), paste_empty))
     {
       DrawPaste (TOP_SIDE, drawn_area);
-      gui->graphics->end_layer ();
+      hid_draw_end_layer (gui->graphics);
     }
 
   paste_empty = IsPasteEmpty (BOTTOM_SIDE);
-  if (gui->graphics->set_layer ("bottompaste", SL (PASTE, BOTTOM), paste_empty))
+  if (hid_draw_set_layer (gui->graphics, "bottompaste", SL (PASTE, BOTTOM), paste_empty))
     {
       DrawPaste (BOTTOM_SIDE, drawn_area);
-      gui->graphics->end_layer ();
+      hid_draw_end_layer (gui->graphics);
     }
 
-  if (gui->graphics->set_layer ("topassembly", SL (ASSY, TOP), 0))
+  if (hid_draw_set_layer (gui->graphics, "topassembly", SL (ASSY, TOP), 0))
     {
       PrintAssembly (TOP_SIDE, drawn_area);
-      gui->graphics->end_layer ();
+      hid_draw_end_layer (gui->graphics);
     }
 
-  if (gui->graphics->set_layer ("bottomassembly", SL (ASSY, BOTTOM), 0))
+  if (hid_draw_set_layer (gui->graphics, "bottomassembly", SL (ASSY, BOTTOM), 0))
     {
       PrintAssembly (BOTTOM_SIDE, drawn_area);
-      gui->graphics->end_layer ();
+      hid_draw_end_layer (gui->graphics);
     }
 
-  if (gui->graphics->set_layer ("fab", SL (FAB, 0), 0))
+  if (hid_draw_set_layer (gui->graphics, "fab", SL (FAB, 0), 0))
     {
       PrintFab (Output.fgGC);
-      gui->graphics->end_layer ();
+      hid_draw_end_layer (gui->graphics);
     }
 }
 
diff --git a/src/hid/batch/batch.c b/src/hid/batch/batch.c
index 27bcc71..412f95e 100644
--- a/src/hid/batch/batch.c
+++ b/src/hid/batch/batch.c
@@ -344,7 +344,6 @@ hid_batch_init ()
   batch_hid.parse_arguments       = batch_parse_arguments;
   batch_hid.invalidate_lr         = batch_invalidate_lr;
   batch_hid.invalidate_all        = batch_invalidate_all;
-  batch_hid.set_layer             = batch_set_layer;
   batch_hid.calibrate             = batch_calibrate;
   batch_hid.shift_is_pressed      = batch_shift_is_pressed;
   batch_hid.control_is_pressed    = batch_control_is_pressed;
@@ -364,6 +363,7 @@ hid_batch_init ()
 
   common_draw_helpers_class_init (&batch_graphics_class);
 
+  batch_graphics_class.set_layer      = batch_set_layer;
   batch_graphics_class.make_gc        = batch_make_gc;
   batch_graphics_class.destroy_gc     = batch_destroy_gc;
   batch_graphics_class.use_mask       = batch_use_mask;
diff --git a/src/hid/common/extents.c b/src/hid/common/extents.c
index dd53f94..1b4746f 100644
--- a/src/hid/common/extents.c
+++ b/src/hid/common/extents.c
@@ -182,12 +182,11 @@ hid_extents_init (void)
   extents_hid.name                = "extents-extents";
   extents_hid.description         = "used to calculate extents";
 
-  extents_hid.set_layer           = extents_set_layer;
-
   extents_hid.graphics            = &extents_graphics;
 
   common_draw_helpers_class_init (&extents_graphics_class);
 
+  extents_graphics_class.set_layer      = extents_set_layer;
   extents_graphics_class.make_gc        = extents_make_gc;
   extents_graphics_class.destroy_gc     = extents_destroy_gc;
   extents_graphics_class.use_mask       = extents_use_mask;
diff --git a/src/hid/common/hidnogui.c b/src/hid/common/hidnogui.c
index 3b85044..85e678d 100644
--- a/src/hid/common/hidnogui.c
+++ b/src/hid/common/hidnogui.c
@@ -448,8 +448,6 @@ common_nogui_init (HID *hid)
   hid->parse_arguments =      nogui_parse_arguments;
   hid->invalidate_lr =        nogui_invalidate_lr;
   hid->invalidate_all =       nogui_invalidate_all;
-  hid->set_layer =            nogui_set_layer;
-  hid->end_layer =            nogui_end_layer;
   hid->calibrate =            nogui_calibrate;
   hid->shift_is_pressed =     nogui_shift_is_pressed;
   hid->control_is_pressed =   nogui_control_is_pressed;
@@ -481,6 +479,8 @@ common_nogui_init (HID *hid)
 static void
 common_nogui_graphics_class_init (HID_DRAW_CLASS *klass)
 {
+  klass->set_layer =       nogui_set_layer;
+  klass->end_layer =       nogui_end_layer;
   klass->make_gc =         nogui_make_gc;
   klass->destroy_gc =      nogui_destroy_gc;
   klass->use_mask =        nogui_use_mask;
diff --git a/src/hid/gcode/gcode.c b/src/hid/gcode/gcode.c
index 1daadfd..a68e86e 100644
--- a/src/hid/gcode/gcode.c
+++ b/src/hid/gcode/gcode.c
@@ -1617,7 +1617,6 @@ hid_gcode_init ()
   gcode_hid.get_export_options  = gcode_get_export_options;
   gcode_hid.do_export           = gcode_do_export;
   gcode_hid.parse_arguments     = gcode_parse_arguments;
-  gcode_hid.set_layer           = gcode_set_layer;
   gcode_hid.calibrate           = gcode_calibrate;
   gcode_hid.set_crosshair       = gcode_set_crosshair;
 
@@ -1625,6 +1624,7 @@ hid_gcode_init ()
 
   common_draw_helpers_class_init (&gcode_graphics_class);
 
+  gcode_graphics_class.set_layer      = gcode_set_layer;
   gcode_graphics_class.make_gc        = gcode_make_gc;
   gcode_graphics_class.destroy_gc     = gcode_destroy_gc;
   gcode_graphics_class.use_mask       = gcode_use_mask;
diff --git a/src/hid/gerber/gerber.c b/src/hid/gerber/gerber.c
index 6185304..22ae4d6 100644
--- a/src/hid/gerber/gerber.c
+++ b/src/hid/gerber/gerber.c
@@ -1355,7 +1355,6 @@ hid_gerber_init ()
   gerber_hid.get_export_options  = gerber_get_export_options;
   gerber_hid.do_export           = gerber_do_export;
   gerber_hid.parse_arguments     = gerber_parse_arguments;
-  gerber_hid.set_layer           = gerber_set_layer;
   gerber_hid.calibrate           = gerber_calibrate;
   gerber_hid.set_crosshair       = gerber_set_crosshair;
 
@@ -1363,6 +1362,7 @@ hid_gerber_init ()
 
   common_draw_helpers_class_init (&gerber_graphics_class);
 
+  gerber_graphics_class.set_layer      = gerber_set_layer;
   gerber_graphics_class.make_gc        = gerber_make_gc;
   gerber_graphics_class.destroy_gc     = gerber_destroy_gc;
   gerber_graphics_class.use_mask       = gerber_use_mask;
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index b5e4a00..4690dd5 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -803,7 +803,7 @@ ghid_init_renderer (int *argc, char ***argv, GHidPort *port)
     }
 
   /* Setup HID function pointers specific to the GL renderer*/
-  ghid_hid.end_layer = ghid_end_layer;
+  ghid_graphics_class.end_layer = ghid_end_layer;
   ghid_graphics_class.fill_pcb_polygon = ghid_fill_pcb_polygon;
   ghid_graphics_class.thindraw_pcb_polygon = ghid_thindraw_pcb_polygon;
 }
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 7870f6d..20becc7 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -2145,7 +2145,6 @@ hid_gtk_init ()
   ghid_hid.invalidate_all           = ghid_invalidate_all;
   ghid_hid.notify_crosshair_change  = ghid_notify_crosshair_change;
   ghid_hid.notify_mark_change       = ghid_notify_mark_change;
-  ghid_hid.set_layer                = ghid_set_layer;
 
   ghid_hid.calibrate                = ghid_calibrate;
   ghid_hid.shift_is_pressed         = ghid_shift_is_pressed;
@@ -2185,6 +2184,7 @@ hid_gtk_init ()
 
   common_draw_helpers_class_init (&ghid_graphics_class);
 
+  ghid_graphics_class.set_layer      = ghid_set_layer;
   ghid_graphics_class.make_gc        = ghid_make_gc;
   ghid_graphics_class.destroy_gc     = ghid_destroy_gc;
   ghid_graphics_class.use_mask       = ghid_use_mask;
diff --git a/src/hid/lesstif/main.c b/src/hid/lesstif/main.c
index 1682ead..df636d9 100644
--- a/src/hid/lesstif/main.c
+++ b/src/hid/lesstif/main.c
@@ -4080,7 +4080,6 @@ hid_lesstif_init ()
   lesstif_hid.invalidate_all          = lesstif_invalidate_all;
   lesstif_hid.notify_crosshair_change = lesstif_notify_crosshair_change;
   lesstif_hid.notify_mark_change      = lesstif_notify_mark_change;
-  lesstif_hid.set_layer               = lesstif_set_layer;
 
   lesstif_hid.calibrate               = lesstif_calibrate;
   lesstif_hid.shift_is_pressed        = lesstif_shift_is_pressed;
@@ -4116,6 +4115,7 @@ hid_lesstif_init ()
 
   common_draw_helpers_class_init (&lesstif_graphics_class);
 
+  lesstif_graphics_class.set_layer      = lesstif_set_layer;
   lesstif_graphics_class.make_gc        = lesstif_make_gc;
   lesstif_graphics_class.destroy_gc     = lesstif_destroy_gc;
   lesstif_graphics_class.use_mask       = lesstif_use_mask;
diff --git a/src/hid/nelma/nelma.c b/src/hid/nelma/nelma.c
index 481d7c2..dff74b0 100644
--- a/src/hid/nelma/nelma.c
+++ b/src/hid/nelma/nelma.c
@@ -1074,7 +1074,6 @@ hid_nelma_init()
   nelma_hid.get_export_options  = nelma_get_export_options;
   nelma_hid.do_export           = nelma_do_export;
   nelma_hid.parse_arguments     = nelma_parse_arguments;
-  nelma_hid.set_layer           = nelma_set_layer;
   nelma_hid.calibrate           = nelma_calibrate;
   nelma_hid.set_crosshair       = nelma_set_crosshair;
 
@@ -1082,6 +1081,7 @@ hid_nelma_init()
 
   common_draw_helpers_class_init (&nelma_graphics_class);
 
+  nelma_graphics_class.set_layer      = nelma_set_layer;
   nelma_graphics_class.make_gc        = nelma_make_gc;
   nelma_graphics_class.destroy_gc     = nelma_destroy_gc;
   nelma_graphics_class.use_mask       = nelma_use_mask;
diff --git a/src/hid/png/png.c b/src/hid/png/png.c
index 8e649c8..00dd54c 100644
--- a/src/hid/png/png.c
+++ b/src/hid/png/png.c
@@ -1849,7 +1849,6 @@ hid_png_init ()
   png_hid.get_export_options  = png_get_export_options;
   png_hid.do_export           = png_do_export;
   png_hid.parse_arguments     = png_parse_arguments;
-  png_hid.set_layer           = png_set_layer;
   png_hid.calibrate           = png_calibrate;
   png_hid.set_crosshair       = png_set_crosshair;
 
@@ -1857,6 +1856,7 @@ hid_png_init ()
 
   common_draw_helpers_class_init (&png_graphics_class);
 
+  png_graphics_class.set_layer      = png_set_layer;
   png_graphics_class.make_gc        = png_make_gc;
   png_graphics_class.destroy_gc     = png_destroy_gc;
   png_graphics_class.use_mask       = png_use_mask;
diff --git a/src/hid/ps/eps.c b/src/hid/ps/eps.c
index 2420092..3f0afc6 100644
--- a/src/hid/ps/eps.c
+++ b/src/hid/ps/eps.c
@@ -690,7 +690,6 @@ hid_eps_init ()
   eps_hid.get_export_options  = eps_get_export_options;
   eps_hid.do_export           = eps_do_export;
   eps_hid.parse_arguments     = eps_parse_arguments;
-  eps_hid.set_layer           = eps_set_layer;
   eps_hid.calibrate           = eps_calibrate;
   eps_hid.set_crosshair       = eps_set_crosshair;
 
@@ -698,6 +697,7 @@ hid_eps_init ()
 
   common_draw_helpers_class_init (&eps_graphics_class);
 
+  eps_graphics_class.set_layer      = eps_set_layer;
   eps_graphics_class.make_gc        = eps_make_gc;
   eps_graphics_class.destroy_gc     = eps_destroy_gc;
   eps_graphics_class.use_mask       = eps_use_mask;
diff --git a/src/hid/ps/ps.c b/src/hid/ps/ps.c
index 5ceb757..1572ccc 100644
--- a/src/hid/ps/ps.c
+++ b/src/hid/ps/ps.c
@@ -1528,13 +1528,13 @@ void ps_ps_init (HID *hid)
   hid->get_export_options = ps_get_export_options;
   hid->do_export          = ps_do_export;
   hid->parse_arguments    = ps_parse_arguments;
-  hid->set_layer          = ps_set_layer;
   hid->calibrate          = ps_calibrate;
   hid->set_crosshair      = ps_set_crosshair;
 }
 
 void ps_ps_graphics_class_init (HID_DRAW_CLASS *klass)
 {
+  klass->set_layer          = ps_set_layer;
   klass->make_gc            = ps_make_gc;
   klass->destroy_gc         = ps_destroy_gc;
   klass->use_mask           = ps_use_mask;
diff --git a/src/hid_draw.h b/src/hid_draw.h
index 30de626..64cb7ec 100644
--- a/src/hid_draw.h
+++ b/src/hid_draw.h
@@ -102,13 +102,13 @@ struct hid_gc_struct {
 
 /* Calling wrappers to access the vfunc table */
 
-inline hidGC
+inline int
 hid_draw_set_layer (HID_DRAW *hid_draw, const char *name, int group, int empty)
 {
-  hid_draw->klass->set_layer (name, group, empty);
+  return hid_draw->klass->set_layer (name, group, empty);
 }
 
-inline hidGC
+inline void
 hid_draw_end_layer (HID_DRAW *hid_draw)
 {
   hid_draw->klass->end_layer ();
