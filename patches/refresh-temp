Bottom: 932bd2c0f991d43725a278e5a282a19e3ff51ce6
Top:    74504e742ef30235a8c53f5a75af405678d166df
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2015-01-11 16:07:57 +0000

Refresh of tmp-0

---

diff --git a/src/draw.c b/src/draw.c
index e1a9024..e358c2c 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -74,6 +74,8 @@ static BoxType Block = {MAXINT, MAXINT, -MAXINT, -MAXINT};
 
 static int doing_pinout = 0;
 static bool doing_assy = false;
+static HID *hid = NULL;
+static HID_DRAW *hid_draw = NULL;
 
 /* ---------------------------------------------------------------------------
  * some local prototypes
@@ -126,7 +128,7 @@ void
 Draw (void)
 {
   if (Block.X1 <= Block.X2 && Block.Y1 <= Block.Y2)
-    gui->invalidate_lr (Block.X1, Block.X2, Block.Y1, Block.Y2);
+    hid->invalidate_lr (Block.X1, Block.X2, Block.Y1, Block.Y2);
 
   /* shrink the update block */
   Block.X1 = Block.Y1 =  MAXINT;
@@ -176,10 +178,10 @@ _draw_pv_name (PinType *pv)
   text.Y = box.Y1;
   text.Direction = vert ? 1 : 0;
 
-  if (gui->gui)
+  if (hid->gui)
     doing_pinout++;
   hid_draw_pcb_text (Output.fgGC, &text, 0);
-  if (gui->gui)
+  if (hid->gui)
     doing_pinout--;
 }
 
@@ -320,7 +322,7 @@ pad_callback (const BoxType * b, void *cl)
 static void
 draw_element_name (ElementType *element)
 {
-  if ((TEST_FLAG (HIDENAMESFLAG, PCB) && gui->gui) ||
+  if ((TEST_FLAG (HIDENAMESFLAG, PCB) && hid->gui) ||
       TEST_FLAG (HIDENAMEFLAG, element))
     return;
   if (doing_pinout || doing_assy)
@@ -566,7 +568,7 @@ DrawEverything (const BoxType *drawn_area)
    * first draw all 'invisible' stuff
    */
   if (!TEST_FLAG (CHECKPLANESFLAG, PCB)
-      && gui->set_layer ("invisible", SL (INVISIBLE, 0), 0))
+      && hid->set_layer ("invisible", SL (INVISIBLE, 0), 0))
     {
       side = SWAP_IDENT ? TOP_SIDE : BOTTOM_SIDE;
       if (PCB->ElementOn)
@@ -576,7 +578,7 @@ DrawEverything (const BoxType *drawn_area)
 	  DrawLayer (&(PCB->Data->Layer[max_copper_layer + side]), drawn_area);
 	}
       r_search (PCB->Data->pad_tree, drawn_area, NULL, pad_callback, &side);
-      gui->end_layer ();
+      hid->end_layer ();
     }
 
   /* draw all layers in layerstack order */
@@ -584,105 +586,105 @@ DrawEverything (const BoxType *drawn_area)
     {
       int group = drawn_groups[i];
 
-      if (gui->set_layer (0, group, 0))
+      if (hid->set_layer (0, group, 0))
         {
           DrawLayerGroup (group, drawn_area);
-          gui->end_layer ();
+          hid->end_layer ();
         }
     }
 
-  if (TEST_FLAG (CHECKPLANESFLAG, PCB) && gui->gui)
+  if (TEST_FLAG (CHECKPLANESFLAG, PCB) && hid->gui)
     return;
 
   /* Draw pins, pads, vias below silk */
-  if (gui->gui)
+  if (hid->gui)
     DrawPPV (SWAP_IDENT ? bottom_group : top_group, drawn_area);
   else
     {
       CountHoles (&plated, &unplated, drawn_area);
 
-      if (plated && gui->set_layer ("plated-drill", SL (PDRILL, 0), 0))
+      if (plated && hid->set_layer ("plated-drill", SL (PDRILL, 0), 0))
         {
           DrawHoles (true, false, drawn_area);
-          gui->end_layer ();
+          hid->end_layer ();
         }
 
-      if (unplated && gui->set_layer ("unplated-drill", SL (UDRILL, 0), 0))
+      if (unplated && hid->set_layer ("unplated-drill", SL (UDRILL, 0), 0))
         {
           DrawHoles (false, true, drawn_area);
-          gui->end_layer ();
+          hid->end_layer ();
         }
     }
 
   /* Draw the solder mask if turned on */
-  if (gui->set_layer ("componentmask", SL (MASK, TOP), 0))
+  if (hid->set_layer ("componentmask", SL (MASK, TOP), 0))
     {
       DrawMask (TOP_SIDE, drawn_area);
-      gui->end_layer ();
+      hid->end_layer ();
     }
 
-  if (gui->set_layer ("soldermask", SL (MASK, BOTTOM), 0))
+  if (hid->set_layer ("soldermask", SL (MASK, BOTTOM), 0))
     {
       DrawMask (BOTTOM_SIDE, drawn_area);
-      gui->end_layer ();
+      hid->end_layer ();
     }
 
-  if (gui->set_layer ("topsilk", SL (SILK, TOP), 0))
+  if (hid->set_layer ("topsilk", SL (SILK, TOP), 0))
     {
       DrawSilk (TOP_SIDE, drawn_area);
-      gui->end_layer ();
+      hid->end_layer ();
     }
 
-  if (gui->set_layer ("bottomsilk", SL (SILK, BOTTOM), 0))
+  if (hid->set_layer ("bottomsilk", SL (SILK, BOTTOM), 0))
     {
       DrawSilk (BOTTOM_SIDE, drawn_area);
-      gui->end_layer ();
+      hid->end_layer ();
     }
 
-  if (gui->gui)
+  if (hid->gui)
     {
       /* Draw element Marks */
       if (PCB->PinOn)
 	r_search (PCB->Data->element_tree, drawn_area, NULL, EMark_callback,
 		  NULL);
       /* Draw rat lines on top */
-      if (gui->set_layer ("rats", SL (RATS, 0), 0))
+      if (hid->set_layer ("rats", SL (RATS, 0), 0))
         {
           DrawRats(drawn_area);
-          gui->end_layer ();
+          hid->end_layer ();
         }
     }
 
   paste_empty = IsPasteEmpty (TOP_SIDE);
-  if (gui->set_layer ("toppaste", SL (PASTE, TOP), paste_empty))
+  if (hid->set_layer ("toppaste", SL (PASTE, TOP), paste_empty))
     {
       DrawPaste (TOP_SIDE, drawn_area);
-      gui->end_layer ();
+      hid->end_layer ();
     }
 
   paste_empty = IsPasteEmpty (BOTTOM_SIDE);
-  if (gui->set_layer ("bottompaste", SL (PASTE, BOTTOM), paste_empty))
+  if (hid->set_layer ("bottompaste", SL (PASTE, BOTTOM), paste_empty))
     {
       DrawPaste (BOTTOM_SIDE, drawn_area);
-      gui->end_layer ();
+      hid->end_layer ();
     }
 
-  if (gui->set_layer ("topassembly", SL (ASSY, TOP), 0))
+  if (hid->set_layer ("topassembly", SL (ASSY, TOP), 0))
     {
       PrintAssembly (TOP_SIDE, drawn_area);
-      gui->end_layer ();
+      hid->end_layer ();
     }
 
-  if (gui->set_layer ("bottomassembly", SL (ASSY, BOTTOM), 0))
+  if (hid->set_layer ("bottomassembly", SL (ASSY, BOTTOM), 0))
     {
       PrintAssembly (BOTTOM_SIDE, drawn_area);
-      gui->end_layer ();
+      hid->end_layer ();
     }
 
-  if (gui->set_layer ("fab", SL (FAB, 0), 0))
+  if (hid->set_layer ("fab", SL (FAB, 0), 0))
     {
       PrintFab (Output.fgGC);
-      gui->end_layer ();
+      hid->end_layer ();
     }
 }
 
@@ -740,7 +742,7 @@ DrawPPV (int group, const BoxType *drawn_area)
   int bottom_group = GetLayerGroupNumberBySide (BOTTOM_SIDE);
   int side;
 
-  if (PCB->PinOn || !gui->gui)
+  if (PCB->PinOn || !hid->gui)
     {
       /* draw element pins */
       r_search (PCB->Data->pin_tree, drawn_area, NULL, pin_callback, NULL);
@@ -760,7 +762,7 @@ DrawPPV (int group, const BoxType *drawn_area)
     }
 
   /* draw vias */
-  if (PCB->ViaOn || !gui->gui)
+  if (PCB->ViaOn || !hid->gui)
     {
       r_search (PCB->Data->via_tree, drawn_area, NULL, via_callback, NULL);
       r_search (PCB->Data->via_tree, drawn_area, NULL, hole_callback, NULL);
@@ -822,9 +824,9 @@ DrawSilk (int side, const BoxType * drawn_area)
 #endif
 
 #if 0
-  if (gui->poly_before)
+  if (hid->poly_before)
     {
-      hid_draw_use_mask (gui->graphics, HID_MASK_BEFORE);
+      hid_draw_use_mask (hid_draw, HID_MASK_BEFORE);
 #endif
       DrawLayer (LAYER_PTR (max_copper_layer + side), drawn_area);
       /* draw package */
@@ -833,20 +835,20 @@ DrawSilk (int side, const BoxType * drawn_area)
 #if 0
     }
 
-  hid_draw_use_mask (gui->graphics, HID_MASK_CLEAR);
+  hid_draw_use_mask (hid_draw, HID_MASK_CLEAR);
   r_search (PCB->Data->pin_tree, drawn_area, NULL, clearPin_callback, NULL);
   r_search (PCB->Data->via_tree, drawn_area, NULL, clearPin_callback, NULL);
   r_search (PCB->Data->pad_tree, drawn_area, NULL, clearPad_callback, &side);
 
-  if (gui->poly_after)
+  if (hid->poly_after)
     {
-      hid_draw_use_mask (gui->graphics, HID_MASK_AFTER);
+      hid_draw_use_mask (hid_draw, HID_MASK_AFTER);
       DrawLayer (LAYER_PTR (max_copper_layer + layer), drawn_area);
       /* draw package */
       r_search (PCB->Data->element_tree, drawn_area, NULL, element_callback, &side);
       r_search (PCB->Data->name_tree[NAME_INDEX (PCB)], drawn_area, NULL, name_callback, &side);
     }
-  hid_draw_use_mask (gui->graphics, HID_MASK_OFF);
+  hid_draw_use_mask (hid_draw, HID_MASK_OFF);
 #endif
 }
 
@@ -855,11 +857,11 @@ static void
 DrawMaskBoardArea (int mask_type, const BoxType *drawn_area)
 {
   /* Skip the mask drawing if the GUI doesn't want this type */
-  if ((mask_type == HID_MASK_BEFORE && !gui->poly_before) ||
-      (mask_type == HID_MASK_AFTER  && !gui->poly_after))
+  if ((mask_type == HID_MASK_BEFORE && !hid->poly_before) ||
+      (mask_type == HID_MASK_AFTER  && !hid->poly_after))
     return;
 
-  hid_draw_use_mask (gui->graphics, mask_type);
+  hid_draw_use_mask (hid_draw, mask_type);
   hid_draw_set_color (Output.fgGC, PCB->MaskColor);
   if (drawn_area == NULL)
     hid_draw_fill_rect (Output.fgGC, 0, 0, PCB->MaxWidth, PCB->MaxHeight);
@@ -881,7 +883,7 @@ DrawMask (int side, const BoxType *screen)
   else
     {
       DrawMaskBoardArea (HID_MASK_BEFORE, screen);
-      hid_draw_use_mask (gui->graphics, HID_MASK_CLEAR);
+      hid_draw_use_mask (hid_draw, HID_MASK_CLEAR);
     }
 
   r_search (PCB->Data->pin_tree, screen, NULL, clearPin_callback, NULL);
@@ -893,7 +895,7 @@ DrawMask (int side, const BoxType *screen)
   else
     {
       DrawMaskBoardArea (HID_MASK_AFTER, screen);
-      hid_draw_use_mask (gui->graphics, HID_MASK_OFF);
+      hid_draw_use_mask (hid_draw, HID_MASK_OFF);
     }
 }
 
@@ -925,13 +927,13 @@ DrawRats (const BoxType *drawn_area)
    * XXX gtk only allows negative drawing.
    * XXX using the mask here is to get rat transparency
    */
-  int can_mask = strcmp(gui->name, "lesstif") == 0;
+  int can_mask = strcmp(hid->name, "lesstif") == 0;
 
   if (can_mask)
-    hid_draw_use_mask (gui->graphics, HID_MASK_CLEAR);
+    hid_draw_use_mask (hid_draw, HID_MASK_CLEAR);
   r_search (PCB->Data->rat_tree, drawn_area, NULL, rat_callback, NULL);
   if (can_mask)
-    hid_draw_use_mask (gui->graphics, HID_MASK_OFF);
+    hid_draw_use_mask (hid_draw, HID_MASK_OFF);
 }
 
 static int
@@ -974,7 +976,7 @@ DrawLayer (LayerType *Layer, const BoxType *screen)
   /* draw the layer text on screen */
   r_search (Layer->text_tree, screen, NULL, text_callback, Layer);
 
-  /* We should check for gui->gui here, but it's kinda cool seeing the
+  /* We should check for hid->gui here, but it's kinda cool seeing the
      auto-outline magically disappear when you first add something to
      the "outline" layer.  */
   if (IsLayerEmpty (Layer)
@@ -1013,7 +1015,7 @@ DrawLayerGroup (int group, const BoxType *drawn_area)
   if (n_entries > 1)
     rv = 1;
 
-  if (rv && !gui->gui)
+  if (rv && !hid->gui)
     DrawPPV (group, drawn_area);
 }
 
@@ -1533,11 +1535,10 @@ draw_element (ElementType *element)
  */
 
 void
-hid_expose_callback (HID *hid, HID_DRAW *hid_draw, BoxType * region, void *item)
+hid_expose_callback (HID *expose_hid, HID_DRAW *expose_hid_draw, BoxType * region, void *item)
 {
-  HID *old_gui = gui;
-
-  gui = hid;
+  hid = expose_hid;
+  hid_draw = expose_hid_draw;
   Output.fgGC = hid_draw_make_gc (hid_draw);
   Output.bgGC = hid_draw_make_gc (hid_draw);
   Output.pmGC = hid_draw_make_gc (hid_draw);
@@ -1557,5 +1558,6 @@ hid_expose_callback (HID *hid, HID_DRAW *hid_draw, BoxType * region, void *item)
   hid_draw_destroy_gc (Output.fgGC);
   hid_draw_destroy_gc (Output.bgGC);
   hid_draw_destroy_gc (Output.pmGC);
-  gui = old_gui;
+  hid = NULL;
+  hid_draw = NULL;
 }
diff --git a/src/hid/common/extents.c b/src/hid/common/extents.c
index a0c9e9e..528b784 100644
--- a/src/hid/common/extents.c
+++ b/src/hid/common/extents.c
@@ -222,7 +222,7 @@ hid_get_extents (void *item)
   region.Y1 = -COORD_MAX - 1;
   region.X2 = COORD_MAX;
   region.Y2 = COORD_MAX;
-  hid_expose_callback (&extents_hid, &extents_graphcis, &region, item);
+  hid_expose_callback (&extents_hid, &extents_graphics, &region, item);
 
   return &box;
 }
