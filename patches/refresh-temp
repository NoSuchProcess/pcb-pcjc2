Bottom: a978e5871d9236dd445d5cb9372c4e8f18f8ff72
Top:    6e8ecc04d243cce9376c70dc2c42dceca40fee22
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-08-30 00:22:49 +0100

Refresh of draw-c-expose-some-drawing-api

---

diff --git a/src/draw.c b/src/draw.c
index f8db2ba..93b4f7e 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -83,14 +83,10 @@ static bool doing_assy = false;
  */
 static void DrawEverything (const BoxType *);
 static void DrawPPV (int group, const BoxType *);
-static void DrawLayerGroup (int, const BoxType *);
 static void AddPart (void *);
 static void SetPVColor (PinTypePtr, int);
 static void DrawEMark (ElementTypePtr, Coord, Coord, bool);
-static void DrawMask (int side, const BoxType *);
-static void DrawPaste (int side, const BoxType *);
 static void DrawRats (const BoxType *);
-static void DrawSilk (int side, const BoxType *);
 
 /*--------------------------------------------------------------------------------------
  * setup color for pin or via
@@ -442,7 +438,7 @@ hole_callback (const BoxType * b, void *cl)
   return 1;
 }
 
-static void
+void
 DrawHoles (bool draw_plated, bool draw_unplated, const BoxType *drawn_area)
 {
   int plated = -1;
@@ -930,7 +926,7 @@ clearPad_callback (const BoxType * b, void *cl)
  * Draws silk layer.
  */
 
-static void
+void
 DrawSilk (int side, const BoxType * drawn_area)
 {
 #if 0
@@ -989,7 +985,7 @@ DrawMaskBoardArea (int mask_type, const BoxType *drawn_area)
 /* ---------------------------------------------------------------------------
  * draws solder mask layer - this will cover nearly everything
  */
-static void
+void
 DrawMask (int side, const BoxType *screen)
 {
   int thin = TEST_FLAG(THINDRAWFLAG, PCB) || TEST_FLAG(THINDRAWPOLYFLAG, PCB);
@@ -1018,7 +1014,7 @@ DrawMask (int side, const BoxType *screen)
 /* ---------------------------------------------------------------------------
  * draws solder paste layer for a given side of the board
  */
-static void
+void
 DrawPaste (int side, const BoxType *drawn_area)
 {
   gui->set_color (Output.fgGC, PCB->ElementColor);
@@ -1111,7 +1107,7 @@ DrawLayer (LayerTypePtr Layer, const BoxType * screen)
  * draws one layer group.  If the exporter is not a GUI,
  * also draws the pins / pads / vias in this layer group.
  */
-static void
+void
 DrawLayerGroup (int group, const BoxType *drawn_area)
 {
   int i, rv = 1;
diff --git a/src/draw.h b/src/draw.h
index ef32ebb..c0a2bb1 100644
--- a/src/draw.h
+++ b/src/draw.h
@@ -71,4 +71,10 @@ void EraseElementPinsAndPads (ElementTypePtr);
 void EraseElementName (ElementTypePtr);
 void EraseObject (int, void *, void *);
 
+void DrawLayerGroup (int side, const BoxType *drawn_area);
+void DrawPaste (int side, const BoxType *drawn_area);
+void DrawSilk (int side, const BoxType *drawn_area);
+void DrawMask (int side, const BoxType *drawn_area);
+void DrawHoles (bool draw_plated, bool draw_unplated, const BoxType *drawn_area);
+
 #endif
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 4d9fdbe..1c5c150 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -1928,7 +1928,8 @@ N_("Bring up the popup menu specified by @code{MenuName}.\n"
 
 This just pops up the specified menu.  The menu must have been defined
 as a named subresource of the Popups resource in the menu resource
-file.
+file. The second, optional (and ignored) argument represents the mouse
+button number which is triggering the popup.
 
 %end-doc */
