Bottom: 1a41a6e698ef0ae2f57211bc90d00d434e158f72
Top:    ab7811bdae5f04cdaabcdbc952a4914178b9de7b
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-07-25 13:52:22 +0100

Refresh of hid-gtk-refactor-viewport-hand

---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index e10f4cf..3eb3fca 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1241,10 +1241,10 @@ ghid_render_pixmap (int cx, int cy, double zoom, int width, int height, int dept
                                     -priv->view.x0,
                 priv->view.flip_y ?  priv->view.y0 - PCB->MaxHeight :
                                -priv->view.y0, 0);
-  region.X1 = MIN(Px(0), Px(gport->width + 1));
-  region.Y1 = MIN(Py(0), Py(gport->height + 1));
-  region.X2 = MAX(Px(0), Px(gport->width + 1));
-  region.Y2 = MAX(Py(0), Py(gport->height + 1));
+  region.X1 = MIN(Px(0), Px(width + 1));
+  region.Y1 = MIN(Py(0), Py(height + 1));
+  region.X2 = MAX(Px(0), Px(width + 1));
+  region.Y2 = MAX(Py(0), Py(height + 1));
   hid_expose_callback (&ghid_hid, &region, NULL);
   hidgl_flush_triangles (&buffer);
   glPopMatrix ();
@@ -1359,6 +1359,7 @@ finish_pan (render_priv *priv)
   priv->view.x0 = MAX (0, priv->view.x0);
   priv->view.y0 = MAX (0, priv->view.y0);
 
+#if 0
   /* if we can see the entire board and some, then zoom to fit */
   if (priv->view.width  > PCB->MaxWidth  &&
       priv->view.height > PCB->MaxHeight)
@@ -1366,6 +1367,7 @@ finish_pan (render_priv *priv)
       ghid_zoom_view_fit ();
       return;
     }
+#endif
 
   ghidgui->adjustment_changed_holdoff = TRUE;
   gtk_range_set_value (GTK_RANGE (ghidgui->h_range), priv->view.x0);
@@ -1429,8 +1431,10 @@ ghid_zoom_view_abs (Coord center_x, Coord center_y, double new_zoom)
 
   priv->view.coords_per_px = new_zoom;
   pixel_slop = new_zoom;
-  ghid_port_ranges_scale ();
+  // ghid_port_ranges_scale (); /* XXX: We still need to update the scroll-bars */
 
+  priv->view.width  = MIN (gport->drawing_area->allocation.width  * priv->view.coords_per_px, PCB->MaxWidth);
+  priv->view.height = MIN (gport->drawing_area->allocation.height * priv->view.coords_per_px, PCB->MaxHeight);
   priv->view.x0 = MAX (0, SIDE_X (center_x) - xtmp * priv->view.width);
   priv->view.y0 = MAX (0, SIDE_Y (center_y) - ytmp * priv->view.height);
 
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 21dcd8d..dfa15e7 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -1736,12 +1736,8 @@ ScrollAction (int argc, char **argv, int x, int y)
   else
     AFAIL (scroll);
 
-//  notify_crosshair_change (false);
-//  ghid_port_ranges_pan (dx, dy, TRUE);
   ghid_pan_view_rel_to_visible (dx, dy);
-  MoveCrosshairRelative (dx, dy);
-//  AdjustAttachedObjects ();
-//  notify_crosshair_change (true);
+  MoveCrosshairRelative (dx, dy);  /* XXX: ??? */
 
   return 0;
 }
diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index 423c37d..5e552a3 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -68,49 +68,6 @@ ghid_port_ranges_changed (void)
   ghid_invalidate_all ();
 }
 
-gboolean
-ghid_port_ranges_pan (gdouble x, gdouble y, gboolean relative)
-{
-  GtkAdjustment *h_adj, *v_adj;
-  gdouble x0, y0, x1, y1;
-
-  h_adj = gtk_range_get_adjustment (GTK_RANGE (ghidgui->h_range));
-  v_adj = gtk_range_get_adjustment (GTK_RANGE (ghidgui->v_range));
-  x0 = h_adj->value;
-  y0 = v_adj->value;
-
-  if (relative)
-    {
-      x1 = x0 + x;
-      y1 = y0 + y;
-    }
-  else
-    {
-      x1 = x;
-      y1 = y;
-    }
-
-  if (x1 < h_adj->lower)
-    x1 = h_adj->lower;
-  if (x1 > h_adj->upper - h_adj->page_size)
-    x1 = h_adj->upper - h_adj->page_size;
-
-  if (y1 < v_adj->lower)
-    y1 = v_adj->lower;
-  if (y1 > v_adj->upper - v_adj->page_size)
-    y1 = v_adj->upper - v_adj->page_size;
-
-  ghidgui->adjustment_changed_holdoff = TRUE;
-  gtk_range_set_value (GTK_RANGE (ghidgui->h_range), x1);
-  gtk_range_set_value (GTK_RANGE (ghidgui->v_range), y1);
-  ghidgui->adjustment_changed_holdoff = FALSE;
-
-  if ((x0 != x1) || (y0 != y1))
-    ghid_port_ranges_changed();
-
-  ghid_note_event_location (NULL);
-  return ((x0 != x1) || (y0 != y1));
-}
 
   /* Do scrollbar scaling based on current port drawing area size and
      |  overall PCB board size.
diff --git a/src/hid/gtk/gui.h b/src/hid/gtk/gui.h
index b17dad6..edd1f7f 100644
--- a/src/hid/gtk/gui.h
+++ b/src/hid/gtk/gui.h
@@ -147,7 +147,6 @@ typedef struct
    *drawing_area;		/* and its drawing area */
   GdkPixmap *pixmap, *mask;
   GdkDrawable *drawable;	/* Current drawable for drawing routines */
-  gint width, height;
 
   struct render_priv *render_priv;
