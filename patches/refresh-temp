Bottom: 198fb06d8a0839ad905cbcb129d2836574544a38
Top:    ad95850460ab7c01d19a729a8956af7d792269b1
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-06-05 01:08:26 +0100

Refresh of support-holes-in-input-polygon

---

diff --git a/src/insert.c b/src/insert.c
index a5ced0d..a16add5 100644
--- a/src/insert.c
+++ b/src/insert.c
@@ -188,10 +188,9 @@ InsertPointIntoPolygon (LayerTypePtr Layer, PolygonTypePtr Polygon)
   for (n = Polygon->PointN - 1; n > InsertAt; n--)
     Polygon->Points[n] = Polygon->Points[n - 1];
 
-#warning "FIXME: How do we know which contour / hole the inserted item belongs to if it is on a boundary?"
   /* Shift up indices of any holes */
-  for (n = Polygon->HoleIndexN - 1; n > 0; n--)
-    if (Polygon->HoleIndex[n] >= InsertAt)
+  for (n = 0; n < Polygon->HoleIndexN; n++)
+    if (Polygon->HoleIndex[n] > InsertAt)
       Polygon->HoleIndex[n]++;
 
   Polygon->Points[InsertAt] = save;
diff --git a/src/polygon.c b/src/polygon.c
index 17b5def..1604f55 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -1258,8 +1258,7 @@ GetLowestDistancePolygonPoint (PolygonTypePtr Polygon, LocationType X,
                                LocationType Y)
 {
   double mindistance = (double) MAX_COORD * MAX_COORD;
-  PointTypePtr ptr1 = &Polygon->Points[Polygon->PointN - 1],
-    ptr2 = &Polygon->Points[0];
+  PointTypePtr ptr1, ptr2;
   Cardinal n, result = 0;
 
   /* we calculate the distance to each segment and choose the
@@ -1269,9 +1268,12 @@ GetLowestDistancePolygonPoint (PolygonTypePtr Polygon, LocationType X,
    * to the segment end point.
    */
 
-  for (n = 0; n < Polygon->PointN; n++, ptr2++)
+  for (n = 0; n < Polygon->PointN; n++)
     {
       register double u, dx, dy;
+      ptr1 = &Polygon->Points[prev_contour_point (Polygon, n)];
+      ptr2 = &Polygon->Points[n];
+
       dx = ptr2->X - ptr1->X;
       dy = ptr2->Y - ptr1->Y;
       if (dx != 0.0 || dy != 0.0)
@@ -1298,7 +1300,6 @@ GetLowestDistancePolygonPoint (PolygonTypePtr Polygon, LocationType X,
               result = n;
             }
         }
-      ptr1 = ptr2;
     }
   return (result);
 }
