Bottom: c1bab5bdb1302af9b5ab03b813db13b0c904d8c5
Top:    f16ee88217573d92e713086a063a46945e2b6e4b
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2014-12-27 20:39:27 +0000

Refresh of demo-of-exporter-specific-expo

---

diff --git a/src/hid/common/draw_helpers.c b/src/hid/common/draw_helpers.c
index b2e3ff0..a71dfdb 100644
--- a/src/hid/common/draw_helpers.c
+++ b/src/hid/common/draw_helpers.c
@@ -701,8 +701,8 @@ DrawLayerCommon (LayerType *Layer, const BoxType * screen, bool clear_pins)
  * drawn with this group.
  */
 #if 0
-static int
-DrawLayerGroup (int group, const BoxType * screen)
+static void
+DrawLayerGroup (int group, const BoxType * drawn_area)
 {
   int i, rv = 1;
   int layernum;
@@ -718,11 +718,13 @@ DrawLayerGroup (int group, const BoxType * screen)
           strcmp (Layer->Name, "route") == 0)
         rv = 0;
       if (layernum < max_copper_layer)
-        DrawLayerCommon (Layer, screen, true);
+        DrawLayerCommon (Layer, drawn_area, true);
     }
   if (n_entries > 1)
     rv = 1;
-  return rv;
+
+  if (rv && !gui->gui)
+    DrawPPV (group, drawn_area);
 }
 #endif
 
@@ -791,8 +793,8 @@ common_export_region (HID *hid, BoxType *region)
   int plated;
   int nplated;
   int nunplated;
-  int component_group;
-  int solder_group;
+  int top_group;
+  int bottom_group;
   int group;
   int save_swap = SWAP_IDENT;
   bool paste_empty;
@@ -800,8 +802,8 @@ common_export_region (HID *hid, BoxType *region)
   PCB->Data->SILKLAYER.Color = PCB->ElementColor;
   PCB->Data->BACKSILKLAYER.Color = PCB->InvisibleObjectsColor;
 
-  component_group = GetLayerGroupNumberByNumber (component_silk_layer);
-  solder_group    = GetLayerGroupNumberByNumber (solder_silk_layer);
+  top_group    = GetLayerGroupNumberBySide (TOP_SIDE);
+  bottom_group = GetLayerGroupNumberBySide (BOTTOM_SIDE);
 
   /* draw all copper layer groups in group order */
   for (group = 0; group < max_copper_layer; group++)
@@ -813,9 +815,9 @@ common_export_region (HID *hid, BoxType *region)
               r_search (PCB->Data->via_tree, region, NULL, pin_callback, NULL);
               r_search (PCB->Data->pin_tree, region, NULL, pin_callback, NULL);
 
-              if (group == component_group || group == solder_group)
+              if (group == top_group || group == bottom_group)
                 {
-                  SWAP_IDENT = (group == solder_group);
+                  SWAP_IDENT = (group == bottom_group);
                   r_search (PCB->Data->pad_tree, region, NULL, pad_callback, NULL);
                   SWAP_IDENT = save_swap;
                 }
@@ -840,30 +842,30 @@ common_export_region (HID *hid, BoxType *region)
     }
 
   if (gui->set_layer ("componentmask", SL (MASK, TOP), 0))
-    DrawMask (COMPONENT_LAYER, region);
+    DrawMask (TOP_SIDE, region);
 
   if (gui->set_layer ("soldermask", SL (MASK, BOTTOM), 0))
-    DrawMask (SOLDER_LAYER, region);
+    DrawMask (BOTTOM_SIDE, region);
 
   if (gui->set_layer ("topsilk", SL (SILK, TOP), 0))
-    DrawSilk (COMPONENT_LAYER, region);
+    DrawSilk (TOP_SIDE, region);
 
   if (gui->set_layer ("bottomsilk", SL (SILK, BOTTOM), 0))
-    DrawSilk (SOLDER_LAYER, region);
+    DrawSilk (BOTTOM_SIDE, region);
 
-  paste_empty = IsPasteEmpty (COMPONENT_LAYER);
+  paste_empty = IsPasteEmpty (TOP_SIDE);
   if (gui->set_layer ("toppaste", SL (PASTE, TOP), paste_empty))
-    DrawPaste (COMPONENT_LAYER, region);
+    DrawPaste (TOP_SIDE, region);
 
-  paste_empty = IsPasteEmpty (SOLDER_LAYER);
+  paste_empty = IsPasteEmpty (BOTTOM_SIDE);
   if (gui->set_layer ("bottompaste", SL (PASTE, BOTTOM), paste_empty))
-    DrawPaste (SOLDER_LAYER, region);
+    DrawPaste (BOTTOM_SIDE, region);
 
   //if (gui->set_layer ("topassembly", SL (ASSY, TOP), 0))
-    //PrintAssembly (region, component_group, 0);
+    //PrintAssembly (region, top_group, 0);
 
   //if (gui->set_layer ("bottomassembly", SL (ASSY, BOTTOM), 0))
-    //PrintAssembly (region, solder_group, 1);
+    //PrintAssembly (region, bottom_group, 1);
 
   if (gui->set_layer ("fab", SL (FAB, 0), 0))
     PrintFab (Output.fgGC);
diff --git a/src/hid/gerber/gerber.c b/src/hid/gerber/gerber.c
index 068c8bf..55a9e19 100644
--- a/src/hid/gerber/gerber.c
+++ b/src/hid/gerber/gerber.c
@@ -614,13 +614,6 @@ hole_callback (const BoxType * b, void *cl)
 }
 
 static void
-DrawHoles (bool plated, BoxType *drawn_area)
-{
-  r_search (PCB->Data->pin_tree, drawn_area, NULL, hole_callback, &plated);
-  r_search (PCB->Data->via_tree, drawn_area, NULL, hole_callback, &plated);
-}
-
-static void
 gerber_expose (HID * hid, BoxType *drawn_area, void *item)
 {
   int i;
@@ -647,8 +640,8 @@ gerber_expose (HID * hid, BoxType *drawn_area, void *item)
       print_group[GetLayerGroupNumberByNumber (i)] = all_layers || !IsLayerEmpty (layer);
     }
 
-  print_group[GetLayerGroupNumberByNumber (solder_silk_layer)] = 1;
-  print_group[GetLayerGroupNumberByNumber (component_silk_layer)] = 1;
+  print_group[GetLayerGroupNumberBySide (BOTTOM_SIDE)] = 1;
+  print_group[GetLayerGroupNumberBySide (TOP_SIDE)] = 1;
 
   /* draw all copper layer groups in group order */
   for (group = 0; group < max_copper_layer; group++)
@@ -657,17 +650,16 @@ gerber_expose (HID * hid, BoxType *drawn_area, void *item)
         continue;
 
       if (set_layer (0, group, 0))
-        if (DrawLayerGroup (group, drawn_area))
-          DrawPPV (group, drawn_area);
+        DrawLayerGroup (group, drawn_area);
     }
 
   count_holes (drawn_area, &nplated, &nunplated);
 
   if (nplated && set_layer ("plated-drill", SL (PDRILL, 0), 0))
-    DrawHoles (true, drawn_area);
+    DrawHoles (true, false, drawn_area);
 
   if (nunplated && set_layer ("unplated-drill", SL (UDRILL, 0), 0))
-    DrawHoles (false, drawn_area);
+    DrawHoles (false, true, drawn_area);
 
   if (set_layer ("componentmask", SL (MASK, TOP), 0))
     DrawMask (TOP_SIDE, drawn_area);
@@ -768,8 +760,8 @@ gerber_do_export (HID_Attr_Val * options)
           LayerType *layer = PCB->Data->Layer + i;
           print_group[GetLayerGroupNumberByNumber (i)] = !IsLayerEmpty (layer);
         }
-      print_group[GetLayerGroupNumberByNumber (solder_silk_layer)] = 1;
-      print_group[GetLayerGroupNumberByNumber (component_silk_layer)] = 1;
+      print_group[GetLayerGroupNumberBySide (BOTTOM_SIDE)] = 1;
+      print_group[GetLayerGroupNumberBySide (TOP_SIDE)] = 1;
 
       memset (print_layer, 0, sizeof (print_layer));
       for (i = 0; i < max_copper_layer; i++)
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index bc3baa7..1cbe631 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -862,12 +862,11 @@ static void
 ghid_expose (const BoxType *drawn_area)
 {
   int i, ngroups, side;
-  int component, solder;
+  int top_group, bottom_group;
   /* This is the list of layer groups we will draw.  */
   int do_group[MAX_LAYER];
   /* This is the reverse of the order in which we draw them.  */
   int drawn_groups[MAX_LAYER];
-  int plated, unplated;
   bool paste_empty;
   HID *old_gui = gui;
 
@@ -894,8 +893,8 @@ ghid_expose (const BoxType *drawn_area)
 	}
     }
 
-  component = GetLayerGroupNumberByNumber (component_silk_layer);
-  solder = GetLayerGroupNumberByNumber (solder_silk_layer);
+  top_group = GetLayerGroupNumberBySide (TOP_SIDE);
+  bottom_group = GetLayerGroupNumberBySide (BOTTOM_SIDE);
 
   /*
    * first draw all 'invisible' stuff
@@ -903,7 +902,7 @@ ghid_expose (const BoxType *drawn_area)
   if (!TEST_FLAG (CHECKPLANESFLAG, PCB)
       && set_layer ("invisible", SL (INVISIBLE, 0), 0))
     {
-      side = SWAP_IDENT ? COMPONENT_LAYER : SOLDER_LAYER;
+      side = SWAP_IDENT ? TOP_SIDE : BOTTOM_SIDE;
       if (PCB->ElementOn)
 	{
 	  r_search (PCB->Data->element_tree, drawn_area, NULL, element_callback, &side);
@@ -930,30 +929,30 @@ ghid_expose (const BoxType *drawn_area)
     return;
 
   /* Draw pins, pads, vias below silk */
-  DrawPPV (SWAP_IDENT ? solder : component, drawn_area);
+  DrawPPV (SWAP_IDENT ? bottom_group : top_group, drawn_area);
 
   /* Draw the solder mask if turned on */
   if (set_layer ("componentmask", SL (MASK, TOP), 0))
     {
-      DrawMask (COMPONENT_LAYER, drawn_area);
+      DrawMask (TOP_SIDE, drawn_area);
       gui->end_layer ();
     }
 
   if (set_layer ("soldermask", SL (MASK, BOTTOM), 0))
     {
-      DrawMask (SOLDER_LAYER, drawn_area);
+      DrawMask (BOTTOM_SIDE, drawn_area);
       gui->end_layer ();
     }
 
   if (set_layer ("topsilk", SL (SILK, TOP), 0))
     {
-      DrawSilk (COMPONENT_LAYER, drawn_area);
+      DrawSilk (TOP_SIDE, drawn_area);
       gui->end_layer ();
     }
 
   if (set_layer ("bottomsilk", SL (SILK, BOTTOM), 0))
     {
-      DrawSilk (SOLDER_LAYER, drawn_area);
+      DrawSilk (BOTTOM_SIDE, drawn_area);
       gui->end_layer ();
     }
 
@@ -969,17 +968,17 @@ ghid_expose (const BoxType *drawn_area)
       gui->end_layer ();
     }
 
-  paste_empty = IsPasteEmpty (COMPONENT_LAYER);
+  paste_empty = IsPasteEmpty (TOP_SIDE);
   if (set_layer ("toppaste", SL (PASTE, TOP), paste_empty))
     {
-      DrawPaste (COMPONENT_LAYER, drawn_area);
+      DrawPaste (TOP_SIDE, drawn_area);
       gui->end_layer ();
     }
 
-  paste_empty = IsPasteEmpty (SOLDER_LAYER);
+  paste_empty = IsPasteEmpty (BOTTOM_SIDE);
   if (set_layer ("bottompaste", SL (PASTE, BOTTOM), paste_empty))
     {
-      DrawPaste (SOLDER_LAYER, drawn_area);
+      DrawPaste (BOTTOM_SIDE, drawn_area);
       gui->end_layer ();
     }
 
diff --git a/src/hid/ps/ps.c b/src/hid/ps/ps.c
index 29fba1e..6100304 100644
--- a/src/hid/ps/ps.c
+++ b/src/hid/ps/ps.c
@@ -594,8 +594,7 @@ ps_expose (void)
         continue;
 
       if (set_layer (0, group, 0))
-        if (DrawLayerGroup (group, NULL))
-          DrawPPV (group, NULL);
+        DrawLayerGroup (group, NULL);
     }
 
   CountHoles (&nplated, &nunplated, NULL);
@@ -607,34 +606,30 @@ ps_expose (void)
     DrawHoles (false, true, NULL);
 
   if (set_layer ("componentmask", SL (MASK, TOP), 0))
-    DrawMask (COMPONENT_LAYER, NULL);
+    DrawMask (TOP_SIDE, NULL);
 
   if (set_layer ("soldermask", SL (MASK, BOTTOM), 0))
-    DrawMask (SOLDER_LAYER, NULL);
+    DrawMask (BOTTOM_SIDE, NULL);
 
   if (set_layer ("topsilk", SL (SILK, TOP), 0))
-    DrawSilk (COMPONENT_LAYER, NULL);
+    DrawSilk (TOP_SIDE, NULL);
 
   if (set_layer ("bottomsilk", SL (SILK, BOTTOM), 0))
-    DrawSilk (SOLDER_LAYER, NULL);
+    DrawSilk (BOTTOM_SIDE, NULL);
 
-  paste_empty = IsPasteEmpty (COMPONENT_LAYER);
+  paste_empty = IsPasteEmpty (TOP_SIDE);
   if (set_layer ("toppaste", SL (PASTE, TOP), paste_empty))
-    DrawPaste (COMPONENT_LAYER, NULL);
+    DrawPaste (TOP_SIDE, NULL);
 
-  paste_empty = IsPasteEmpty (SOLDER_LAYER);
+  paste_empty = IsPasteEmpty (BOTTOM_SIDE);
   if (set_layer ("bottompaste", SL (PASTE, BOTTOM), paste_empty))
-    DrawPaste (SOLDER_LAYER, NULL);
-
-  doing_assy = true;
+    DrawPaste (BOTTOM_SIDE, NULL);
 
   if (set_layer ("topassembly", SL (ASSY, TOP), 0))
-    PrintAssembly (COMPONENT_LAYER, NULL);
+    PrintAssembly (TOP_SIDE, NULL);
 
   if (set_layer ("bottomassembly", SL (ASSY, BOTTOM), 0))
-    PrintAssembly (SOLDER_LAYER, NULL);
-
-  doing_assy = false;
+    PrintAssembly (BOTTOM_SIDE, NULL);
 
   if (set_layer ("fab", SL (FAB, 0), 0))
     PrintFab (Output.fgGC);
