Bottom: eb70690302c2f67cda57c28d735c9908b3b8eac3
Top:    07c111717c34ed00818872098a4062a2c9d574d2
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-07-24 15:51:15 +0100

Refresh of use-trackball-to-allow-rotatio

---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index a31e1a6..cc186c7 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -936,12 +936,9 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
   glOrtho (0, widget->allocation.width, widget->allocation.height, 0, -100000, 100000);
   glMatrixMode (GL_MODELVIEW);
   glLoadIdentity ();
-
   glTranslatef (widget->allocation.width / 2., widget->allocation.height / 2., 0);
   glMultMatrixf ((GLfloat *)view_matrix);
   glTranslatef (-widget->allocation.width / 2., -widget->allocation.height / 2., 0);
-  glGetFloatv (GL_MODELVIEW_MATRIX, (GLfloat *)last_modelview_matrix);
-
   glScalef ((ghid_flip_x ? -1. : 1.) / port->zoom,
             (ghid_flip_y ? -1. : 1.) / port->zoom,
             ((ghid_flip_x == ghid_flip_y) ? 1. : -1.) / port->zoom);
@@ -949,6 +946,7 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
                              -port->view_x0,
                 ghid_flip_y ? port->view_y0 - PCB->MaxHeight :
                              -port->view_y0, 0);
+  glGetFloatv (GL_MODELVIEW_MATRIX, (GLfloat *)last_modelview_matrix);
 
   glEnable (GL_STENCIL_TEST);
   glClearColor (port->offlimits_color.red / 65535.,
diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index 1c3dc2e..a3de225 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -213,6 +213,10 @@ ghid_note_event_location (GdkEventButton * ev)
 {
   gint event_x, event_y;
   gboolean moved;
+  /* FIXME: IFDEF HACK */
+#ifdef ENABLE_GL
+  int pcb_x, pcb_y;
+#endif
 
   if (!ev)
     {
@@ -229,11 +233,13 @@ ghid_note_event_location (GdkEventButton * ev)
 #ifdef ENABLE_GL
   /* Unproject event_x and event_y to world coordinates of the plane we are on */
   ghid_unproject_to_z_plane (event_x, event_y, 0,
-                             &event_x, &event_y);
-#endif
-
+                             &pcb_x, &pcb_y);
+  gport->view_x = SIDE_X (pcb_x);
+  gport->view_y = SIDE_Y (pcb_y);
+#else
   gport->view_x = event_x * gport->zoom + gport->view_x0;
   gport->view_y = event_y * gport->zoom + gport->view_y0;
+#endif
 
   moved = MoveCrosshairAbsolute (SIDE_X (gport->view_x), 
 				 SIDE_Y (gport->view_y));
