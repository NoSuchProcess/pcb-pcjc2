Bottom: 05f7433239d6f65a43530aec5704b0e64c3edebd
Top:    df84d673488108827efcb8e687a392ef5e85bf44
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-09-21 11:51:55 +0100

Refresh of port-david-rowe-s-rubberbandin

---

diff --git a/src/move.c b/src/move.c
index dd4f46d..b745973 100644
--- a/src/move.c
+++ b/src/move.c
@@ -800,7 +800,7 @@ MoveObjectAndRubberband (int Type, void *Ptr1, void *Ptr2, void *Ptr3,
   RubberbandTypePtr ptr;
   void *ptr2;
   int   n;
-  LocationType PreMoveObjX, PreMoveObjY;
+  Coord PreMoveObjX, PreMoveObjY;
 
   dprintf("MoveObjectAndRubberband\n");
   if (Type == LINE_TYPE) {
@@ -820,7 +820,7 @@ MoveObjectAndRubberband (int Type, void *Ptr1, void *Ptr2, void *Ptr3,
   n = Crosshair.AttachedObject.RubberbandN;
   while (n)
     {
-      LocationType dX, dY;
+      Coord dX, dY;
 
       dX = DX; dY = DY;
 
@@ -885,7 +885,7 @@ MoveObjectAndRubberband (int Type, void *Ptr1, void *Ptr2, void *Ptr3,
       n = Crosshair.AttachedObject.RubberbandN;
       ptr = Crosshair.AttachedObject.Rubberband;
       while(n) {
-	LocationType nudgeX, nudgeY;
+	Coord nudgeX, nudgeY;
 	LineTypePtr line = (LineTypePtr)Ptr3;
 	PointType PointOut;
 	PointTypePtr nudge;
@@ -966,7 +966,7 @@ MoveObjectAndRubberband (int Type, void *Ptr1, void *Ptr2, void *Ptr3,
 	PointTypePtr lineA_p2, lineB_p2; /* inital p2 points before move */
 	LineTypePtr lineA = ptr->Line;
 	LineTypePtr lineB;
-	LocationType dX, dY;
+	Coord dX, dY;
 	int ignore;
 	PinType pin;
 
diff --git a/src/rubberband.c b/src/rubberband.c
index 1b20c59..544efd8 100644
--- a/src/rubberband.c
+++ b/src/rubberband.c
@@ -77,7 +77,7 @@ static void CheckPolygonForRubberbandConnection (LayerTypePtr,
 						 PolygonTypePtr);
 static void CheckLinePointForRat (LayerTypePtr, PointTypePtr);
 static int rubber_callback (const BoxType * b, void *cl);
-static int rb_sign(LocationType x);
+static int rb_sign(Coord x);
 static int LineAttachedCallback (const BoxType * b, void *cl);
 
 struct rubber_info
@@ -92,7 +92,7 @@ struct rubber_info
 struct AttachedInfo
 {
   int radius;
-  LocationType X, Y;
+  Coord X, Y;
   LineTypePtr  line;
   BoxType      box;
   LayerTypePtr layer;
@@ -602,7 +602,7 @@ LookupRatLines (int Type, void *Ptr1, void *Ptr2, void *Ptr3)
 /* centre zero rubber band sign function */
 
 int
-rbsgn(LocationType x)
+rbsgn(Coord x)
 {
   if (x > 0) return  1;
   if (x < 0) return -1;
@@ -640,8 +640,8 @@ void
 MovePointGivenRubberBandMode(PointTypePtr PointOut,
 			    PointTypePtr Point,
 			    LineTypePtr Line,
-			    LocationType dx,
-			    LocationType dy,
+			    Coord dx,
+			    Coord dy,
 			    int Type,
 			    int Diagonal)
 {
@@ -723,8 +723,8 @@ MovePointGivenRubberBandMode(PointTypePtr PointOut,
 void
 MoveLineGivenRubberBandMode(LineTypePtr LineOut,
 			    LineTypePtr Line,
-			    LocationType dx,
-			    LocationType dy,
+			    Coord dx,
+			    Coord dy,
 			    CrosshairType CrossHair
 )
 {
@@ -821,8 +821,8 @@ MoveLineGivenRubberBandMode(LineTypePtr LineOut,
 }
 
 void RestrictMovementGivenRubberBandMode(LineTypePtr Line,
-					 LocationType *dx,
-					 LocationType *dy)
+					 Coord *dx,
+					 Coord *dy)
 {
   /* return default when rubberband mode off */
 
@@ -871,7 +871,7 @@ FindLineAttachedToPoint (LayerTypePtr Layer,
   LineTypePtr AttachedLine;
   Cardinal group;
   struct AttachedInfo info;
-  BDimension t = Line->Thickness / 2;
+  Coord t = Line->Thickness / 2;
 
   /* lookup layergroup and check all visible lines in this group */
   info.radius = Line->Thickness / 2;
@@ -922,11 +922,11 @@ FindLineAttachedToPoint (LayerTypePtr Layer,
   return NULL; /* no attached line at LinePoint */
 }
 
-int PointInsidePin(PinTypePtr Pin, LocationType x, LocationType y)
+int PointInsidePin(PinTypePtr Pin, Coord x, Coord y)
 {
   float dist;
-  LocationType x1,x2,y1,y2;
-  BDimension t = Pin->Thickness / 2;
+  Coord x1,x2,y1,y2;
+  Coord t = Pin->Thickness / 2;
 
   dprintf("  PointInsidePin\n");
   dprintf("    (%d,%d) r = %d\n", Pin->X, Pin->Y, t);
@@ -989,7 +989,7 @@ int PointIsInsidePin(PinTypePtr Pin)
 {
   struct rubber_info info;
   Cardinal n;
-  BDimension t = Pin->Thickness / 2;
+  Coord t = Pin->Thickness / 2;
 
   info.box.X1 = Pin->X - t;
   info.box.X2 = Pin->X + t;
diff --git a/src/rubberband.h b/src/rubberband.h
index 8513073..cad6baf 100644
--- a/src/rubberband.h
+++ b/src/rubberband.h
@@ -38,27 +38,27 @@ void LookupRatLines (int, void *, void *, void *);
 void MovePointGivenRubberBandMode(PointTypePtr PointOut,
 			          PointTypePtr Point,
 				  LineTypePtr Line,
-			          LocationType dx,
-			          LocationType dy,
+			          Coord dx,
+			          Coord dy,
 				  int Type,
 				  int Diagonal);
 void MoveLineGivenRubberBandMode(LineTypePtr LineOut,
 				 LineTypePtr Line,
-				 LocationType dx,
-				 LocationType dy,
+				 Coord dx,
+				 Coord dy,
 				 CrosshairType CrossHair);
 int IsHorizontal(LineTypePtr Line);
 int IsVertical(LineTypePtr Line);
 int IsDiagonal(LineTypePtr Line);
 void RestrictMovementGivenRubberBandMode(LineTypePtr Line,
-					 LocationType *dx,
-					 LocationType *dy);
+					 Coord *dx,
+					 Coord *dy);
 LineTypePtr
 FindLineAttachedToPoint (LayerTypePtr Layer,
 			 LineTypePtr  Line,
 			 PointTypePtr LinePoint);
 int
-PointInsidePin(PinTypePtr Pin, LocationType x, LocationType y);
+PointInsidePin(PinTypePtr Pin, Coord x, Coord y);
 int
 BothEndsWithinPad(PadTypePtr Pad, LineTypePtr Line);
