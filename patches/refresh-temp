Bottom: 8dca273cb18cc2fea3d8d06835fe420e9304b84d
Top:    4bd219d3eae193abfef2eacc8d4a573e7d6b7fd6
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2011-12-25 01:17:10 +0000

Refresh of gts-avoid-performing-computati

---

diff --git a/gts/refine.c b/gts/refine.c
index d972868..eab585d 100644
--- a/gts/refine.c
+++ b/gts/refine.c
@@ -388,12 +388,14 @@ guint gts_delaunay_refine (GtsSurface * surface,
   GTS_OBJECT (surface)->reserved = heap;
 
   while (steiner_max-- != 0 && (f = gts_eheap_remove_top (heap, NULL))) {
+    GtsVertex *add_vertex_returned;
     GtsVertex * c = 
       GTS_VERTEX (gts_triangle_circumcircle_center (GTS_TRIANGLE (f),
 		  GTS_POINT_CLASS (surface->vertex_class)));
     EHEAP_PAIR (f) = NULL;
     g_assert (c != NULL);
-    g_assert (gts_delaunay_add_vertex (surface, c, f) == NULL);
+    add_vertex_returned = gts_delaunay_add_vertex (surface, c, f);
+    g_assert (add_vertex_returned == NULL);
 
     vertex_encroaches (c, surface, encroached, encroaches, encroach_data);
     if (!gts_fifo_is_empty (encroached)) {
diff --git a/gts/split.c b/gts/split.c
index 2980cb5..b7bee77 100644
--- a/gts/split.c
+++ b/gts/split.c
@@ -947,7 +947,8 @@ GtsSplit * gts_split_new (GtsSplitClass * klass,
 #else
   v1 = GTS_SPLIT_V1 (vs);
   v2 = GTS_SPLIT_V2 (vs);
-  g_assert ((e = GTS_EDGE (gts_vertices_are_connected (v1, v2))));
+  e = GTS_EDGE (gts_vertices_are_connected (v1, v2));
+  g_assert (e != NULL);
   i = e->triangles;
   vs->ncf = g_slist_length (i);
   g_assert (vs->ncf > 0);
