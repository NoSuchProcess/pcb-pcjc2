Bottom: d84edd6efa8d2e601947976aa8f1cd3975000b33
Top:    37677f2f838a9bcc587ba66d9e51679ec99b4a49
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-05-08 18:11:56 +0100

Refresh of manage-stencil-bitplanes-so-we

---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index 223d64f..4a9a652 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -634,12 +634,12 @@ hidgl_fill_pcb_polygon (PolygonType *poly, const BoxType *clip_box, double scale
   gluTessCallback(info.tobj, GLU_TESS_COMBINE, myCombine);
   gluTessCallback(info.tobj, GLU_TESS_ERROR, myError);
 
-  glPushAttrib (GL_STENCIL_BUFFER_BIT);                   /* Save the write mask etc.. for final restore */
-  glPushAttrib (GL_STENCIL_BUFFER_BIT |                   /* Resave the stencil write-mask etc.., and */
-                GL_COLOR_BUFFER_BIT);                     /* the colour buffer write mask etc.. for part way restore */
-  glStencilMask (stencil_bit);                            /* Only write to our stencil bit */
-  glStencilFunc (GL_ALWAYS, stencil_bit, stencil_bit);    /* Always pass stencil test, ref value is our bit */
-  glColorMask (0, 0, 0, 0);                               /* Disable writting in color buffer */
+  glPushAttrib (GL_STENCIL_BUFFER_BIT);                 /* Save the write mask etc.. for final restore */
+  glPushAttrib (GL_STENCIL_BUFFER_BIT |                 /* Resave the stencil write-mask etc.., and */
+                GL_COLOR_BUFFER_BIT);                   /* the colour buffer write mask etc.. for part way restore */
+  glStencilMask (stencil_bit);                          /* Only write to our stencil bit */
+  glStencilFunc (GL_ALWAYS, stencil_bit, stencil_bit);  /* Always pass stencil test, ref value is our bit */
+  glColorMask (0, 0, 0, 0);                             /* Disable writting in color buffer */
 
   /* It will already be setup like this (so avoid prodding the state-machine):
    * glStencilOp (GL_KEEP, GL_KEEP, GL_REPLACE); // Stencil pass => replace stencil value
