Bottom: bb13605da6fe7a20f8a2c08816667b571fb93534
Top:    c52013490e80a08462fdbecfaaa8eff42f7d7c7e
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-25 11:49:08 +0100

Refresh of demo-of-exporter-specific-expo

---

diff --git a/src/hid/gerber/gerber.c b/src/hid/gerber/gerber.c
index fcd84a9..91deeb6 100644
--- a/src/hid/gerber/gerber.c
+++ b/src/hid/gerber/gerber.c
@@ -368,8 +368,6 @@ gerber_expose (HID * hid, BoxType * region, void *item)
   int i, ngroups, side;
   int plated;
   int component, solder;
-  int do_group[MAX_LAYER];     /* This is the list of layer groups we will draw. */
-  int drawn_groups[MAX_LAYER]; /* This is the reverse of the order in which we draw them. */
 
   HID *old_gui = gui;
   hidGC savebg = Output.bgGC;
@@ -404,20 +402,8 @@ gerber_expose (HID * hid, BoxType * region, void *item)
         continue;
 
       if (gui->set_layer (0, group, 0))
-        {
-          if (DrawLayerGroup (group, drawn_area))
-            {
-              r_search (PCB->Data->via_tree, drawn_area, NULL, pin_callback, NULL);
-              r_search (PCB->Data->pin_tree, drawn_area, NULL, pin_callback, NULL);
-
-              if (group == component_group || group == solder_group)
-                {
-                  SWAP_IDENT = (group == solder_group);
-                  r_search (PCB->Data->pad_tree, drawn_area, NULL, pad_callback, NULL);
-                  SWAP_IDENT = save_swap;
-                }
-            }
-        }
+        if (DrawLayerGroup (group, drawn_area))
+          DrawPPV (group, drawn_area);
     }
 
   count_holes (drawn_area, &nplated, &nunplated);
@@ -437,32 +423,24 @@ gerber_expose (HID * hid, BoxType * region, void *item)
     }
 
   if (gui->set_layer ("componentmask", SL (MASK, TOP), 0))
-    {
-      SWAP_IDENT = 0;
-      DrawMask (drawn_area);
-      SWAP_IDENT = save_swap;
-    }
+    DrawMask (COMPONENT_LAYER, drawn_area);
 
   if (gui->set_layer ("soldermask", SL (MASK, BOTTOM), 0))
-    {
-      SWAP_IDENT = 1;
-      DrawMask (drawn_area);
-      SWAP_IDENT = save_swap;
-    }
+    DrawMask (SOLDER_LAYER, drawn_area);
 
   if (gui->set_layer ("topsilk", SL (SILK, TOP), 0))
-    DrawSilk (0, component_silk_layer, drawn_area);
+    DrawSilk (COMPONENT_LAYER, drawn_area);
 
   if (gui->set_layer ("bottomsilk", SL (SILK, BOTTOM), 0))
-    DrawSilk (1, solder_silk_layer, drawn_area);
+    DrawSilk (SOLDER_LAYER, drawn_area);
 
   paste_empty = IsPasteEmpty (COMPONENT_LAYER);
   if (gui->set_layer ("toppaste", SL (PASTE, TOP), paste_empty))
-    DrawPaste (COMPONENT_LAYER);
+    DrawPaste (COMPONENT_LAYER, drawn_area);
 
   paste_empty = IsPasteEmpty (SOLDER_LAYER);
   if (gui->set_layer ("bottompaste", SL (PASTE, BOTTOM), paste_empty))
-    DrawPaste (SOLDER_LAYER);
+    DrawPaste (SOLDER_LAYER, drawn_area);
 
   if (gui->set_layer ("fab", SL (FAB, 0), 0))
     PrintFab ();
