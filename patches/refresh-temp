Bottom: 54ef9ca3b5f1ca0cead35af367732d1081884806
Top:    c37562012b51295e3ca822eb82e1451181fb6dd4
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-11-14 01:02:39 +0000

Refresh of remove-thindraw_pcb_polygon-fr

---

diff --git a/src/draw.c b/src/draw.c
index 25d78d6..53c00a7 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -873,7 +873,7 @@ poly_callback (const BoxType * b, void *cl)
   struct poly_info *i = cl;
   PolygonType *polygon = (PolygonType *)b;
 
-  gui->draw_polygon (Output.fgGC, polygon, i->drawn_area);
+  gui->draw_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
 
   return 1;
 }
diff --git a/src/hid.h b/src/hid.h
index 8afd735..cc82222 100644
--- a/src/hid.h
+++ b/src/hid.h
@@ -371,8 +371,7 @@ typedef enum
     void (*draw_rect) (hidGC gc_, Coord x1_, Coord y1_, Coord x2_, Coord y2_);
     void (*fill_circle) (hidGC gc_, Coord cx_, Coord cy_, Coord radius_);
     void (*fill_polygon) (hidGC gc_, int n_coords_, Coord *x_, Coord *y_);
-    void (*draw_polygon) (hidGC gc_, PolygonType *poly,
-                          const BoxType *clip_box);
+    void (*draw_pcb_polygon) (hidGC gc_, PolygonType *poly, const BoxType *clip_box);
     void (*fill_pcb_pad) (hidGC gc_, PadType *pad, bool clip, bool mask);
     void (*thindraw_pcb_pad) (hidGC gc_, PadType *pad, bool clip, bool mask);
     void (*fill_pcb_pv) (hidGC fg_gc, hidGC bg_gc, PinType *pv, bool drawHole, bool mask);
diff --git a/src/hid/common/draw_helpers.c b/src/hid/common/draw_helpers.c
index 75ec4b8..862a947 100644
--- a/src/hid/common/draw_helpers.c
+++ b/src/hid/common/draw_helpers.c
@@ -140,7 +140,7 @@ should_compute_no_holes (PolygonType *poly, const BoxType *clip_box)
 #undef BOUNDS_INSIDE_CLIP_THRESHOLD
 
 void
-common_draw_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+common_draw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
   if (!poly->NoHolesValid)
     {
@@ -469,7 +469,7 @@ common_thindraw_pcb_pv (hidGC fg_gc, hidGC bg_gc, PinType *pv, bool drawHole, bo
 void
 common_draw_helpers_init (HID *hid)
 {
-  hid->draw_polygon         = common_draw_polygon;
+  hid->draw_pcb_polygon     = common_draw_pcb_polygon;
   hid->fill_pcb_pad         = common_fill_pcb_pad;
   hid->thindraw_pcb_pad     = common_thindraw_pcb_pad;
   hid->fill_pcb_pv          = common_fill_pcb_pv;
diff --git a/src/hid/common/draw_helpers.h b/src/hid/common/draw_helpers.h
index cedc958..05bf19d 100644
--- a/src/hid/common/draw_helpers.h
+++ b/src/hid/common/draw_helpers.h
@@ -1,4 +1,4 @@
-void common_draw_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box);
+void common_draw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box);
 void common_thindraw_pcb_polygon (hidGC gc, PolygonType *poly,
                                   const BoxType *clip_box);
 void common_fill_pcb_pad (hidGC gc, PadType *pad, bool clear, bool mask);
diff --git a/src/hid/common/hidnogui.c b/src/hid/common/hidnogui.c
index bb96bd9..c43a9e0 100644
--- a/src/hid/common/hidnogui.c
+++ b/src/hid/common/hidnogui.c
@@ -147,7 +147,7 @@ nogui_fill_polygon (hidGC gc, int n_coords, Coord *x, Coord *y)
 }
 
 static void
-nogui_draw_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+nogui_draw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
   CRASH;
 }
@@ -467,7 +467,7 @@ common_nogui_init (HID *hid)
   hid->draw_rect =            nogui_draw_rect;
   hid->fill_circle =          nogui_fill_circle;
   hid->fill_polygon =         nogui_fill_polygon;
-  hid->draw_polygon =         nogui_draw_polygon;
+  hid->draw_pcb_polygon =     nogui_draw_pcb_polygon;
   hid->fill_pcb_pad =         nogui_fill_pcb_pad;
   hid->thindraw_pcb_pad =     nogui_thindraw_pcb_pad;
   hid->fill_pcb_pv =          nogui_fill_pcb_pv;
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 731d3b5..ab57d87 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -575,7 +575,7 @@ ghid_fill_polygon (hidGC gc, int n_coords, Coord *x, Coord *y)
 }
 
 void
-ghid_draw_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+ghid_draw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
   static char *color;
   USE_GC (gc);
@@ -818,7 +818,7 @@ ghid_init_renderer (int *argc, char ***argv, GHidPort *port)
 
   /* Setup HID function pointers specific to the GL renderer*/
   ghid_hid.end_layer = ghid_end_layer;
-  ghid_hid.draw_polygon = ghid_draw_polygon;
+  ghid_hid.draw_pcb_polygon = ghid_draw_pcb_polygon;
 }
 
 void
@@ -908,7 +908,7 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
      we can't use the hidgl polygon drawing routine */
   /* TODO: We could use the GLU tessellator though */
   if (hidgl_stencil_bits() == 0)
-    ghid_hid.draw_polygon = common_draw_polygon;
+    ghid_hid.draw_pcb_polygon = common_draw_pcb_polygon;
 
   glEnable (GL_BLEND);
   glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
diff --git a/src/hid/ps/ps.c b/src/hid/ps/ps.c
index c5cf97a..20347ff 100644
--- a/src/hid/ps/ps.c
+++ b/src/hid/ps/ps.c
@@ -1240,7 +1240,7 @@ ps_fill_polygon (hidGC gc, int n_coords, Coord *x, Coord *y)
 }
 
 static void
-ps_draw_polygon (hidGC gc, PolygonType * poly, const BoxType * clip_box)
+ps_draw_pcb_polygon (hidGC gc, PolygonType * poly, const BoxType * clip_box)
 {
   /* Ignore clip_box, just draw everything */
 
@@ -1504,7 +1504,7 @@ void ps_ps_init (HID *hid)
   hid->draw_rect          = ps_draw_rect;
   hid->fill_circle        = ps_fill_circle;
   hid->fill_polygon       = ps_fill_polygon;
-  hid->draw_polygon       = ps_draw_polygon;
+  hid->draw_pcb_polygon   = ps_draw_pcb_polygon;
   hid->fill_rect          = ps_fill_rect;
   hid->calibrate          = ps_calibrate;
   hid->set_crosshair      = ps_set_crosshair;
