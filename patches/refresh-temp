Bottom: cc4dfb81d35375390026e339ece4d68dc6621927
Top:    78e101229f45af0c26d7a3929802ce37ce51e9f8
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-29 17:04:02 +0100

Refresh of add-hid-apis-to-handle-live-de

---

diff --git a/src/hid.h b/src/hid.h
index 08ec71f..820760e 100644
--- a/src/hid.h
+++ b/src/hid.h
@@ -544,10 +544,34 @@ typedef enum
 
     void (*edit_attributes) (char *owner, AttributeListType *attrlist_);
 
+    /* Debug drawing support. These APIs must be implemented (non NULL),
+     * but they do not have to be functional. request_debug_draw can
+     * return NULL to indicate debug drawing is not permitted.
+     *
+     * Debug drawing is not gauranteed to be re-entrant.
+     * The caller must not nest requests for debug drawing.
+     */
+
+    /* Request permission for debug drawing
+     *
+     * Returns a HID pointer which should be used rather than the global
+     * gui-> for making drawing calls. If the return value is NULL, then
+     * permission has been denied, and the drawing must not continue.
+     */
     HID *(*request_debug_draw) (void);
+
+    /* Flush pending drawing to the screen
+     *
+     * May be implemented as a NOOP if the GUI has chosen to send the
+     * debug drawing directly to the screen.
+     */
     void (*flush_debug_draw)   (void);
-    void (*finish_debug_draw)  (void);
 
+    /* When finished, the user must inform the GUI to clean up resources
+     *
+     * Any remaining rendering will be flushed to the screen.
+     */
+    void (*finish_debug_draw)  (void);
   };
 
 /* Call this as soon as possible from main().  No other HID calls are
