Bottom: 9d5a42bffb936f64c6920365dfb2f2af1aa3f567
Top:    7d85e2f3db926ce137a38cc5e3eb278d3b0ae0dd
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-01-22 13:29:48 +0000

Refresh of other-drawing-api-changes

---

diff --git a/src/draw.c b/src/draw.c
index 050a15f..b23cb2d 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -284,23 +284,6 @@ draw_pad_name (DrawAPI *dapi, PadType *pad)
 }
 
 static void
-_draw_pad (DrawAPI *dapi, PadType *pad, bool clear, bool mask)
-{
-  if (clear && !mask && pad->Clearance <= 0)
-    return;
-
-  dapi->draw_pcb_pad (dapi, NULL, pad);
-
-#if 0
-  if (TEST_FLAG (THINDRAWFLAG, PCB) ||
-      (clear && TEST_FLAG (THINDRAWPOLYFLAG, PCB)))
-    dapi->thindraw_pcb_pad (dapi->gc, pad, clear, mask);
-  else
-    dapi->fill_pcb_pad (dapi->gc, pad, clear, mask);
-#endif
-}
-
-static void
 draw_pad (DrawAPI *dapi, PadType *pad)
 {
   if (doing_pinout)
@@ -319,7 +302,7 @@ draw_pad (DrawAPI *dapi, PadType *pad)
   else
    dapi->gapi->set_color (dapi->fg_gc, PCB->InvisibleObjectsColor);
 
-  _draw_pad (dapi, pad, false, false);
+  dapi->draw_pcb_pad (dapi, NULL, pad);
 
   if (doing_pinout || TEST_FLAG (DISPLAYNAMEFLAG, pad))
     draw_pad_name (dapi, pad);
@@ -715,13 +698,13 @@ DrawEverything (DrawAPI *dapi)
   /* Draw the solder mask if turned on */
   if (gui->set_layer ("componentmask", SL (MASK, TOP), 0))
     {
-      dapi->draw_solder_mask (dapi, COMPONENT_LAYER);
+      dapi->draw_mask_layer (dapi, COMPONENT_LAYER);
       gui->end_layer ();
     }
 
   if (gui->set_layer ("soldermask", SL (MASK, BOTTOM), 0))
     {
-      dapi->draw_solder_mask (dapi, SOLDER_LAYER);
+      dapi->draw_mask_layer (dapi, SOLDER_LAYER);
       gui->end_layer ();
     }
 
@@ -753,14 +736,14 @@ DrawEverything (DrawAPI *dapi)
   paste_empty = IsPasteEmpty (COMPONENT_LAYER);
   if (gui->set_layer ("toppaste", SL (PASTE, TOP), paste_empty))
     {
-      DrawPaste (dapi, COMPONENT_LAYER);
+      dapi->draw_paste_layer (dapi, COMPONENT_LAYER);
       gui->end_layer ();
     }
 
   paste_empty = IsPasteEmpty (SOLDER_LAYER);
   if (gui->set_layer ("bottompaste", SL (PASTE, BOTTOM), paste_empty))
     {
-      DrawPaste (dapi, SOLDER_LAYER);
+      dapi->draw_paste_layer (dapi, SOLDER_LAYER);
       gui->end_layer ();
     }
 
@@ -872,25 +855,6 @@ DrawPPV (DrawAPI *dapi, int group)
 }
 
 static int
-clearPin_callback (const BoxType * b, void *cl)
-{
-  PinType *pin = (PinType *) b;
-  struct side_info *info = cl;
-  DrawAPI *dapi = info->dapi;
-
-  dapi->draw_pcb_pin (dapi, pin);
-
-#if 0
-  if (TEST_FLAG (THINDRAWFLAG, PCB) || TEST_FLAG (THINDRAWPOLYFLAG, PCB))
-    dapi->thindraw_pcb_pv (dapi->pm_gc, dapi->pm_gc, pin, false, true);
-  else
-    dapi->fill_pcb_pv (dapi->pm_gc, dapi->pm_gc, pin, false, true);
-#endif
-
-  return 1;
-}
-
-static int
 poly_callback (const BoxType * b, void *cl)
 {
   struct layer_info *info = cl;
@@ -929,14 +893,25 @@ poly_callback (const BoxType * b, void *cl)
 }
 
 static int
-clearPad_callback (const BoxType * b, void *cl)
+pin_mask_callback (const BoxType * b, void *cl)
+{
+  PinType *pin = (PinType *) b;
+  struct side_info *info = cl;
+
+  info->dapi->draw_pcb_pin_mask (info->dapi, pin);
+  return 1;
+}
+
+static int
+pad_mask_callback (const BoxType * b, void *cl)
 {
   PadType *pad = (PadType *) b;
   struct side_info *info = cl;
-  DrawAPI *dapi = info->dapi;
 
-  if (ON_SIDE (pad, info->side) && pad->Mask)
-    _draw_pad (dapi, pad, true, true);
+  if (!ON_SIDE (pad, info->side))
+    return 0;
+
+  info->dapi->draw_pcb_pad_mask (info->dapi, NULL, pad);
   return 1;
 }
 
@@ -971,9 +946,9 @@ draw_silk_layer (DrawAPI *dapi, int side)
     }
 
   dapi->gapi->use_mask (HID_MASK_CLEAR);
-  r_search (PCB->Data->pin_tree, drawn_area, NULL, clearPin_callback, NULL);
-  r_search (PCB->Data->via_tree, drawn_area, NULL, clearPin_callback, NULL);
-  r_search (PCB->Data->pad_tree, drawn_area, NULL, clearPad_callback, &side);
+  r_search (PCB->Data->pin_tree, drawn_area, NULL, pin_mask_callback, NULL);
+  r_search (PCB->Data->via_tree, drawn_area, NULL, pin_mask_callback, NULL);
+  r_search (PCB->Data->pad_tree, drawn_area, NULL, pad_mask_callback, &side);
 
   if (gui->poly_after)
     {
@@ -1009,7 +984,7 @@ DrawMaskBoardArea (DrawAPI *dapi, int mask_type)
  * draws solder mask layer - this will cover nearly everything
  */
 static void
-draw_solder_mask (DrawAPI *dapi, int side)
+draw_mask_layer (DrawAPI *dapi, int side)
 {
   int thin = TEST_FLAG(THINDRAWFLAG, PCB) || TEST_FLAG(THINDRAWPOLYFLAG, PCB);
   struct side_info info;
@@ -1025,9 +1000,9 @@ draw_solder_mask (DrawAPI *dapi, int side)
       dapi->gapi->use_mask (HID_MASK_CLEAR);
     }
 
-  r_search (PCB->Data->pin_tree, dapi->clip_box, NULL, clearPin_callback, &info);
-  r_search (PCB->Data->via_tree, dapi->clip_box, NULL, clearPin_callback, &info);
-  r_search (PCB->Data->pad_tree, dapi->clip_box, NULL, clearPad_callback, &info);
+  r_search (PCB->Data->pin_tree, dapi->clip_box, NULL, pin_mask_callback, &info);
+  r_search (PCB->Data->via_tree, dapi->clip_box, NULL, pin_mask_callback, &info);
+  r_search (PCB->Data->pad_tree, dapi->clip_box, NULL, pad_mask_callback, &info);
 
   if (thin)
     dapi->gapi->set_color (dapi->pm_gc, "erase");
@@ -1041,19 +1016,14 @@ draw_solder_mask (DrawAPI *dapi, int side)
 /* ---------------------------------------------------------------------------
  * draws solder paste layer for a given side of the board
  */
-void
-DrawPaste (DrawAPI *dapi, int side)
+static void
+draw_paste_layer (DrawAPI *dapi, int side)
 {
   dapi->gapi->set_color (dapi->fg_gc, PCB->ElementColor);
   ALLPAD_LOOP (PCB->Data);
   {
-    if (ON_SIDE (pad, side) && !TEST_FLAG (NOPASTEFLAG, pad) && pad->Mask > 0)
-      {
-        if (pad->Mask < pad->Thickness)
-          _draw_pad (dapi, pad, true, true);
-        else
-          _draw_pad (dapi, pad, false, false);
-      }
+    if (ON_SIDE (pad, side))
+      dapi->draw_pcb_pad_paste (dapi, NULL, pad);
   }
   ENDALL_LOOP;
 }
@@ -1823,18 +1793,17 @@ draw_api_new (void)
   dapi->draw_pcb_pad_mask    =
   dapi->draw_pcb_pad_paste   =
   dapi->draw_pcb_line        =
-  dapi->draw_rat             =
   dapi->draw_pcb_arc         =
   dapi->draw_pcb_text        =
   dapi->draw_pcb_polygon     =
+
+  dapi->draw_rat             =
 #endif
   dapi->draw_pcb_element     = draw_pcb_element;
   dapi->draw_pcb_layer       = draw_pcb_layer;
   dapi->draw_pcb_layer_group = draw_pcb_layer_group;
-  dapi->draw_solder_mask     = draw_solder_mask;
-#if 0
-  dapi->draw_solder_paste    =
-#endif
+  dapi->draw_mask_layer      = draw_mask_layer;
+  dapi->draw_paste_layer     = draw_paste_layer;
   dapi->draw_silk_layer      = draw_silk_layer; /* Hmm - should be able to do this by layer number, even if not layer group */
   /* But it would mean special casing diving into element silk from teh draw_pcb_layer function */
   dapi->draw_everything      = draw_everything;
diff --git a/src/draw_api.h b/src/draw_api.h
index 901f27f..6ceab34 100644
--- a/src/draw_api.h
+++ b/src/draw_api.h
@@ -28,6 +28,8 @@ typedef struct GraphicsAPI GraphicsAPI;
 
 struct DrawAPI {
   /* Virtual functions */
+
+  /* Isolated calls, corresponding to actual copper / mask / paste features. These don't call other dapi's */
   void (*draw_pcb_pin)         (DrawAPI *, PinType *);
   void (*draw_pcb_pin_mask)    (DrawAPI *, PinType *);
   void (*draw_pcb_pin_hole)    (DrawAPI *, PinType *);
@@ -38,33 +40,37 @@ struct DrawAPI {
   void (*draw_pcb_pad_mask)    (DrawAPI *, LayerType *, PadType *);
   void (*draw_pcb_pad_paste)   (DrawAPI *, LayerType *, PadType *);
   void (*draw_pcb_line)        (DrawAPI *, LayerType *, LineType *);
-//  void (*draw_rat)         (DrawAPI *,              RatType *);
   void (*draw_pcb_arc)         (DrawAPI *, LayerType *, ArcType *);
   void (*draw_pcb_text)        (DrawAPI *, LayerType *, TextType *);
   void (*draw_pcb_polygon)     (DrawAPI *, LayerType *, PolygonType *);
 
-//  void (*draw_ppv)         (DrawAPI *, LayerType *, int);
-//  void (*draw_holes)       (DrawAPI *,              int);
+//  void (*draw_rat)             (DrawAPI *,              RatType *);
+
+  /* May call other dapi functions */
   void (*draw_pcb_element)     (DrawAPI *, ElementType *);
+
+  /* Operates by calling other functions */
+//  void (*draw_holes)           (DrawAPI *,              int);
+//  void (*draw_ppv)             (DrawAPI *, LayerType *, int);
   void (*draw_pcb_layer)       (DrawAPI *, LayerType *);
   void (*draw_pcb_layer_group) (DrawAPI *, int);
-  void (*draw_solder_mask)     (DrawAPI *, int);
-  void (*draw_solder_paste)    (DrawAPI *, int);
+  void (*draw_mask_layer)      (DrawAPI *, int);
+  void (*draw_paste_layer)     (DrawAPI *, int);
   void (*draw_silk_layer)      (DrawAPI *, int);
-
   void (*draw_pcb_buffer)      (DrawAPI *, BufferType *);
   void (*draw_everything)      (DrawAPI *);
-
   void (*draw_pinout_preview)  (DrawAPI *, ElementType *);
+
+  /* Setup dapi API rendering parameters */
   void (*set_draw_offset)      (DrawAPI *, Coord, Coord);
   void (*set_clip_box)         (DrawAPI *, const BoxType *);
 
   /* Member variables */
-  GraphicsAPI *gapi;
-  hidGC gc;
-  hidGC fg_gc;
-  hidGC bg_gc;
-  hidGC pm_gc;
+  GraphicsAPI *gapi;       /* <--- This should be in a subclass of the base dapi, but nevermind */
+  hidGC gc;                /* <--- This should be in a subclass of the base dapi, but nevermind */
+  hidGC fg_gc;             /* <--- This should be in a subclass of the base dapi, but nevermind */
+  hidGC bg_gc;             /* <--- This should be in a subclass of the base dapi, but nevermind */
+  hidGC pm_gc;             /* <--- This should be in a subclass of the base dapi, but nevermind */
   const BoxType *clip_box;
 };
 
diff --git a/src/hid/common/draw_helpers.c b/src/hid/common/draw_helpers.c
index 3e3e514..963b606 100644
--- a/src/hid/common/draw_helpers.c
+++ b/src/hid/common/draw_helpers.c
@@ -197,11 +197,8 @@ common_thindraw_pcb_polygon (DrawAPI *dapi, LayerType *layer,
 }
 
 static void
-thindraw_pcb_pad (DrawAPI *dapi, PadType *pad, bool clear, bool mask)
+thindraw_pcb_pad (DrawAPI *dapi, PadType *pad, Coord w)
 {
-  Coord w = clear ? (mask ? pad->Mask
-                          : pad->Thickness + pad->Clearance)
-                  : pad->Thickness;
   Coord x1, y1, x2, y2;
   Coord t = w / 2;
   x1 = pad->Point1.X;
@@ -268,22 +265,26 @@ thindraw_pcb_pad (DrawAPI *dapi, PadType *pad, bool clear, bool mask)
 static void
 common_thindraw_pcb_pad (DrawAPI *dapi, LayerType *layer, PadType *pad)
 {
-  thindraw_pcb_pad (dapi, pad, true, false);
+  thindraw_pcb_pad (dapi, pad, pad->Thickness);
 }
 
 static void
 common_thindraw_pcb_pad_mask (DrawAPI *dapi, LayerType *layer, PadType *pad)
 {
-  thindraw_pcb_pad (dapi, pad, true, true);
+  if (pad->Mask > 0)
+    thindraw_pcb_pad (dapi, pad, pad->Mask);
 }
 
 static void
-fill_pcb_pad (DrawAPI *dapi, PadType *pad, bool clear, bool mask)
+common_thindraw_pcb_pad_paste (DrawAPI *dapi, LayerType *layer, PadType *pad)
 {
-  Coord w = clear ? (mask ? pad->Mask
-                          : pad->Thickness + pad->Clearance)
-                  : pad->Thickness;
+  if (!TEST_FLAG (NOPASTEFLAG, pad) && pad->Mask > 0)
+    thindraw_pcb_pad (dapi, pad, MIN (pad->Thickness, pad->Mask));
+}
 
+static void
+fill_pcb_pad (DrawAPI *dapi, PadType *pad, Coord w)
+{
   if (pad->Point1.X == pad->Point2.X &&
       pad->Point1.Y == pad->Point2.Y)
     {
@@ -315,13 +316,21 @@ fill_pcb_pad (DrawAPI *dapi, PadType *pad, bool clear, bool mask)
 static void
 common_fill_pcb_pad (DrawAPI *dapi, LayerType *layer, PadType *pad)
 {
-  fill_pcb_pad (dapi, pad, true, false);
+  fill_pcb_pad (dapi, pad, pad->Thickness);
 }
 
 static void
 common_fill_pcb_pad_mask (DrawAPI *dapi, LayerType *layer, PadType *pad)
 {
-  fill_pcb_pad (dapi, pad, true, true);
+  if (pad->Mask > 0)
+    fill_pcb_pad (dapi, pad, pad->Mask);
+}
+
+static void
+common_fill_pcb_pad_paste (DrawAPI *dapi, LayerType *layer, PadType *pad)
+{
+  if (!TEST_FLAG (NOPASTEFLAG, pad) && pad->Mask > 0)
+    fill_pcb_pad (dapi, pad, MIN (pad->Thickness, pad->Mask));
 }
 
 
@@ -347,7 +356,7 @@ FloatPolyType;
 
 static void
 draw_octagon_poly (DrawAPI *dapi, Coord X, Coord Y,
-                   Coord Thickness, Coord thin_draw)
+                   Coord Thickness, bool thin_draw)
 {
   static FloatPolyType p[8] = {
     { 0.5,               -TAN_22_5_DEGREE_2},
@@ -385,22 +394,21 @@ draw_octagon_poly (DrawAPI *dapi, Coord X, Coord Y,
   if (thin_draw)
     {
       int i;
-      dapi->gapi->set_line_cap (dapi->gc, Round_Cap);
-      dapi->gapi->set_line_width (dapi->gc, 0);
+      dapi->gapi->set_line_cap (dapi->fg_gc, Round_Cap);
+      dapi->gapi->set_line_width (dapi->fg_gc, 0);
       polygon_x[8] = X + scaled_x[0];
       polygon_y[8] = Y + scaled_y[0];
       for (i = 0; i < 8; i++)
-        dapi->gapi->draw_line (dapi->gc, polygon_x[i    ], polygon_y[i    ],
-                                         polygon_x[i + 1], polygon_y[i + 1]);
+        dapi->gapi->draw_line (dapi->fg_gc, polygon_x[i    ], polygon_y[i    ],
+                                            polygon_x[i + 1], polygon_y[i + 1]);
     }
   else
-    dapi->gapi->fill_polygon (dapi->gc, 8, polygon_x, polygon_y);
+    dapi->gapi->fill_polygon (dapi->fg_gc, 8, polygon_x, polygon_y);
 }
 
 static void
-fill_pcb_pv (DrawAPI *dapi, PinType *pv, bool drawHole, bool mask)
+fill_pcb_pv (DrawAPI *dapi, HIDGC gc, PinType *pv, Coord w, bool drawHole)
 {
-  Coord w = mask ? pv->Mask : pv->Thickness;
   Coord r = w / 2;
 
   if (TEST_FLAG (HOLEFLAG, pv))
@@ -439,19 +447,18 @@ fill_pcb_pv (DrawAPI *dapi, PinType *pv, bool drawHole, bool mask)
 static void
 common_fill_pcb_pv (DrawAPI *dapi, PinType *pv)
 {
-  fill_pcb_pv (dapi, pv, true, false);
+  fill_pcb_pv (dapi, dapi->fg_gc, pv, pv->Thickness, true);
 }
 
 static void
 common_fill_pcb_pv_mask (DrawAPI *dapi, PinType *pv)
 {
-  fill_pcb_pv (dapi, pv, true, true);
+  fill_pcb_pv (dapi, dapi->bg_gc, pv, pv->Mask, true);
 }
 
 static void
-thindraw_pcb_pv (DrawAPI *dapi, PinType *pv, bool drawHole, bool mask)
+thindraw_pcb_pv (DrawAPI *dapi, PinType *pv, Coord w, bool drawHole)
 {
-  Coord w = mask ? pv->Mask : pv->Thickness;
   Coord r = w / 2;
 
   if (TEST_FLAG (HOLEFLAG, pv))
@@ -507,36 +514,40 @@ thindraw_pcb_pv (DrawAPI *dapi, PinType *pv, bool drawHole, bool mask)
 static void
 common_thindraw_pcb_pv (DrawAPI *dapi, PinType *pv)
 {
-  thindraw_pcb_pv (dapi, pv, true, false);
+  thindraw_pcb_pv (dapi, pv, pv->Thickness, true);
 }
 
 static void
 common_thindraw_pcb_pv_mask (DrawAPI *dapi, PinType *pv)
 {
-  thindraw_pcb_pv (dapi, pv, true, true);
+  thindraw_pcb_pv (dapi, pv, pv->Mask, true);
 }
 
 
 void
 common_draw_helpers_init (DrawAPI *dapi)
 {
-  dapi->draw_pcb_polygon  = common_fill_pcb_polygon;
-  dapi->draw_pcb_pad      = common_fill_pcb_pad;
-  dapi->draw_pcb_pad_mask = common_fill_pcb_pad_mask;
-  dapi->draw_pcb_pin      = common_fill_pcb_pv;
-  dapi->draw_pcb_pin_mask = common_fill_pcb_pv_mask;
-  dapi->draw_pcb_via      = common_fill_pcb_pv;
-  dapi->draw_pcb_via_mask = common_fill_pcb_pv_mask;
+  dapi->draw_pcb_polygon   = common_fill_pcb_polygon;
+  dapi->draw_pcb_pad       = common_fill_pcb_pad;
+  dapi->draw_pcb_pad_mask  = common_fill_pcb_pad_mask;
+  dapi->draw_pcb_pad_paste = common_fill_pcb_pad_paste;
+  dapi->draw_pcb_pin       = common_fill_pcb_pv;
+  dapi->draw_pcb_pin_mask  = common_fill_pcb_pv_mask;
+  dapi->draw_pcb_pin_hole  = common_fill_pcb_pv_mask;
+  dapi->draw_pcb_via       = common_fill_pcb_pv;
+  dapi->draw_pcb_via_mask  = common_fill_pcb_pv_mask;
 }
 
 void
 common_thindraw_helpers_init (DrawAPI *dapi)
 {
-  dapi->draw_pcb_polygon  = common_thindraw_pcb_polygon;
-  dapi->draw_pcb_pad      = common_thindraw_pcb_pad;
-  dapi->draw_pcb_pad_mask = common_thindraw_pcb_pad_mask;
-  dapi->draw_pcb_pin      = common_thindraw_pcb_pv;
-  dapi->draw_pcb_pin_mask = common_thindraw_pcb_pv_mask;
-  dapi->draw_pcb_via      = common_thindraw_pcb_pv;
-  dapi->draw_pcb_via_mask = common_thindraw_pcb_pv_mask;
+  dapi->draw_pcb_polygon   = common_thindraw_pcb_polygon;
+  dapi->draw_pcb_pad       = common_thindraw_pcb_pad;
+  dapi->draw_pcb_pad_mask  = common_thindraw_pcb_pad_mask;
+  dapi->draw_pcb_pad_paste = common_thindraw_pcb_pad_paste;
+  dapi->draw_pcb_pin       = common_thindraw_pcb_pv;
+  dapi->draw_pcb_pin_mask  = common_thindraw_pcb_pv_mask;
+  dapi->draw_pcb_pin_hole  = common_thindraw_pcb_pv_hole;
+  dapi->draw_pcb_via       = common_thindraw_pcb_pv;
+  dapi->draw_pcb_via_mask  = common_thindraw_pcb_pv_mask;
 }
