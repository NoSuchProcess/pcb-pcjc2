Bottom: 4e21e723a1051fe27e5c5522e212acd0f479de1e
Top:    ae9b6b4388fbaa9d2600a5fe2d578034b4dc3693
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-01-23 19:18:48 +0000

Refresh of add-infrastructure-for-subcomp

---

diff --git a/src/draw.c b/src/draw.c
index d911a4c..d077214 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -355,7 +355,7 @@ static int
 lowvia_callback (const BoxType * b, void *cl)
 {
   PinTypePtr via = (PinTypePtr) b;
-  if (!via->Mask)
+//  if (!via->Mask)
     DrawPlainVia (via, False);
   return 1;
 }
@@ -473,25 +473,9 @@ DrawEverything (BoxTypePtr drawn_area)
     }
   if (TEST_FLAG (CHECKPLANESFLAG, PCB) && gui->gui)
     return;
-
   /* draw vias below silk */
   if (PCB->ViaOn && gui->gui)
     r_search (PCB->Data->via_tree, drawn_area, NULL, lowvia_callback, NULL);
-  /* Draw the solder mask if turned on */
-  if (gui->set_layer ("componentmask", SL (MASK, TOP), 0))
-    {
-      int save_swap = SWAP_IDENT;
-      SWAP_IDENT = 0;
-      DrawMask (drawn_area);
-      SWAP_IDENT = save_swap;
-    }
-  if (gui->set_layer ("soldermask", SL (MASK, BOTTOM), 0))
-    {
-      int save_swap = SWAP_IDENT;
-      SWAP_IDENT = 1;
-      DrawMask (drawn_area);
-      SWAP_IDENT = save_swap;
-    }
   /* Draw pins, pads, vias below silk */
   if (gui->gui)
     DrawTop (drawn_area);
@@ -520,6 +504,21 @@ DrawEverything (BoxTypePtr drawn_area)
 		    &plated);
 	}
     }
+  /* Draw the solder mask if turned on */
+  if (gui->set_layer ("componentmask", SL (MASK, TOP), 0))
+    {
+      int save_swap = SWAP_IDENT;
+      SWAP_IDENT = 0;
+      DrawMask (drawn_area);
+      SWAP_IDENT = save_swap;
+    }
+  if (gui->set_layer ("soldermask", SL (MASK, BOTTOM), 0))
+    {
+      int save_swap = SWAP_IDENT;
+      SWAP_IDENT = 1;
+      DrawMask (drawn_area);
+      SWAP_IDENT = save_swap;
+    }
   /* Draw top silkscreen */
   if (gui->set_layer ("topsilk", SL (SILK, TOP), 0))
     DrawSilk (0, COMPONENT_LAYER, drawn_area);
@@ -532,7 +531,7 @@ DrawEverything (BoxTypePtr drawn_area)
 	r_search (PCB->Data->element_tree, drawn_area, NULL, EMark_callback,
 		  NULL);
       /* Draw rat lines on top */
-      if (PCB->RatOn)
+      if (PCB->RatOn && gui->set_layer ("rats", SL (RATS, 0), 0))
 	DrawRats(drawn_area);
     }
 
@@ -621,7 +620,7 @@ static int
 via_callback (const BoxType * b, void *cl)
 {
   PinTypePtr via = (PinTypePtr) b;
-  if (via->Mask)
+//  if (via->Mask)
     DrawPlainVia (via, False);
   return 1;
 }
@@ -698,6 +697,8 @@ clearPad_callback (const BoxType * b, void *cl)
   return 1;
 }
 
+#define MASK_SUBCOMPOSITE_SILK 0
+
 /* ---------------------------------------------------------------------------
  * Draws silk layer.
  */
@@ -720,11 +721,27 @@ DrawSilk (int new_swap, int layer, BoxTypePtr drawn_area)
       gui->use_mask (HID_MASK_BEFORE);
 #endif
       DrawLayer (LAYER_PTR (max_layer + layer), drawn_area);
+
+#if MASK_SUBCOMPOSITE_SILK
+      gui->use_mask (HID_MASK_BEFORE);
+      gui->use_mask (HID_MASK_CLEAR);
+      gui->fill_rect (Output.fgGC, 0, 0, PCB->MaxWidth, PCB->MaxHeight);
+      gui->use_mask (HID_MASK_BEFORE);
+#endif
+
       /* draw package */
       r_search (PCB->Data->element_tree, drawn_area, NULL, frontE_callback,
 		NULL);
       r_search (PCB->Data->name_tree[NAME_INDEX (PCB)], drawn_area, NULL,
 		frontN_callback, NULL);
+
+#if MASK_SUBCOMPOSITE_SILK
+      gui->use_mask (HID_MASK_AFTER);
+      gui->set_color (Output.fgGC, PCB->ElementColor);
+      gui->fill_rect (Output.fgGC, 0, 0, PCB->MaxWidth, PCB->MaxHeight);
+      gui->use_mask (HID_MASK_OFF);
+#endif
+
 #if 0
     }
 
@@ -847,6 +864,7 @@ text_callback (const BoxType * b, void *cl)
   return 1;
 }
 
+#define MASK_SUBCOMPOSITE_LAYERS 0
 
 /* ---------------------------------------------------------------------------
  * draws one non-copper layer
@@ -856,6 +874,13 @@ DrawLayer (LayerTypePtr Layer, BoxType * screen)
 {
   struct pin_info info;
 
+#if MASK_SUBCOMPOSITE_LAYERS
+  gui->use_mask (HID_MASK_BEFORE);
+  gui->use_mask (HID_MASK_CLEAR);
+  gui->fill_rect (Output.fgGC, 0, 0, PCB->MaxWidth, PCB->MaxHeight);
+  gui->use_mask (HID_MASK_BEFORE);
+#endif
+
   /* print the non-clearing polys */
   info.Layer = Layer;
   info.arg = False;
@@ -871,8 +896,17 @@ DrawLayer (LayerTypePtr Layer, BoxType * screen)
   /* draw the layer text on screen */
   r_search (Layer->text_tree, screen, NULL, text_callback, Layer);
   clip_box = NULL;
+
+#if MASK_SUBCOMPOSITE_LAYERS
+  gui->use_mask (HID_MASK_AFTER);
+  gui->set_color (Output.fgGC, Layer->Color);
+  gui->fill_rect (Output.fgGC, 0, 0, PCB->MaxWidth, PCB->MaxHeight);
+  gui->use_mask (HID_MASK_OFF);
+#endif
 }
 
+#define MASK_SUBCOMPOSITE_LAYER_GROUPS 0
+
 /* ---------------------------------------------------------------------------
  * draws one layer group.  Returns non-zero if pins and pads should be
  * drawn with this group.
@@ -897,6 +931,14 @@ DrawLayerGroup (int group, const BoxType * screen)
 	rv = 0;
       if (layernum < max_layer && Layer->On)
 	{
+
+#if MASK_SUBCOMPOSITE_LAYER_GROUPS
+          gui->use_mask (HID_MASK_BEFORE);
+          gui->use_mask (HID_MASK_CLEAR);
+          gui->fill_rect (Output.fgGC, 0, 0, PCB->MaxWidth, PCB->MaxHeight);
+          gui->use_mask (HID_MASK_BEFORE);
+#endif
+
 	  /* draw all polygons on this layer */
 	  if (Layer->PolygonN)
 	    {
@@ -919,6 +961,12 @@ DrawLayerGroup (int group, const BoxType * screen)
 	  /* draw the layer text on screen */
 	  r_search (Layer->text_tree, screen, NULL, text_callback, Layer);
 
+#if MASK_SUBCOMPOSITE_LAYER_GROUPS
+          gui->use_mask (HID_MASK_AFTER);
+          gui->set_color (Output.fgGC, Layer->Color);
+          gui->fill_rect (Output.fgGC, 0, 0, PCB->MaxWidth, PCB->MaxHeight);
+          gui->use_mask (HID_MASK_OFF);
+#endif
 	}
     }
   if (n_entries > 1)
@@ -2177,6 +2225,8 @@ DrawElement (ElementTypePtr Element, int unused)
   DrawElementPinsAndPads (Element, unused);
 }
 
+#define MASK_SUBCOMPOSITE_ELEMENT_NAMES 0
+
 /* ---------------------------------------------------------------------------
  * draws the name of an element
  */
@@ -2187,6 +2237,15 @@ DrawElementName (ElementTypePtr Element, int unused)
     return;
   if (TEST_FLAG (HIDENAMEFLAG, Element))
     return;
+#if MASK_SUBCOMPOSITE_ELEMENT_NAMES
+  gui->use_mask (HID_MASK_BEFORE);
+  gui->use_mask (HID_MASK_CLEAR);
+  gui->fill_rect (Output.fgGC, 0, 0, PCB->MaxWidth, PCB->MaxHeight);
+  gui->use_mask (HID_MASK_BEFORE);
+
+  DrawTextLowLevel (&ELEMENT_TEXT (PCB, Element), PCB->minSlk);
+#endif
+
   if (doing_pinout || doing_assy)
     gui->set_color (Output.fgGC, PCB->ElementColor);
   else if (TEST_FLAG (SELECTEDFLAG, &ELEMENT_TEXT (PCB, Element)))
@@ -2195,15 +2254,33 @@ DrawElementName (ElementTypePtr Element, int unused)
     gui->set_color (Output.fgGC, PCB->ElementColor);
   else
     gui->set_color (Output.fgGC, PCB->InvisibleObjectsColor);
+
+#if MASK_SUBCOMPOSITE_ELEMENT_NAMES
+  gui->use_mask (HID_MASK_AFTER);
+  gui->fill_rect (Output.fgGC, 0, 0, PCB->MaxWidth, PCB->MaxHeight);
+  gui->use_mask (HID_MASK_OFF);
+#else
   DrawTextLowLevel (&ELEMENT_TEXT (PCB, Element), PCB->minSlk);
+#endif
 }
 
+#define MASK_SUBCOMPOSITE_ELEMENT_PACKAGE 0
+
 /* ---------------------------------------------------------------------------
  * draws the package of an element
  */
 void
 DrawElementPackage (ElementTypePtr Element, int unused)
 {
+#if MASK_SUBCOMPOSITE_ELEMENT_PACKAGE
+  gui->use_mask (HID_MASK_BEFORE);
+  gui->use_mask (HID_MASK_CLEAR);
+  gui->fill_rect (Output.fgGC, 0, 0, PCB->MaxWidth, PCB->MaxHeight);
+  gui->use_mask (HID_MASK_BEFORE);
+
+  DrawElementPackageLowLevel (Element, unused);
+#endif
+
   /* set color and draw lines, arcs, text and pins */
   if (doing_pinout || doing_assy)
     gui->set_color (Output.fgGC, PCB->ElementColor);
@@ -2213,7 +2290,14 @@ DrawElementPackage (ElementTypePtr Element, int unused)
     gui->set_color (Output.fgGC, PCB->ElementColor);
   else
     gui->set_color (Output.fgGC, PCB->InvisibleObjectsColor);
+
+#if MASK_SUBCOMPOSITE_ELEMENT_PACKAGE
+  gui->use_mask (HID_MASK_AFTER);
+  gui->fill_rect (Output.fgGC, 0, 0, PCB->MaxWidth, PCB->MaxHeight);
+  gui->use_mask (HID_MASK_OFF);
+#else
   DrawElementPackageLowLevel (Element, unused);
+#endif
 }
 
 /* ---------------------------------------------------------------------------
diff --git a/src/hid.h b/src/hid.h
index a7e156d..aaca24d 100644
--- a/src/hid.h
+++ b/src/hid.h
@@ -196,6 +196,7 @@ extern "C"
 #define SL_INVISIBLE	0x0060
 #define SL_FAB		0x0070
 #define SL_ASSY		0x0080
+#define SL_RATS		0x0090
 /* Callers should use this.  */
 #define SL(type,side) (~0xfff | SL_##type | SL_##side##_SIDE)
