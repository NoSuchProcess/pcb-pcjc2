Bottom: a9cf0346d1c4c6bf610f0126c3e90a141fd2927d
Top:    13ee4ef6dc80ff5e748799b74b3d877de0a34fd8
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-10-22 00:15:40 +0100

Refresh of temp

---

diff --git a/src/hid/common/draw_helpers.c b/src/hid/common/draw_helpers.c
index 577a09b..ded1bc8 100644
--- a/src/hid/common/draw_helpers.c
+++ b/src/hid/common/draw_helpers.c
@@ -79,7 +79,7 @@ void common_fill_pcb_polygon (hidGC gc, PolygonType *poly,
       PLINE *pl;
 
       for (pl = poly->NoHoles; pl != NULL; pl = pl->next)
-        thindraw_contour (gc, pl);
+        fill_contour (gc, pl);
     }
 
   /* Draw other parts of the polygon if fullpoly flag is set */
diff --git a/src/polygon.c b/src/polygon.c
index f5e6b79..0c8c0cb 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -1598,7 +1598,7 @@ void
 NoHolesPolygonDicer (PolygonTypePtr p, const BoxType * clip,
                      void (*emit) (PLINE *, void *), void *user_data)
 {
-  POLYAREA *save, *ans;
+  POLYAREA *save, *ans, *cur, *next;
 
   ans = save = poly_Create ();
   /* copy the main poly only */
@@ -1617,8 +1617,18 @@ NoHolesPolygonDicer (PolygonTypePtr p, const BoxType * clip,
     }
   if (!save)
     return;
-  /* now dice it up */
-  r_NoHolesPolygonDicer (save, emit, user_data);
+  /* Now dice it up.
+   * NB: Could be more than one piece (because of the clip above)
+   */
+  cur = save;
+  do
+    {
+      next = cur->f;
+      cur->f = cur->b = cur; /* Detach this polygon piece */
+      r_NoHolesPolygonDicer (cur, emit, user_data);
+      /* NB: The POLYAREA was freed by its use in the recursive dicer */
+    }
+  while ((cur = next) != save);
 }
 
 /* make a polygon split into multiple parts into multiple polygons */
