Bottom: cf3945762ae7656f74d823af7746002b238077e1
Top:    732ab08ff48903715f93018c340ad02b85402f89
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-24 11:12:06 +0000

Refresh of fix

---

diff --git a/src/action.c b/src/action.c
index 7a9c3f0..8e01180 100644
--- a/src/action.c
+++ b/src/action.c
@@ -2362,18 +2362,18 @@ ActionConnection (int argc, char **argv, int x, int y)
 	  }
 
 	case F_ResetLinesAndPolygons:
-	  ResetFoundLinesAndPolygons (true);
+	  if (ResetFoundLinesAndPolygons (true))
+	    IncrementUndoSerialNumber ();
 	  break;
 
 	case F_ResetPinsViasAndPads:
-	  ResetFoundPinsViasAndPads (true);
+	  if (ResetFoundPinsViasAndPads (true))
+	    IncrementUndoSerialNumber ();
 	  break;
 
 	case F_Reset:
-	  SaveUndoSerialNumber ();
-	  ResetFoundPinsViasAndPads (true);
-	  RestoreUndoSerialNumber ();
-	  ResetFoundLinesAndPolygons (true);
+	  if (ResetConnections (true))
+	    IncrementUndoSerialNumber ();
 	  break;
 	}
       RestoreCrosshair (true);
@@ -2786,10 +2786,8 @@ ActionDisplay (int argc, char **argv, int childX, int childY)
 	  TOGGLE_FLAG (AUTODRCFLAG, PCB);
 	  if (TEST_FLAG (AUTODRCFLAG, PCB) && Settings.Mode == LINE_MODE)
 	    {
-	      SaveUndoSerialNumber ();
-	      ResetFoundPinsViasAndPads (true);
-	      RestoreUndoSerialNumber ();
-	      ResetFoundLinesAndPolygons (true);
+	      if (ResetConnections (true))
+		IncrementUndoSerialNumber ();
 	      if (Crosshair.AttachedLine.State != STATE_FIRST)
 		LookupConnection (Crosshair.AttachedLine.Point1.X,
 				  Crosshair.AttachedLine.Point1.Y, true, 1,
diff --git a/src/autoroute.c b/src/autoroute.c
index 9ccab97..976ef09 100644
--- a/src/autoroute.c
+++ b/src/autoroute.c
@@ -985,8 +985,7 @@ CreateRouteData ()
    * this saves on searching the trees to find the nets
    */
   /* use the DRCFLAG to mark objects as they are entered */
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
+  ResetConnections (false);
   Nets = CollectSubnets (false);
   {
     routebox_t *last_net = NULL;
diff --git a/src/find.c b/src/find.c
index 3176357..519d0ba 100644
--- a/src/find.c
+++ b/src/find.c
@@ -345,7 +345,6 @@ static void PrintPinConnections (FILE *, bool);
 static bool PrintAndSelectUnusedPinsAndPadsOfElement (ElementTypePtr,
                                                          FILE *);
 static void DrawNewConnections (void);
-static void ResetConnections (bool);
 static void DumpList (void);
 static void LocateError (LocationType *, LocationType *);
 static void BuildObjectList (int *, long int **, int **);
@@ -3418,9 +3417,7 @@ LookupUnusedPins (FILE * FP)
 {
   /* reset all currently marked connections */
   User = true;
-  SaveUndoSerialNumber ();
   ResetConnections (true);
-  RestoreUndoSerialNumber ();
   InitConnectionLookup ();
 
   ELEMENT_LOOP (PCB->Data);
@@ -3444,12 +3441,11 @@ LookupUnusedPins (FILE * FP)
 /* ---------------------------------------------------------------------------
  * resets all used flags of pins and vias
  */
-void
+bool
 ResetFoundPinsViasAndPads (bool AndDraw)
 {
   bool change = false;
 
-
   VIA_LOOP (PCB->Data);
   {
     if (TEST_FLAG (TheFlag, via))
@@ -3497,22 +3493,19 @@ ResetFoundPinsViasAndPads (bool AndDraw)
     {
       SetChangedFlag (true);
       if (AndDraw)
-        {
-          IncrementUndoSerialNumber ();
-          Draw ();
-        }
+        Draw ();
     }
+  return change;
 }
 
 /* ---------------------------------------------------------------------------
  * resets all used flags of LOs
  */
-void
+bool
 ResetFoundLinesAndPolygons (bool AndDraw)
 {
   bool change = false;
 
-
   RAT_LOOP (PCB->Data);
   {
     if (TEST_FLAG (TheFlag, line))
@@ -3569,25 +3562,23 @@ ResetFoundLinesAndPolygons (bool AndDraw)
     {
       SetChangedFlag (true);
       if (AndDraw)
-        {
-          IncrementUndoSerialNumber ();
-          Draw ();
-        }
+        Draw ();
     }
+  return change;
 }
 
 /* ---------------------------------------------------------------------------
  * resets all found connections
  */
-static void
+bool
 ResetConnections (bool AndDraw)
 {
-  if (AndDraw)
-    SaveUndoSerialNumber ();
-  ResetFoundPinsViasAndPads (AndDraw);
-  if (AndDraw)
-    RestoreUndoSerialNumber ();
-  ResetFoundLinesAndPolygons (AndDraw);
+  bool change = false;
+
+  change = ResetFoundPinsViasAndPads  (AndDraw) || change;
+  change = ResetFoundLinesAndPolygons (AndDraw) || change;
+
+  return change;
 }
 
 /*----------------------------------------------------------------------------
@@ -3934,7 +3925,8 @@ DRCAll (void)
 
   TheFlag = FOUNDFLAG | DRCFLAG | SELECTEDFLAG;
 
-  ResetConnections (true);
+  if (ResetConnections (true))
+    IncrementUndoSerialNumber ();
 
   User = false;
 
diff --git a/src/find.h b/src/find.h
index 5b04980..892c7ef 100644
--- a/src/find.h
+++ b/src/find.h
@@ -54,8 +54,9 @@ void LookupElementConnections (ElementTypePtr, FILE *);
 void LookupConnectionsToAllElements (FILE *);
 void LookupConnection (LocationType, LocationType, bool, BDimension, int);
 void LookupUnusedPins (FILE *);
-void ResetFoundLinesAndPolygons (bool);
-void ResetFoundPinsViasAndPads (bool);
+bool ResetFoundLinesAndPolygons (bool);
+bool ResetFoundPinsViasAndPads (bool);
+bool ResetConnections (bool);
 void InitConnectionLookup (void);
 void InitComponentLookup (void);
 void InitLayoutLookup (void);
diff --git a/src/hid/gtk/gui-netlist-window.c b/src/hid/gtk/gui-netlist-window.c
index cee63da..96315b4 100644
--- a/src/hid/gtk/gui-netlist-window.c
+++ b/src/hid/gtk/gui-netlist-window.c
@@ -516,17 +516,16 @@ netlist_select_cb (GtkWidget * widget, gpointer data)
     node_selected_net = NULL;
 
   InitConnectionLookup ();
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
-  SaveUndoSerialNumber ();
+  ResetConnections (false);
 
+  SaveUndoSerialNumber ();
   for (i = selected_net->EntryN, entry = selected_net->Entry; i; i--, entry++)
     if (SeekPad (entry, &conn, false))
       RatFindHook (conn.type, conn.ptr1, conn.ptr2, conn.ptr2, true, true);
   RestoreUndoSerialNumber ();
+
   SelectConnection (select_flag);
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
+  ResetConnections (false);
   FreeConnectionLookupMemory ();
   IncrementUndoSerialNumber ();
   Draw ();
diff --git a/src/hid/lesstif/netlist.c b/src/hid/lesstif/netlist.c
index 3438b33..20a0a51 100644
--- a/src/hid/lesstif/netlist.c
+++ b/src/hid/lesstif/netlist.c
@@ -136,17 +136,16 @@ nbcb_select_common (LibraryMenuTypePtr net, int pos, int select_flag)
   int i;
 
   InitConnectionLookup ();
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
-  SaveUndoSerialNumber ();
+  ResetConnections (false);
 
+  SaveUndoSerialNumber ();
   for (i = net->EntryN, entry = net->Entry; i; i--, entry++)
     if (SeekPad (entry, &conn, false))
       RatFindHook (conn.type, conn.ptr1, conn.ptr2, conn.ptr2, true, true);
   RestoreUndoSerialNumber ();
+
   SelectConnection (select_flag);
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
+  ResetConncetions (false, false);
   FreeConnectionLookupMemory ();
   IncrementUndoSerialNumber ();
   Draw ();
diff --git a/src/rats.c b/src/rats.c
index 5fe86cd..3e9d6ee 100644
--- a/src/rats.c
+++ b/src/rats.c
@@ -463,8 +463,7 @@ GatherSubnets (NetListTypePtr Netl, bool NoWarn, bool AndRats)
   for (m = 0; Netl->NetN > 0 && m < Netl->NetN; m++)
     {
       a = &Netl->Net[m];
-      ResetFoundPinsViasAndPads (false);
-      ResetFoundLinesAndPolygons (false);
+      ResetConnections (false);
       RatFindHook (a->Connection[0].type, a->Connection[0].ptr1,
 		   a->Connection[0].ptr2, a->Connection[0].ptr2, false,
 		   AndRats);
@@ -545,8 +544,7 @@ GatherSubnets (NetListTypePtr Netl, bool NoWarn, bool AndRats)
       if (!NoWarn)
 	Warned |= CheckShorts (a->Connection[0].menu);
     }
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
+  ResetConnections (false);
   return (Warned);
 }
 
diff --git a/src/report.c b/src/report.c
index a9c429d..79b7ced 100644
--- a/src/report.c
+++ b/src/report.c
@@ -688,11 +688,8 @@ ReportAllNetLengths (int argc, char **argv, int x, int y)
       continue;
 
     got_one:
-      SaveUndoSerialNumber ();
-      ResetFoundPinsViasAndPads (true);
-      RestoreUndoSerialNumber ();
-      ResetFoundLinesAndPolygons (true);
-      RestoreUndoSerialNumber ();
+      ResetConnections (true);
+      /* FIXME: Need a serial number increment?? */
       length = XYtoNetLength (x, y, &found);
 
       gui->log("Net %s length %.*f %s\n", netname, prec, length*scale, units_name);
@@ -707,11 +704,8 @@ ReportNetLength (int argc, char **argv, int x, int y)
   char *netname = 0;
   int found = 0;
 
-  SaveUndoSerialNumber ();
-  ResetFoundPinsViasAndPads (true);
-  RestoreUndoSerialNumber ();
-  ResetFoundLinesAndPolygons (true);
-  RestoreUndoSerialNumber ();
+  ResetConnections (true);
+  /* FIXME: Need a serial number increment?? */
   gui->get_coords ("Click on a connection", &x, &y);
 
   length = XYtoNetLength (x, y, &found);
diff --git a/src/set.c b/src/set.c
index 7a41f73..c5d34eb 100644
--- a/src/set.c
+++ b/src/set.c
@@ -292,11 +292,8 @@ SetMode (int Mode)
       Crosshair.AttachedLine.State = STATE_FIRST;
       if (Mode == LINE_MODE && TEST_FLAG (AUTODRCFLAG, PCB))
 	{
-	  SaveUndoSerialNumber ();
-	  ResetFoundPinsViasAndPads (true);
-	  RestoreUndoSerialNumber ();
-	  ResetFoundLinesAndPolygons (true);
-	  IncrementUndoSerialNumber ();
+	  if (ResetConnections (true))
+	    IncrementUndoSerialNumber ();
 	}
     }
 
diff --git a/src/toporouter.c b/src/toporouter.c
index 88c1325..bfd494a 100644
--- a/src/toporouter.c
+++ b/src/toporouter.c
@@ -2799,8 +2799,7 @@ void
 import_clusters(toporouter_t *r)
 {
   NetListListType nets;
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
+  ResetConnections (false);
   nets = CollectSubnets(false);
   NETLIST_LOOP(&nets);
   {
