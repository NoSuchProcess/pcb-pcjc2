Bottom: dddd30816304d3f21909efd33a68e20957706ab4
Top:    722ef0ca779f199cfe7be2ef23e6ab2b1c1768eb
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-04 23:12:01 +0000

Refresh of draw-polygons-in-a-more-intell

---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index b2e0e0d..24131d4 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -852,7 +852,7 @@ do_hole (const BoxType *b, void *cl)
 }
 
 static bool
-polygon_get_contains_user_holes (PolygonType *polygon)
+polygon_contains_user_holes (PolygonType *polygon)
 {
   return (polygon->HoleIndexN > 0);
 }
@@ -888,7 +888,7 @@ hidgl_fill_pcb_polygon (PolygonType *poly, const BoxType *clip_box /*, bool forc
   /* Polygon has holes.. does it have any user-drawn holes?
    * If so, it must be masked with a _new_ stencil bit.
    */
-  use_new_stencil = force_new_stencil | polygon_get_contains_user_holes (poly);
+  use_new_stencil = force_new_stencil | polygon_contains_user_holes (poly);
 
   if (use_new_stencil)
     {
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 3f02ff7..cd6f188 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1278,11 +1278,28 @@ DrawPlainPolygon (LayerTypePtr Layer, PolygonTypePtr Polygon, const BoxType *dra
 }
 
 static int
-poly_callback (const BoxType * b, void *cl)
+poly_callback_no_clear (const BoxType * b, void *cl)
 {
   struct pin_info *i = (struct pin_info *) cl;
+  PolygonType *polygon = (PolygonType *) b;
 
-  DrawPlainPolygon (i->Layer, (PolygonTypePtr) b, i->drawn_area);
+  if (TEST_FLAG (CLEARPOLYFLAG, polygon))
+    return 0;
+
+  DrawPlainPolygon (i->Layer, polygon, i->drawn_area);
+  return 1;
+}
+
+static int
+poly_callback_clearing (const BoxType * b, void *cl)
+{
+  struct pin_info *i = (struct pin_info *) cl;
+  PolygonType *polygon = (PolygonType *) b;
+
+  if (!TEST_FLAG (CLEARPOLYFLAG, polygon))
+    return 0;
+
+  DrawPlainPolygon (i->Layer, polygon, i->drawn_area);
   return 1;
 }
 
@@ -1486,7 +1503,8 @@ DrawLayerGroup (int group, const BoxType * screen)
       if (Layer->PolygonN) {
         info.Layer = Layer;
         info.drawn_area = screen;
-        r_search (Layer->polygon_tree, screen, NULL, poly_callback, &info);
+        r_search (Layer->polygon_tree, screen, NULL, poly_callback_no_clear, &info);
+        r_search (Layer->polygon_tree, screen, NULL, poly_callback_clearing, &info);
 
         /* HACK: Subcomposite polygons separately from other layer primitives */
         /* Reset the compositing */
