Bottom: d10bb2001450134db25e8e8d526aecad5d9cbaa5
Top:    2b4fdcf747770f59cfda9bf8e8bfb02be08df5ac
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-11-22 01:17:33 +0000

Refresh of test-an-idea

---

diff --git a/src/draw.c b/src/draw.c
index c6f1c60..737682a 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -81,52 +81,30 @@ static bool doing_assy = false;
 static void DrawEverything (const BoxType *);
 static void DrawPPV (int group, const BoxType *);
 static void AddPart (void *);
-static void SetPVColor (PinType *, int);
 static void DrawEMark (ElementType *, Coord, Coord, bool);
 static void DrawRats (const BoxType *);
 
-/*--------------------------------------------------------------------------------------
- * setup color for pin or via
- */
 static void
-SetPVColor (PinType *Pin, int Type)
+set_object_color (AnyObjectType *obj,
+                  char *warn_color, char *selected_color,
+                  char *found_color, char *normal_color)
 {
   char *color;
 
-  if (Type == VIA_TYPE)
-    {
-      if (!doing_pinout
-	  && TEST_FLAG (WARNFLAG | SELECTEDFLAG | FOUNDFLAG, Pin))
-	{
-	  if (TEST_FLAG (WARNFLAG, Pin))
-	    color = PCB->WarnColor;
-	  else if (TEST_FLAG (SELECTEDFLAG, Pin))
-	    color = PCB->ViaSelectedColor;
-	  else
-	    color = PCB->ConnectedColor;
-	}
-      else
-	color = PCB->ViaColor;
-    }
-  else
-    {
-      if (!doing_pinout
-	  && TEST_FLAG (WARNFLAG | SELECTEDFLAG | FOUNDFLAG, Pin))
-	{
-	  if (TEST_FLAG (WARNFLAG, Pin))
-	    color = PCB->WarnColor;
-	  else if (TEST_FLAG (SELECTEDFLAG, Pin))
-	    color = PCB->PinSelectedColor;
-	  else
-	    color = PCB->ConnectedColor;
-	}
-      else
-	color = PCB->PinColor;
-    }
+       if (warn_color     != NULL && TEST_FLAG (WARNFLAG,     obj)) color = warn_color;
+  else if (selected_color != NULL && TEST_FLAG (SELECTEDFLAG, obj)) color = selected_color;
+  else if (found_color    != NULL && TEST_FLAG (FOUNDFLAG,    obj)) color = found_color;
+  else                                                              color = normal_color;
 
   gui->graphics->set_color (Output.fgGC, color);
 }
 
+static void
+set_layer_object_color (Layer *layer, AnyObjectType *obj)
+{
+  set_object_color (obj, NULL, layer->SelectedColor, PCB->ConnectedColor, layer->Color);
+}
+
 /*---------------------------------------------------------------------------
  *  Adds the update rect to the update region
  */
@@ -220,7 +198,13 @@ _draw_pv (PinType *pv, bool draw_hole)
 static void
 draw_pin (PinType *pin, bool draw_hole)
 {
-  SetPVColor (pin, PIN_TYPE);
+  if (doing_pinout)
+   gui->graphics->set_color (Output.fgGC, PCB->PinColor);
+  else
+    set_object_color ((AnyObjectType *)pin,
+                      PCB->WarnColor, PCB->PinSelectedColor,
+                      PCB->ConnectedColor, PCB->PinColor);
+
   _draw_pv (pin, draw_hole);
 }
 
@@ -234,7 +218,13 @@ pin_callback (const BoxType * b, void *cl)
 static void
 draw_via (PinType *via, bool draw_hole)
 {
-  SetPVColor (via, VIA_TYPE);
+  if (doing_pinout)
+   gui->graphics->set_color (Output.fgGC, PCB->ViaColor);
+  else
+    set_object_color ((AnyObjectType *)via,
+                      PCB->WarnColor, PCB->ViaSelectedColor,
+                      PCB->ConnectedColor, PCB->ViaColor);
+
   _draw_pv (via, draw_hole);
 }
 
@@ -305,19 +295,12 @@ draw_pad (PadType *pad)
 {
   if (doing_pinout)
    gui->graphics->set_color (Output.fgGC, PCB->PinColor);
-  else if (TEST_FLAG (WARNFLAG | SELECTEDFLAG | FOUNDFLAG, pad))
-   {
-     if (TEST_FLAG (WARNFLAG, pad))
-       gui->graphics->set_color (Output.fgGC, PCB->WarnColor);
-     else if (TEST_FLAG (SELECTEDFLAG, pad))
-       gui->graphics->set_color (Output.fgGC, PCB->PinSelectedColor);
-     else
-       gui->graphics->set_color (Output.fgGC, PCB->ConnectedColor);
-   }
-  else if (FRONT (pad))
-   gui->graphics->set_color (Output.fgGC, PCB->PinColor);
   else
-   gui->graphics->set_color (Output.fgGC, PCB->InvisibleObjectsColor);
+    set_object_color ((AnyObjectType *)pad,
+                      PCB->WarnColor,
+                      PCB->PinSelectedColor,
+                      PCB->ConnectedColor,
+                      FRONT (pad) ? PCB->PinColor : PCB->InvisibleObjectsColor);
 
   _draw_pad (Output.fgGC, pad, false, false);
 
@@ -419,12 +402,9 @@ hole_callback (const BoxType * b, void *cl)
 
   if (TEST_FLAG (HOLEFLAG, pv))
     {
-      if (TEST_FLAG (WARNFLAG, pv))
-        gui->graphics->set_color (Output.fgGC, PCB->WarnColor);
-      else if (TEST_FLAG (SELECTEDFLAG, pv))
-        gui->graphics->set_color (Output.fgGC, PCB->ViaSelectedColor);
-      else
-        gui->graphics->set_color (Output.fgGC, Settings.BlackColor);
+      set_object_color ((AnyObjectType *obj),
+                        PCB->WarnColor, PCB->ViaSelectedColor,
+                        NULL, Settings.BlackColor);
 
       gui->graphics->set_line_cap (Output.fgGC, Round_Cap);
       gui->graphics->set_line_width (Output.fgGC, 0);
@@ -447,25 +427,15 @@ DrawHoles (bool draw_plated, bool draw_unplated, const BoxType *drawn_area)
   r_search (PCB->Data->via_tree, drawn_area, NULL, hole_callback, &plated);
 }
 
-static void
-draw_line (LayerType *layer, LineType *line)
-{
-  if (TEST_FLAG (SELECTEDFLAG | FOUNDFLAG, line))
-    {
-      if (TEST_FLAG (SELECTEDFLAG, line))
-        gui->graphics->set_color (Output.fgGC, layer->SelectedColor);
-      else
-        gui->graphics->set_color (Output.fgGC, PCB->ConnectedColor);
-    }
-  else
-    gui->graphics->set_color (Output.fgGC, layer->Color);
-  gui->graphics->draw_pcb_line (Output.fgGC, line);
-}
-
 static int
 line_callback (const BoxType * b, void *cl)
 {
-  draw_line ((LayerType *) cl, (LineType *) b);
+  LayerType *layer = (LayerType *) cl;
+  LineType *line = (LineType *) b;
+
+  set_layer_object_color (layer, (AnyObjectType *) line);
+  gui->graphics->draw_pcb_line (Output.fgGC, line);
+
   return 1;
 }
 
@@ -474,15 +444,8 @@ rat_callback (const BoxType * b, void *cl)
 {
   RatType *rat = (RatType *)b;
 
-  if (TEST_FLAG (SELECTEDFLAG | FOUNDFLAG, rat))
-    {
-      if (TEST_FLAG (SELECTEDFLAG, rat))
-        gui->graphics->set_color (Output.fgGC, PCB->RatSelectedColor);
-      else
-        gui->graphics->set_color (Output.fgGC, PCB->ConnectedColor);
-    }
-  else
-    gui->graphics->set_color (Output.fgGC, PCB->RatColor);
+  set_object_color ((AnyObjectType *) rat, NULL, PCB->RatSelectedColor,
+                    PCB->ConnectedColor, PCB->RatColor);
 
   if (Settings.RatThickness < 100)
     rat->Thickness = pixel_slop * Settings.RatThickness;
@@ -503,26 +466,15 @@ rat_callback (const BoxType * b, void *cl)
   return 1;
 }
 
-static void
-draw_arc (LayerType *layer, ArcType *arc)
+static int
+arc_callback (const BoxType * b, void *cl)
 {
-  if (TEST_FLAG (SELECTEDFLAG | FOUNDFLAG, arc))
-    {
-      if (TEST_FLAG (SELECTEDFLAG, arc))
-        gui->graphics->set_color (Output.fgGC, layer->SelectedColor);
-      else
-        gui->graphics->set_color (Output.fgGC, PCB->ConnectedColor);
-    }
-  else
-    gui->graphics->set_color (Output.fgGC, layer->Color);
+  LayerType *layer = (LayerType *) cl;
+  ArcType *arc =  (ArcType *) b;
 
+  set_layer_object_color (layer, (AnyObjectType *) arc);
   gui->graphics->draw_pcb_arc (Output.fgGC, arc);
-}
 
-static int
-arc_callback (const BoxType * b, void *cl)
-{
-  draw_arc ((LayerType *) cl, (ArcType *) b);
   return 1;
 }
 
@@ -848,13 +800,7 @@ poly_callback (const BoxType * b, void *cl)
   if (!polygon->Clipped)
     return 0;
 
-  if (TEST_FLAG (SELECTEDFLAG, polygon))
-    color = i->layer->SelectedColor;
-  else if (TEST_FLAG (FOUNDFLAG, polygon))
-    color = PCB->ConnectedColor;
-  else
-    color = i->layer->Color;
-  gui->graphics->set_color (Output.fgGC, color);
+  set_layer_object_color (layer, (AnyObjectType *) polygon);
 
   if (gui->graphics->thindraw_pcb_polygon != NULL &&
       (TEST_FLAG (THINDRAWFLAG, PCB) ||
