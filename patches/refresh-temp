Bottom: eaa8d1abb6be77a485773d8844020ce56d3e9119
Top:    d8848a4ce318259509ddd1efbf021092244144c5
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-11-15 01:25:30 +0000

Refresh of demo-of-exporter-specific-expo

---

diff --git a/src/hid/gerber/gerber.c b/src/hid/gerber/gerber.c
index 04390e0..4e57eab 100644
--- a/src/hid/gerber/gerber.c
+++ b/src/hid/gerber/gerber.c
@@ -546,7 +546,7 @@ hole_callback (const BoxType * b, void *cl)
       (plated == 1 &&  TEST_FLAG (HOLEFLAG, pin)))
     return 1;
 
-  gui->fill_circle (Output.bgGC, pin->X, pin->Y, pin->DrillingHole / 2);
+  gui->graphics->fill_circle (Output.bgGC, pin->X, pin->Y, pin->DrillingHole / 2);
   return 1;
 }
 
@@ -570,12 +570,12 @@ gerber_expose (HID * hid, BoxType *drawn_area, void *item)
   hidGC savepm = Output.pmGC;
 
   gui = hid;
-  Output.fgGC = gui->make_gc ();
-  Output.bgGC = gui->make_gc ();
-  Output.pmGC = gui->make_gc ();
+  Output.fgGC = gui->graphics->make_gc ();
+  Output.bgGC = gui->graphics->make_gc ();
+  Output.pmGC = gui->graphics->make_gc ();
 
-  hid->set_color (Output.pmGC, "erase");
-  hid->set_color (Output.bgGC, "drill");
+  hid->graphics->set_color (Output.pmGC, "erase");
+  hid->graphics->set_color (Output.bgGC, "drill");
 
   memset (print_group, 0, sizeof (print_group));
   for (i = 0; i < max_copper_layer; i++)
@@ -625,11 +625,11 @@ gerber_expose (HID * hid, BoxType *drawn_area, void *item)
     DrawPaste (SOLDER_LAYER, drawn_area);
 
   if (set_layer ("fab", SL (FAB, 0), 0))
-    PrintFab ();
+    PrintFab (Output.fgGC);
 
-  gui->destroy_gc (Output.fgGC);
-  gui->destroy_gc (Output.bgGC);
-  gui->destroy_gc (Output.pmGC);
+  gui->graphics->destroy_gc (Output.fgGC);
+  gui->graphics->destroy_gc (Output.bgGC);
+  gui->graphics->destroy_gc (Output.pmGC);
   gui = old_gui;
   Output.fgGC = savefg;
   Output.bgGC = savebg;
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index aac2709..07ab004 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -9,6 +9,9 @@
 #include "../hidint.h"
 #include "gui.h"
 #include "gui-pinout-preview.h"
+#include "draw.h"
+#include "draw_funcs.h"
+#include "rtree.h"
 
 /* The Linux OpenGL ABI 1.0 spec requires that we define
  * GL_GLEXT_PROTOTYPES before including gl.h or glx.h for extensions
@@ -870,12 +873,12 @@ ghid_expose (const BoxType *drawn_area)
   HID *old_gui = gui;
 
   gui = &ghid_hid;
-  Output.fgGC = gui->make_gc ();
-  Output.bgGC = gui->make_gc ();
-  Output.pmGC = gui->make_gc ();
+  Output.fgGC = gui->graphics->make_gc ();
+  Output.bgGC = gui->graphics->make_gc ();
+  Output.pmGC = gui->graphics->make_gc ();
 
-  gui->set_color (Output.pmGC, "erase");
-  gui->set_color (Output.bgGC, "drill");
+  gui->graphics->set_color (Output.pmGC, "erase");
+  gui->graphics->set_color (Output.bgGC, "drill");
 
   PCB->Data->SILKLAYER.Color = PCB->ElementColor;
   PCB->Data->BACKSILKLAYER.Color = PCB->InvisibleObjectsColor;
@@ -981,9 +984,9 @@ ghid_expose (const BoxType *drawn_area)
       gui->end_layer ();
     }
 
-  gui->destroy_gc (Output.fgGC);
-  gui->destroy_gc (Output.bgGC);
-  gui->destroy_gc (Output.pmGC);
+  gui->graphics->destroy_gc (Output.fgGC);
+  gui->graphics->destroy_gc (Output.bgGC);
+  gui->graphics->destroy_gc (Output.pmGC);
   gui = old_gui;
 }
 
diff --git a/src/hid/ps/ps.c b/src/hid/ps/ps.c
index 25bd3e5..1dad937 100644
--- a/src/hid/ps/ps.c
+++ b/src/hid/ps/ps.c
@@ -572,12 +572,12 @@ ps_expose (void)
   bool paste_empty;
 
   gui = &ps_hid;
-  Output.fgGC = gui->make_gc ();
-  Output.bgGC = gui->make_gc ();
-  Output.pmGC = gui->make_gc ();
+  Output.fgGC = gui->graphics->make_gc ();
+  Output.bgGC = gui->graphics->make_gc ();
+  Output.pmGC = gui->graphics->make_gc ();
 
-  gui->set_color (Output.pmGC, "erase");
-  gui->set_color (Output.bgGC, "drill");
+  gui->graphics->set_color (Output.pmGC, "erase");
+  gui->graphics->set_color (Output.bgGC, "drill");
 
   PCB->Data->SILKLAYER.Color = PCB->ElementColor;
   PCB->Data->BACKSILKLAYER.Color = PCB->InvisibleObjectsColor;
@@ -634,9 +634,9 @@ ps_expose (void)
   if (set_layer ("fab", SL (FAB, 0), 0))
     PrintFab (Output.fgGC);
 
-  gui->destroy_gc (Output.fgGC);
-  gui->destroy_gc (Output.bgGC);
-  gui->destroy_gc (Output.pmGC);
+  gui->graphics->destroy_gc (Output.fgGC);
+  gui->graphics->destroy_gc (Output.bgGC);
+  gui->graphics->destroy_gc (Output.pmGC);
   gui = old_gui;
 }
