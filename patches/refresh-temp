Bottom: 8f14924185df74d27539e1b92df308a78c22beb3
Top:    ab7178ee766839cef4bbd59a5bf97cf7bea42e1c
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-02-23 22:41:05 +0000

Refresh of work-in-progress-on-subcomposi

---

diff --git a/src/draw.c b/src/draw.c
index 50809e0..ea3c301 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -512,6 +512,7 @@ DrawEverything (BoxTypePtr drawn_area)
       SWAP_IDENT = 0;
       DrawMask (drawn_area);
       SWAP_IDENT = save_swap;
+      gui->set_layer (NULL, SL (FINISHED, 0), 0);
     }
   if (gui->set_layer ("soldermask", SL (MASK, BOTTOM), 0))
     {
@@ -519,12 +520,21 @@ DrawEverything (BoxTypePtr drawn_area)
       SWAP_IDENT = 1;
       DrawMask (drawn_area);
       SWAP_IDENT = save_swap;
+      gui->set_layer (NULL, SL (FINISHED, 0), 0);
     }
   /* Draw top silkscreen */
   if (gui->set_layer ("topsilk", SL (SILK, TOP), 0))
-    DrawSilk (0, COMPONENT_LAYER, drawn_area);
+    {
+      DrawSilk (0, COMPONENT_LAYER, drawn_area);
+      gui->set_layer (NULL, SL (FINISHED, 0), 0);
+    }
+
   if (gui->set_layer ("bottomsilk", SL (SILK, BOTTOM), 0))
-    DrawSilk (1, SOLDER_LAYER, drawn_area);
+    {
+      DrawSilk (1, SOLDER_LAYER, drawn_area);
+      gui->set_layer (NULL, SL (FINISHED, 0), 0);
+    }
+
   if (gui->gui)
     {
       /* Draw element Marks */
@@ -567,19 +577,30 @@ DrawEverything (BoxTypePtr drawn_area)
 		DrawPadLowLevel (Output.fgGC, pad, False, False);
 	  }
 	  ENDALL_LOOP;
+	  gui->set_layer (NULL, SL (FINISHED, 0), 0);
 	}
     }
 
   doing_assy = True;
   if (gui->set_layer ("topassembly", SL (ASSY, TOP), 0))
-    PrintAssembly (drawn_area, component, 0);
+    {
+      PrintAssembly (drawn_area, component, 0);
+      gui->set_layer (NULL, SL (FINISHED, 0), 0);
+    }
 
   if (gui->set_layer ("bottomassembly", SL (ASSY, BOTTOM), 0))
-    PrintAssembly (drawn_area, solder, 1);
+    {
+      PrintAssembly (drawn_area, solder, 1);
+      gui->set_layer (NULL, SL (FINISHED, 0), 0);
+    }
+
   doing_assy = False;
 
   if (gui->set_layer ("fab", SL (FAB, 0), 0))
-    PrintFab ();
+    {
+      PrintFab ();
+      gui->set_layer (NULL, SL (FINISHED, 0), 0);
+    }
 }
 
 static void
@@ -973,8 +994,6 @@ DrawLayerGroup (int group, const BoxType * screen)
           gui->fill_rect (Output.fgGC, 0, 0, PCB->MaxWidth, PCB->MaxHeight);
           gui->use_mask (HID_MASK_OFF);
 #endif
-//          /* Reset the compositing HACK */
-//          gui->set_layer (0, group, 0);
 	}
     }
   if (n_entries > 1)
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 9040e44..292419b 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -585,6 +585,8 @@ ghid_set_layer (const char *name, int group, int empty)
   /* Flush out any existing geoemtry to be rendered */
   hidgl_flush_triangles (&buffer);
 
+  glEnable (GL_STENCIL_TEST);                // Enable Stencil test
+  glStencilOp (GL_KEEP, GL_KEEP, GL_REPLACE); // Stencil pass => replace stencil value (with 1)
   /* Reset stencil buffer so we can paint anywhere */
   hidgl_return_stencil_bit (stencil_bit);               // Relinquish any bitplane we previously used
   if (SL_TYPE (idx) != SL_FINISHED)
