Bottom: b8356132b77cd02a344f486043bc0455feb403c0
Top:    d77332617d8d227c33e94719ad39a44e8bfe974e
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-10-19 00:27:43 +0100

Refresh of silly-space-navigator-interfac

---

diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index 8cb2ffd..64c5e26 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -46,6 +46,7 @@
 #include "misc.h"
 #include "set.h"
 #include "snavi.h"
+#include "gui-trackball.h"
 
 #ifdef HAVE_LIBDMALLOC
 #include <dmalloc.h>
@@ -1218,6 +1219,8 @@ void ndof_pan_cb (int dx, int dy, int dz, gpointer data)
 
 void ndof_roll_cb (int dx, int dy, int dz, gpointer data)
 {
+  ghid_trackball_external_rotate (GHID_TRACKBALL (gport->trackball),
+                                  dy / 100., dx / 100., dz / 100.);
 }
 
 void ndof_done_cb (gpointer data)
diff --git a/src/hid/gtk/gui-top-window.c b/src/hid/gtk/gui-top-window.c
index 23cca2d..0591900 100644
--- a/src/hid/gtk/gui-top-window.c
+++ b/src/hid/gtk/gui-top-window.c
@@ -2267,6 +2267,7 @@ ghid_build_pcb_top_window (void)
   make_layer_buttons(vbox, port);
 
   trackball = ghid_trackball_new ();
+  gport->trackball = trackball;
   g_signal_connect (trackball, "rotation-changed",
                     G_CALLBACK (ghid_port_rotate), NULL);
   gtk_box_pack_start (GTK_BOX (vbox_left), trackball, FALSE, FALSE, 0);
diff --git a/src/hid/gtk/gui-trackball.c b/src/hid/gtk/gui-trackball.c
index cd8ec44..a115578 100644
--- a/src/hid/gtk/gui-trackball.c
+++ b/src/hid/gtk/gui-trackball.c
@@ -90,6 +90,38 @@ button_release_cb (GtkWidget *widget, GdkEventButton *ev, gpointer userdata)
 }
 
 
+void
+ghid_trackball_external_rotate (GhidTrackball *ball, float dx, float dy, float dz)
+{
+  float axis[3];
+  float quart[4];
+#if 0
+  float quart_accum[4];
+
+  axis[0] = 1.; axis[1] = 0.; axis[2] = 0.;
+  axis_to_quat (axis, dx, quart_accum);
+
+  axis[0] = 0.; axis[1] = 1.; axis[2] = 0.;
+  axis_to_quat (axis, dy, quart);
+  add_quats (quart, quart_accum, quart_accum);
+
+  axis[0] = 0.; axis[1] = 0.; axis[2] = 1.;
+  axis_to_quat (axis, dz, quart);
+  add_quats (quart, quart_accum, quart_accum);
+
+  add_quats (quart_accum, ball->quart1, ball->quart1);
+#endif
+
+  if (dx == 0. && dy == 0. && dz == 0.) return;
+
+  axis[0] = dx; axis[1] = dy; axis[2] = dz;
+  axis_to_quat (axis, sqrt (dx * dx + dy * dy + dz * dz), quart);
+  add_quats (quart, ball->quart1, ball->quart1);
+
+  g_signal_emit (ball, ghid_trackball_signals[ROTATION_CHANGED], 0, ball->quart1);
+}
+
+
 static gboolean
 motion_notify_cb (GtkWidget *widget, GdkEventMotion *ev, gpointer userdata)
 {
@@ -97,7 +129,6 @@ motion_notify_cb (GtkWidget *widget, GdkEventMotion *ev, gpointer userdata)
   double x1, y1;
   double x2, y2;
   float q[4];
-  float newq[4];
 
   if (!ball->dragging)
     return TRUE;
diff --git a/src/hid/gtk/gui-trackball.h b/src/hid/gtk/gui-trackball.h
index 3318695..fd83acf 100644
--- a/src/hid/gtk/gui-trackball.h
+++ b/src/hid/gtk/gui-trackball.h
@@ -61,6 +61,7 @@ struct _GhidTrackball
 
 GType ghid_trackball_get_type (void);
 
+void ghid_trackball_external_rotate (GhidTrackball *ball, float dx, float dy, float dz);
 GtkWidget *ghid_trackball_new (void);
 
 #endif /* __GHID_TRACKBALL_H__ */
diff --git a/src/hid/gtk/gui.h b/src/hid/gtk/gui.h
index f7149b0..41263b3 100644
--- a/src/hid/gtk/gui.h
+++ b/src/hid/gtk/gui.h
@@ -211,6 +211,7 @@ typedef struct
 {
   GtkWidget *top_window,	/* toplevel widget              */
    *drawing_area;		/* and its drawing area */
+  GtkWidget *trackball;
   GdkPixmap *pixmap, *mask;
   GdkDrawable *drawable;	/* Current drawable for drawing routines */
   gint width, height;
diff --git a/src/hid/gtk/snavi.c b/src/hid/gtk/snavi.c
index 63b6907..6dd1b5f 100644
--- a/src/hid/gtk/snavi.c
+++ b/src/hid/gtk/snavi.c
@@ -132,7 +132,7 @@ gboolean snavi_event (GIOChannel   *source,
                        axes[1] / 100.0, cb_userdata);
         update_roll_cb (axes[5] / 100.0,
                         axes[3] / 100.0,
-                        axes[2] / 100.0, cb_userdata);
+                        axes[4] / 100.0, cb_userdata);
         update_done_cb (cb_userdata);
 
         axes[0] = axes[1] = axes[2] = axes[3] = axes[4] = axes[5] = 0;
