Bottom: 91945f39119b5a61b5b9ecf7127af5f6531857be
Top:    df33cce5b44133ef76f0751db59a84b6cab4e114
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2015-01-11 17:55:14 +0000

Refresh of move-some-fields-from-the-hid

---

diff --git a/src/draw.c b/src/draw.c
index eed0d5b..a9b9eb1 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -176,10 +176,10 @@ _draw_pv_name (PinType *pv)
   text.Y = box.Y1;
   text.Direction = vert ? 1 : 0;
 
-  if (gui->gui)
+  if (gui->graphics->klass->gui)
     doing_pinout++;
   hid_draw_pcb_text (Output.fgGC, &text, 0);
-  if (gui->gui)
+  if (gui->graphics->klass->gui)
     doing_pinout--;
 }
 
@@ -320,7 +320,7 @@ pad_callback (const BoxType * b, void *cl)
 static void
 draw_element_name (ElementType *element)
 {
-  if ((TEST_FLAG (HIDENAMESFLAG, PCB) && gui->gui) ||
+  if ((TEST_FLAG (HIDENAMESFLAG, PCB) && gui->graphics->klass->gui) ||
       TEST_FLAG (HIDENAMEFLAG, element))
     return;
   if (doing_pinout || doing_assy)
@@ -591,11 +591,11 @@ DrawEverything (const BoxType *drawn_area)
         }
     }
 
-  if (TEST_FLAG (CHECKPLANESFLAG, PCB) && gui->gui)
+  if (TEST_FLAG (CHECKPLANESFLAG, PCB) && gui->graphics->klass->gui)
     return;
 
   /* Draw pins, pads, vias below silk */
-  if (gui->gui)
+  if (gui->graphics->klass->gui)
     DrawPPV (SWAP_IDENT ? bottom_group : top_group, drawn_area);
   else
     {
@@ -639,7 +639,7 @@ DrawEverything (const BoxType *drawn_area)
       gui->end_layer ();
     }
 
-  if (gui->gui)
+  if (gui->graphics->klass->gui)
     {
       /* Draw element Marks */
       if (PCB->PinOn)
@@ -740,7 +740,7 @@ DrawPPV (int group, const BoxType *drawn_area)
   int bottom_group = GetLayerGroupNumberBySide (BOTTOM_SIDE);
   int side;
 
-  if (PCB->PinOn || !gui->gui)
+  if (PCB->PinOn || !gui->graphics->klass->gui)
     {
       /* draw element pins */
       r_search (PCB->Data->pin_tree, drawn_area, NULL, pin_callback, NULL);
@@ -760,7 +760,7 @@ DrawPPV (int group, const BoxType *drawn_area)
     }
 
   /* draw vias */
-  if (PCB->ViaOn || !gui->gui)
+  if (PCB->ViaOn || !gui->graphics->klass->gui)
     {
       r_search (PCB->Data->via_tree, drawn_area, NULL, via_callback, NULL);
       r_search (PCB->Data->via_tree, drawn_area, NULL, hole_callback, NULL);
@@ -974,7 +974,7 @@ DrawLayer (LayerType *Layer, const BoxType *screen)
   /* draw the layer text on screen */
   r_search (Layer->text_tree, screen, NULL, text_callback, Layer);
 
-  /* We should check for gui->gui here, but it's kinda cool seeing the
+  /* We should check for gui->graphics->klass->gui here, but it's kinda cool seeing the
      auto-outline magically disappear when you first add something to
      the "outline" layer.  */
   if (IsLayerEmpty (Layer)
@@ -1013,7 +1013,7 @@ DrawLayerGroup (int group, const BoxType *drawn_area)
   if (n_entries > 1)
     rv = 1;
 
-  if (rv && !gui->gui)
+  if (rv && !gui->graphics->klass->gui)
     DrawPPV (group, drawn_area);
 }
 
diff --git a/src/hid/common/extents.c b/src/hid/common/extents.c
index cf2de59..dd53f94 100644
--- a/src/hid/common/extents.c
+++ b/src/hid/common/extents.c
@@ -181,7 +181,6 @@ hid_extents_init (void)
   extents_hid.struct_size         = sizeof (HID);
   extents_hid.name                = "extents-extents";
   extents_hid.description         = "used to calculate extents";
-  extents_hid.poly_before         = 1;
 
   extents_hid.set_layer           = extents_set_layer;
 
@@ -204,6 +203,7 @@ hid_extents_init (void)
   extents_graphics_class.fill_rect      = extents_fill_rect;
 
   extents_graphics.klass = &extents_graphics_class;
+  extents_graphics.poly_before = true;
   common_draw_helpers_init (&extents_graphics);
 
   initialised = true;
diff --git a/src/hid/gcode/gcode.c b/src/hid/gcode/gcode.c
index b5eee7f..1daadfd 100644
--- a/src/hid/gcode/gcode.c
+++ b/src/hid/gcode/gcode.c
@@ -1641,7 +1641,7 @@ hid_gcode_init ()
   gcode_graphics_class.fill_rect      = gcode_fill_rect;
 
   gcode_graphics.klass = &gcode_graphics_class;
-  gcode_hid.poly_before = true;
+  gcode_graphics.poly_before = true;
   common_draw_helpers_init (&gcode_graphics);
 
   hid_register_hid (&gcode_hid);
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 49fa5d9..7870f6d 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -2204,7 +2204,7 @@ hid_gtk_init ()
   ghid_graphics_class.gui = true;
 
   ghid_graphics.klass = &ghid_graphics_class;
-  ghid_hid.poly_after = true;
+  ghid_graphics.poly_after = true;
   common_draw_helpers_init (&ghid_graphics);
 
   hid_register_hid (&ghid_hid);
diff --git a/src/hid/lesstif/main.c b/src/hid/lesstif/main.c
index 00c439c..1682ead 100644
--- a/src/hid/lesstif/main.c
+++ b/src/hid/lesstif/main.c
@@ -4072,7 +4072,6 @@ hid_lesstif_init ()
   lesstif_hid.name                    = "lesstif";
   lesstif_hid.description             = "LessTif - a Motif clone for X/Unix";
   lesstif_hid.gui                     = 1;
-  lesstif_hid.poly_before             = 1;
 
   lesstif_hid.get_export_options      = lesstif_get_export_options;
   lesstif_hid.do_export               = lesstif_do_export;
@@ -4134,6 +4133,7 @@ hid_lesstif_init ()
   lesstif_graphics.draw_pcb_polygon    = common_gui_draw_pcb_polygon;
 
   lesstif_graphics.klass = &lesstif_graphics_class;
+  lesstif_graphics.poly_before = true;
   common_draw_helpers_init (&lesstif_graphics);
 
   hid_register_hid (&lesstif_hid);
diff --git a/src/hid/lpr/lpr.c b/src/hid/lpr/lpr.c
index 05d5863..da9e20f 100644
--- a/src/hid/lpr/lpr.c
+++ b/src/hid/lpr/lpr.c
@@ -136,7 +136,6 @@ hid_lpr_init ()
   lpr_hid.name                = "lpr";
   lpr_hid.description         = N_("Postscript print");
   lpr_hid.printer             = 1;
-  lpr_hid.poly_before         = 1;
 
   lpr_hid.get_export_options  = lpr_get_export_options;
   lpr_hid.do_export           = lpr_do_export;
diff --git a/src/hid/nelma/nelma.c b/src/hid/nelma/nelma.c
index cb28849..481d7c2 100644
--- a/src/hid/nelma/nelma.c
+++ b/src/hid/nelma/nelma.c
@@ -1070,7 +1070,6 @@ hid_nelma_init()
   nelma_hid.name                = "nelma";
   nelma_hid.description         = "Numerical analysis package export";
   nelma_hid.exporter            = 1;
-  nelma_hid.poly_before         = 1;
 
   nelma_hid.get_export_options  = nelma_get_export_options;
   nelma_hid.do_export           = nelma_do_export;
@@ -1099,6 +1098,7 @@ hid_nelma_init()
   nelma_graphics_class.fill_rect      = nelma_fill_rect;
 
   nelma_graphics.klass = &nelma_graphics_class;
+  nelma_graphics.poly_before = true;
   common_draw_helpers_init (&nelma_graphics);
 
   hid_register_hid (&nelma_hid);
diff --git a/src/hid/ps/ps.c b/src/hid/ps/ps.c
index a52bf76..5ceb757 100644
--- a/src/hid/ps/ps.c
+++ b/src/hid/ps/ps.c
@@ -1570,7 +1570,6 @@ hid_ps_init ()
   ps_hid.name               = "ps";
   ps_hid.description        = N_("Postscript export");
   ps_hid.exporter           = 1;
-  ps_hid.poly_before        = 1;
 
   ps_hid.graphics           = &ps_graphics;
 
@@ -1578,6 +1577,7 @@ hid_ps_init ()
   ps_ps_graphics_class_init (&ps_graphics_class);
 
   ps_graphics.klass = &ps_graphics_class;
+  ps_graphics.poly_before = true;
   common_draw_helpers_init (&ps_graphics);
   ps_ps_graphics_init (&ps_graphics);
 
diff --git a/src/hid_draw.h b/src/hid_draw.h
index 951064d..613ca67 100644
--- a/src/hid_draw.h
+++ b/src/hid_draw.h
@@ -66,16 +66,16 @@ typedef struct hid_draw_class_st
   /* draw.c currently uses this to shortcut and special-case certain rendering when displaying on-screen */
   bool gui;
 
-  /* Note that both of these may be set, in which case polygons will be drawn twice: */
-  bool poly_before; /* If set, the redraw code will draw polygons before erasing the clearances. */
-  bool poly_after;  /* If set, the redraw code will draw polygons after  erasing the clearances. */
-
 } HID_DRAW_CLASS;
 
 /* Base HID_DRAW elements visible to any module */
 struct hid_draw_st
 {
   HID_DRAW_CLASS *klass;
+
+  /* Note that both of these may be set, in which case polygons will be drawn twice: */
+  bool poly_before; /* If set, the redraw code will draw polygons before erasing the clearances. */
+  bool poly_after;  /* If set, the redraw code will draw polygons after  erasing the clearances. */
 };
 
 /* Base hidGC elements visible to any module */
