Bottom: f28fe7298d17137b2fb95ee351e7c53fb5c49603
Top:    98709cc60948db1dfe1a808ae9578bf9dae534a8
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2008-10-13 05:23:43 +0100

Refresh of add_pours

---

diff --git a/src/pour.c b/src/pour.c
index d71d9f4..b27b0fd 100644
--- a/src/pour.c
+++ b/src/pour.c
@@ -1060,23 +1060,16 @@ InitPourClip (DataTypePtr Data, LayerTypePtr layer, PourType * pour)
   POLYAREA *pg, *tmp, *start_pg;
   int count_all, count_added;
 
-//  printf ("InitPourClip\n");
-
   /* Free any children we might have */
   if (pour->PolygonN)
     {
-//      printf ("We already had children. Killing them now.\n");
-//      delete_children = calloc (pour->PolygonN, sizeof (PolygonType *));
       POURPOLYGON_LOOP (pour);
       {
-//        delete_children[ number_deleted++ ] = polygon;
         /* POURPOLYGON_LOOP iterates backwards, so it's OK
          * to delete the current element we're sitting on */
         DestroyPolygonInPour (pour, polygon);
       }
       END_LOOP;
-//      while (number_deleted)
-//        DestroyPolygonInPour (pour, delete_children[ --number_deleted ]);
     }
 
   pg = original_pour_poly (pour);
@@ -1089,8 +1082,7 @@ InitPourClip (DataTypePtr Data, LayerTypePtr layer, PourType * pour)
   if (TEST_FLAG (CLEARPOLYFLAG, pour))
     {
       /* Clip the pour against anything we can find in this layer */
-      /* TODO: Clear up API so the resulting areas are in "clipped" */
-      ClearPour (Data, layer, pour, &pg, NULL, 0);
+      ClearPour (Data, layer, pour, &pg, NULL, UNSUBTRACT_BLOAT);
     }
 
   count_all = count_added = 0;
@@ -1161,8 +1153,6 @@ PlowPours (DataType * Data, int type, void *ptr1, void *ptr2,
   int r = 0;
   struct plow_info info;
 
-//  printf ("Hello world, this is PlowPours\n");
-
   info.type = type;
   info.ptr1 = ptr1;
   info.ptr2 = ptr2;
