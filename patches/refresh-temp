Bottom: 1e0c947022c06614833b99366a4603936b8bc875
Top:    24f22c095bce08e25f94955b4d128962c13ab3f3
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-06-04 13:02:01 +0100

Refresh of file-format-extension-to-suppo

---

diff --git a/src/copy.c b/src/copy.c
index 583feb8..3ffd439 100644
--- a/src/copy.c
+++ b/src/copy.c
@@ -95,6 +95,7 @@ static ObjectFunctionType CopyFunctions = {
 PolygonTypePtr
 CopyPolygonLowLevel (PolygonTypePtr Dest, PolygonTypePtr Src)
 {
+#warning FIXME FOR HOLES
   /* copy all data */
   POLYGONPOINT_LOOP (Src);
   {
diff --git a/src/crosshair.c b/src/crosshair.c
index cea493a..953f29a 100644
--- a/src/crosshair.c
+++ b/src/crosshair.c
@@ -86,6 +86,35 @@ static void XORDrawAttachedLine (LocationType, LocationType, LocationType,
 static void XORDrawAttachedArc (BDimension);
 /*static*/ void DrawAttached (Boolean);
 
+static int
+next_contour_point (PolygonTypePtr polygon, int point)
+{
+  int hole;
+  int this_contour_start;
+  int next_contour_start;
+
+  /* Find which contour / hole the specified point is in */
+  for (hole = polygon->HoleIndexN - 1; hole >= 0; hole--)
+    if (point >= polygon->HoleIndex[hole])
+      break;
+  hole++;
+
+  /* hole = 0 for an outer contour point */
+  /* hole = 1 for the first contour etc. */
+
+  this_contour_start = (hole == 0) ? 0 :
+                                     polygon->HoleIndex[hole - 1];
+  next_contour_start =
+    (hole == polygon->HoleIndexN) ? polygon->PointN :
+                                    polygon->HoleIndex[hole];
+
+  /* Wrap back to the start of the contour we're in if we pass the end */
+  if (++point == next_contour_start)
+    point = this_contour_start;
+
+  return point;
+}
+
 /* ---------------------------------------------------------------------------
  * creates a tmp polygon with coordinates converted to screen system
  */
@@ -93,15 +122,16 @@ static void
 XORPolygon (PolygonTypePtr polygon, LocationType dx, LocationType dy)
 {
   int i;
-  for (i = 0; i < polygon->PointN - 1; i++)
-    gui->draw_line (Crosshair.GC,
-		    polygon->Points[i].X + dx, polygon->Points[i].Y + dy,
-		    polygon->Points[i + 1].X + dx,
-		    polygon->Points[i + 1].Y + dy);
-  if (i > 1)
-    gui->draw_line (Crosshair.GC,
-		    polygon->Points[i].X + dx, polygon->Points[i].Y + dy,
-		    polygon->Points[0].X + dx, polygon->Points[0].Y + dy);
+  int next;
+  for (i = 0; i < polygon->PointN; i++)
+    {
+      next = next_contour_point (polygon, i);
+      gui->draw_line (Crosshair.GC,
+                      polygon->Points[i].X + dx,
+                      polygon->Points[i].Y + dy,
+                      polygon->Points[next].X + dx,
+                      polygon->Points[next].Y + dy);
+    }
 }
 
 /*-----------------------------------------------------------
