Bottom: 1f349a6a041631fee9493d7ccd65b99c4c3f84f2
Top:    2ca92cb9aa75bb2325a75edb6f2c8f381273120a
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-07 02:27:08 +0000

Refresh of use-tags-on-circular-contours-

---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index faf27c7..8d6af4d 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -584,11 +584,26 @@ hidgl_fill_polygon (int n_coords, int *x, int *y)
   free (vertices);
 }
 
-void tesselate_contour (GLUtesselator *tobj, VNODE *vnode, GLdouble *vertices)
+void
+tesselate_contour (GLUtesselator *tobj, PLINE *contour, GLdouble *vertices,
+                   double scale)
 {
+  VNODE *vnode = &contour->head;
   VNODE *vn = vnode;
   int offset = 0;
 
+  /* If the contour is round, and hidgl_fill_circle would use
+   * less slices than we have vertices to draw it, then call
+   * hidgl_fill_circle to draw this contour.
+   */
+  if (contour->is_round) {
+    double slices = calc_slices (contour->radius / scale, 2 * M_PI);
+    if (slices < contour->Count) {
+      hidgl_fill_circle (contour->cx, contour->cy, contour->radius, scale);
+      return;
+    }
+  }
+
   gluTessBeginPolygon (tobj, NULL);
   gluTessBeginContour (tobj);
   do {
@@ -619,19 +634,7 @@ do_hole (const BoxType *b, void *cl)
     return 0;
   }
 
-  /* If the contour is round, and hidgl_fill_circle would use
-   * less slices than we have vertices to draw it, then call
-   * hidgl_fill_circle to draw this contour.
-   */
-  if (curc->is_round) {
-    double slices = calc_slices (curc->radius / info->scale, 2 * M_PI);
-    if (slices < curc->Count) {
-      hidgl_fill_circle (curc->cx, curc->cy, curc->radius, info->scale);
-      return 1;
-    }
-  }
-
-  tesselate_contour (info->tobj, &curc->head, info->vertices);
+  tesselate_contour (info->tobj, curc, info->vertices, info->scale);
   return 1;
 }
 
@@ -708,7 +711,7 @@ hidgl_fill_pcb_polygon (PolygonType *poly, const BoxType *clip_box, double scale
                                                               // any bits permitted by the stencil writemask
 
   /* Draw the polygon outer */
-  tesselate_contour (info.tobj, &poly->Clipped->contours->head, info.vertices);
+  tesselate_contour (info.tobj, poly->Clipped->contours, info.vertices, scale);
   hidgl_flush_triangles (&buffer);
 
   /* Unassign our stencil buffer bit */
