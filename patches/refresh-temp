Bottom: 9e12ec9e014127ce37fdda36f87a03d33b4756a0
Top:    f0a8bd09727dafb15766b14271595364a73f08e3
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-05-14 01:06:58 +0100

Refresh of gtk-gl-add-facility-to-set-an-

---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 10ecbc2..717f6b8 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -45,6 +45,12 @@ typedef struct render_priv {
   bool trans_lines;
   bool in_context;
   int subcomposite_stencil_bit;
+
+  /* Data to determine when we need to change the current rendering colour */
+  char *current_color = NULL;
+  double alpha_mult = 1.0;
+  int alpha_changed = 0;
+
 } render_priv;
 
 
@@ -351,21 +357,21 @@ set_gl_color_for_gc (hidGC gc)
 {
   render_priv *priv = gport->render_priv;
   static void *cache = NULL;
-  static char *old_name = NULL;
   hidval cval;
   ColorCache *cc;
   double alpha_mult = 1.0;
   double r, g, b, a;
   a = 1.0;
 
-  if (old_name != NULL)
-    {
-      if (strcmp (gc->colorname, old_name) == 0)
-        return;
-      free (old_name);
-    }
+  if (!alpha_changed && priv->current_color != NULL &&
+      strcmp (gc->colorname, priv->current_color) == 0)
+    return;
 
-  old_name = strdup (gc->colorname);
+  free (priv->current_color);
+  priv->current_color = NULL;
+
+  priv->alpha_changed = 0;
+  priv->current_color = strdup (gc->colorname);
 
   if (gport->colormap == NULL)
     gport->colormap = gtk_widget_get_colormap (gport->top_window);
@@ -430,6 +436,7 @@ set_gl_color_for_gc (hidGC gc)
     }
   if (1) {
     double maxi, mult;
+    alpha_mult *= priv->alpha_mult;
     if (priv->trans_lines)
       a = a * alpha_mult;
     maxi = r;
@@ -461,6 +468,16 @@ ghid_set_color (hidGC gc, const char *name)
 }
 
 void
+ghid_set_alpha_mult (hidGC gc, double alpha_mult)
+{
+  if (alpha_mult != priv->alpha_mult) {
+    priv->alpha_mult = alpha_mult;
+    priv->alpha_changed = 1;
+    set_gl_color_for_gc (gc);
+  }
+}
+
+void
 ghid_set_line_cap (hidGC gc, EndCapStyle style)
 {
   gc->cap = style;
