Bottom: 4675d8f567155ed0b893d75857521a7fc29d4e12
Top:    be90cfd3f3251348558efe3b41b4af163f0db643
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-10-21 22:59:22 +0100

Refresh of make-rtree_t-type-available-to

---

diff --git a/src/polygon1.c b/src/polygon1.c
index 8c8275a..d413f37 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -640,7 +640,7 @@ seg_in_seg (const BoxType * b, void *cl)
       if (res & 2)
 	{
 	  cntrbox_adjust (i->s->p, cnt > 1 ? s2 : s1);
-	  if (adjust_tree ((rtree_t *) (i->s->p->tree), i->s))
+	  if (adjust_tree ((i->s->p->tree), i->s))
 	    return 1;
 	}
       /* if we added a node in the tree we need to change the tree */
@@ -811,12 +811,12 @@ intersect (jmp_buf * jb, POLYAREA * b, POLYAREA * a, int add)
             /* fill in the segment in info corresponding to this node */
             if (setjmp (info.sego) == 0)
               {
-                r_search ((rtree_t *) (looping_over->tree), &box, NULL, get_seg, &info);
+                r_search (looping_over->tree, &box, NULL, get_seg, &info);
                 assert (0);
               }
 
               /* NB: If this actually hits anything, we are teleported back to the beginning */
-              info.tree = (rtree_t *) rtree_over->tree;
+              info.tree = rtree_over->tree;
               if (info.tree)
                 if (UNLIKELY (r_search (info.tree, &info.s->box,
                                         seg_in_region, seg_in_seg, &info)))
@@ -2021,7 +2021,7 @@ poly_InvContour (PLINE * c)
   c->Flags.orient ^= 1;
   if (c->tree)
     {
-      r = r_search ((rtree_t *) (c->tree), NULL, NULL, flip_cb, NULL);
+      r = r_search (c->tree, NULL, NULL, flip_cb, NULL);
       assert (r == c->Count);
     }
 }
@@ -2249,7 +2249,7 @@ poly_InsideContour (PLINE * c, Vector p)
   ray.X2 = 0x7fffffff;
   ray.Y2 = p[1] + 1;
   if (setjmp (info.env) == 0)
-    r_search ((rtree_t *) c->tree, &ray, NULL, crossing, &info);
+    r_search (c->tree, &ray, NULL, crossing, &info);
   return info.f;
 }
