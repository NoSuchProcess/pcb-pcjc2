Bottom: dfdcc12cc3ea169e94d288c2c01032cef7fec174
Top:    8ca3e6cda19ad9d7d3f2e76365998529e3ca4f4b
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-06-05 16:37:29 +0100

Refresh of support-holes-in-input-polygon

---

diff --git a/src/remove.c b/src/remove.c
index ba7cf28..a5857d3 100644
--- a/src/remove.c
+++ b/src/remove.c
@@ -485,17 +485,31 @@ RemovePolygon (LayerTypePtr Layer, PolygonTypePtr Polygon)
  * If removing the outer contour, it removes the whole polygon.
  */
 static void *
-RemovePolygonContour (LayerTypePtr Layer,
-                      PolygonTypePtr Polygon,
+RemovePolygonContour (LayerTypePtr layer,
+                      PolygonTypePtr polygon,
                       Cardinal contour)
 {
+  Cardinal contour_start, contour_end, contour_points;
+  Cardinal i;
+
   if (contour == 0)
-    return RemovePolygon (Layer, Polygon);
+    return RemovePolygon (layer, polygon);
+
+  contour_start = (contour == 0) ? 0 : polygon->HoleIndex[contour - 1];
+  contour_end = (contour == polygon->HoleIndexN) ? polygon->PointN :
+                                                   polygon->HoleIndex[contour];
+  contour_points = contour_end - contour_start;
+
+  /* remove points from list, keep point order */
+  for (i = contour_start; i < polygon->PointN - contour_points; i++)
+    polygon->Points[i] = polygon->Points[i + contour_points];
+  polygon->PointN -= contour_points;
+
+  /* remove hole from list and shift down remaining indices */
+  for (i = contour; i < polygon->HoleIndexN; i++)
+    polygon->HoleIndex[i - 1] = polygon->HoleIndex[i] - contour_points;
+  polygon->HoleIndexN--;
 
-  /* Remove the contour */
-  printf ("Need to remove hole contour from polygon\n");
-#warning Need to shift hole indices down
-#warning How do we provide an undo for this?
   return NULL;
 }
 
@@ -506,7 +520,6 @@ static void *
 RemovePolygonPoint (LayerTypePtr Layer,
 		    PolygonTypePtr Polygon, PointTypePtr Point)
 {
-  PointTypePtr ptr;
   Cardinal point_idx;
   Cardinal i;
   Cardinal contour;
@@ -528,8 +541,8 @@ RemovePolygonPoint (LayerTypePtr Layer,
   AddObjectToRemovePointUndoList (POLYGONPOINT_TYPE, Layer, Polygon, point_idx);
   r_delete_entry (Layer->polygon_tree, (BoxType *) Polygon);
   /* remove point from list, keep point order */
-  for (ptr = Point; ptr < &Polygon->Points[Polygon->PointN]; ptr++)
-    *ptr = *(ptr + 1);
+  for (i = point_idx; i < Polygon->PointN - 1; i++)
+    Polygon->Points[i] = Polygon->Points[i + 1];
   Polygon->PointN--;
 
   /* Shift down indices of any holes */
