Bottom: 454e790e6e530719bcb4f3b929de6890768bdf66
Top:    d3d3d572675f86264d94488a0815dbb54ca9e8b9
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-11-06 13:28:02 +0000

Refresh of allow-zero-clearance-pads-to-t

---

diff --git a/src/change.c b/src/change.c
index 775517d..ceef865 100644
--- a/src/change.c
+++ b/src/change.c
@@ -605,8 +605,14 @@ ChangePadClearSize (ElementTypePtr Element, PadTypePtr Pad)
 
   if (TEST_FLAG (LOCKFLAG, Pad))
     return (NULL);
-  value = MIN (MAX_LINESIZE, MAX (value, PCB->Bloat * 2 + 2));
-  if (value <= MAX_PADSIZE && value >= MIN_PADSIZE && value != Pad->Clearance)
+  value = MIN (MAX_LINESIZE, value);
+  if (value < 0)
+    value = 0;
+  if (Delta < 0 && value < PCB->Bloat * 2)
+    value = 0;
+  if ((Delta > 0 || Absolute) && value < PCB->Bloat * 2)
+    value = PCB->Bloat * 2 + 2;
+  if (value != Pad->Clearance)
     {
       AddObjectToClearSizeUndoList (PAD_TYPE, Element, Pad, Pad);
       r_delete_entry (PCB->Data->pad_tree, &Pad->BoundingBox);
diff --git a/src/draw.c b/src/draw.c
index 8ad94c5..931126f 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -1389,6 +1389,9 @@ DrawPadLowLevel (hidGC gc, PadTypePtr Pad, Boolean clear, Boolean mask)
       return;
     }
 
+  if (clear && !mask && Pad->Clearance <= 0)
+    return;
+
   if (TEST_FLAG (THINDRAWFLAG, PCB) ||
       (clear && TEST_FLAG (THINDRAWPOLYFLAG, PCB)))
     {
diff --git a/src/find.c b/src/find.c
index decaae3..536b9ab 100644
--- a/src/find.c
+++ b/src/find.c
@@ -2341,7 +2341,8 @@ LOCtoPadPoly_callback (const BoxType * b, void *cl)
   struct lo_info *i = (struct lo_info *) cl;
 
 
-  if (!TEST_FLAG (TheFlag, polygon) && !TEST_FLAG (CLEARPOLYFLAG, polygon))
+  if (!TEST_FLAG (TheFlag, polygon) &&
+      (!TEST_FLAG (CLEARPOLYFLAG, polygon) || !i->pad.Clearance))
     {
       if (IsPadInPolygon (&i->pad, polygon) &&
           ADD_POLYGON_TO_LIST (i->layer, polygon))
@@ -2614,15 +2615,12 @@ LookupLOConnectionsToPolygon (PolygonTypePtr Polygon, Cardinal LayerGroup)
         }
       else
         {
-          if (!TEST_FLAG (CLEARPOLYFLAG, Polygon))
-            {
-              info.layer = layer - max_layer;
-              if (setjmp (info.env) == 0)
-                r_search (PCB->Data->pad_tree, (BoxType *) & info.polygon,
-                          NULL, LOCtoPolyPad_callback, &info);
-              else
-                return True;
-            }
+          info.layer = layer - max_layer;
+          if (setjmp (info.env) == 0)
+            r_search (PCB->Data->pad_tree, (BoxType *) & info.polygon,
+                      NULL, LOCtoPolyPad_callback, &info);
+          else
+            return True;
         }
     }
   return (False);
@@ -3855,7 +3853,7 @@ drc_callback (DataTypePtr data, LayerTypePtr layer, PolygonTypePtr polygon,
         }
       break;
     case PAD_TYPE:
-      if (pad->Clearance < 2 * PCB->Bloat)
+      if (pad->Clearance && pad->Clearance < 2 * PCB->Bloat)
 	if (IsPadInPolygon(pad,polygon))
 	  {
 	    AddObjectToFlagUndoList (type, ptr1, ptr2, ptr2);
diff --git a/src/pour.c b/src/pour.c
index 2f8e0bc..45018f5 100644
--- a/src/pour.c
+++ b/src/pour.c
@@ -424,6 +424,9 @@ get_subtract_pad_poly (PadType * pad, PourType * pour)
 {
   POLYAREA *np;
 
+  if (pad->Clearance == 0)
+    return NULL;
+
   if (TEST_FLAG (SQUAREFLAG, pad))
     np = SquarePadPoly (pad, pad->Thickness + pad->Clearance);
   else
