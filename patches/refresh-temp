Bottom: 425a524650f1a11ddeec3c1e033e983fa9617717
Top:    b81a4a23d50cd98f3009ca6dc4d6c7a0a3d9ae3e
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-30 05:51:02 +0100

Refresh of convert-board-objects-to-glist

---

diff --git a/src/mymem.c b/src/mymem.c
index 758d18d..9279aaa 100644
--- a/src/mymem.c
+++ b/src/mymem.c
@@ -525,8 +525,8 @@ FreePolygonMemory (PolygonType *polygon)
   if (polygon == NULL)
     return;
 
-  g_list_free_full (polygon->Points, (GDestroyNotify)FreePoint);
-  g_list_free_full (polygon->HoleIndex, (GDestroyNotify)FreeHoleIndex);
+  free (polygon->Points);
+  free (polygon->HoleIndex);
 
   if (polygon->Clipped)
     poly_Free (&polygon->Clipped);
diff --git a/src/remove.c b/src/remove.c
index ab9aa5c..9ae39c4 100644
--- a/src/remove.c
+++ b/src/remove.c
@@ -131,15 +131,11 @@ DestroyVia (PinTypePtr Via)
 {
   r_delete_entry (DestroyTarget->via_tree, (BoxTypePtr) Via);
   free (Via->Name);
-  if (Via != &DestroyTarget->Via[--DestroyTarget->ViaN])
-    {
-      *Via = DestroyTarget->Via[DestroyTarget->ViaN];
-      r_substitute (DestroyTarget->via_tree, (BoxTypePtr)
-		    (BoxType *) & DestroyTarget->Via[DestroyTarget->ViaN],
-		    (BoxType *) Via);
-    }
-  memset (&DestroyTarget->Via[DestroyTarget->ViaN], 0, sizeof (PinType));
-  return (NULL);
+
+  DestroyTarget->Via = g_list_remove (DestroyTarget->Via, Via);
+  DestroyTarget->ViaN --;
+
+  return NULL;
 }
 
 /* ---------------------------------------------------------------------------
@@ -150,15 +146,11 @@ DestroyLine (LayerTypePtr Layer, LineTypePtr Line)
 {
   r_delete_entry (Layer->line_tree, (BoxTypePtr) Line);
   free (Line->Number);
-  if (Line != &Layer->Line[--Layer->LineN])
-    {
-      *Line = Layer->Line[Layer->LineN];
-      /* tricky - line pointers are moved around */
-      r_substitute (Layer->line_tree, (BoxType *) & Layer->Line[Layer->LineN],
-		    (BoxType *) Line);
-    }
-  memset (&Layer->Line[Layer->LineN], 0, sizeof (LineType));
-  return (NULL);
+
+  Layer->Line = g_list_remove (Layer->Line, Line);
+  Layer->LineN --;
+
+  return NULL;
 }
 
 /* ---------------------------------------------------------------------------
@@ -168,14 +160,11 @@ static void *
 DestroyArc (LayerTypePtr Layer, ArcTypePtr Arc)
 {
   r_delete_entry (Layer->arc_tree, (BoxTypePtr) Arc);
-  if (Arc != &Layer->Arc[--Layer->ArcN])
-    {
-      *Arc = Layer->Arc[Layer->ArcN];
-      r_substitute (Layer->arc_tree, (BoxType *) & Layer->Arc[Layer->ArcN],
-		    (BoxType *) Arc);
-    }
-  memset (&Layer->Arc[Layer->ArcN], 0, sizeof (ArcType));
-  return (NULL);
+
+  Layer->Arc = g_list_remove (Layer->Arc, Arc);
+  Layer->ArcN --;
+
+  return NULL;
 }
 
 /* ---------------------------------------------------------------------------
@@ -186,15 +175,11 @@ DestroyPolygon (LayerTypePtr Layer, PolygonTypePtr Polygon)
 {
   r_delete_entry (Layer->polygon_tree, (BoxTypePtr) Polygon);
   FreePolygonMemory (Polygon);
-  if (Polygon != &Layer->Polygon[--Layer->PolygonN])
-    {
-      *Polygon = Layer->Polygon[Layer->PolygonN];
-      r_substitute (Layer->polygon_tree,
-		    (BoxType *) & Layer->Polygon[Layer->PolygonN],
-		    (BoxType *) Polygon);
-    }
-  memset (&Layer->Polygon[Layer->PolygonN], 0, sizeof (PolygonType));
-  return (NULL);
+
+  Layer->Polygon = g_list_remove (Layer->Polygon, Polygon);
+  Layer->PolygonN --;
+
+  return NULL;
 }
 
 /* ---------------------------------------------------------------------------
@@ -245,14 +230,11 @@ DestroyText (LayerTypePtr Layer, TextTypePtr Text)
 {
   free (Text->TextString);
   r_delete_entry (Layer->text_tree, (BoxTypePtr) Text);
-  if (Text != &Layer->Text[--Layer->TextN])
-    {
-      *Text = Layer->Text[Layer->TextN];
-      r_substitute (Layer->text_tree, (BoxType *) & Layer->Text[Layer->TextN],
-		    (BoxType *) Text);
-    }
-  memset (&Layer->Text[Layer->TextN], 0, sizeof (TextType));
-  return (NULL);
+
+  Layer->Text = g_list_remove (Layer->Text, Text);
+  Layer->TextN --;
+
+  return NULL;
 }
 
 /* ---------------------------------------------------------------------------
@@ -286,37 +268,11 @@ DestroyElement (ElementTypePtr Element)
   }
   END_LOOP;
   FreeElementMemory (Element);
-  if (Element != &DestroyTarget->Element[--DestroyTarget->ElementN])
-    {
-      *Element = DestroyTarget->Element[DestroyTarget->ElementN];
-      /* deal with changed element pointer */
-      r_substitute (DestroyTarget->element_tree,
-		    (BoxType *) & DestroyTarget->Element[DestroyTarget->
-							 ElementN],
-		    (BoxType *) Element);
-    }
-  PIN_LOOP (Element);
-  {
-    pin->Element = Element;
-  }
-  END_LOOP;
-  PAD_LOOP (Element);
-  {
-    pad->Element = Element;
-  }
-  END_LOOP;
-  ELEMENTTEXT_LOOP (Element);
-  {
-    r_substitute (DestroyTarget->name_tree[n],
-		  (BoxType *) & DestroyTarget->Element[DestroyTarget->
-						       ElementN].Name[n],
-		  (BoxType *) text);
-    text->Element = Element;
-  }
-  END_LOOP;
-  memset (&DestroyTarget->Element[DestroyTarget->ElementN], 0,
-	  sizeof (ElementType));
-  return (NULL);
+
+  DestroyTarget->Element = g_list_remove (DestroyTarget->Element, Element);
+  DestroyTarget->ElementN --;
+
+  return NULL;
 }
 
 /* ---------------------------------------------------------------------------
@@ -327,15 +283,11 @@ DestroyRat (RatTypePtr Rat)
 {
   if (DestroyTarget->rat_tree)
     r_delete_entry (DestroyTarget->rat_tree, &Rat->BoundingBox);
-  if (Rat != &DestroyTarget->Rat[--DestroyTarget->RatN])
-    {
-      *Rat = DestroyTarget->Rat[DestroyTarget->RatN];
-      r_substitute (DestroyTarget->rat_tree,
-		    &DestroyTarget->Rat[DestroyTarget->RatN].BoundingBox,
-		    &Rat->BoundingBox);
-    }
-  memset (&DestroyTarget->Rat[DestroyTarget->RatN], 0, sizeof (RatType));
-  return (NULL);
+
+  DestroyTarget->Rat = g_list_remove (DestroyTarget->Rat, Rat);
+  DestroyTarget->RatN --;
+
+  return NULL;
 }
