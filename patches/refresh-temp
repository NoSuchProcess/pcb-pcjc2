Bottom: 098cf985f3c169e8ac7e483f88ea60756ddf1a38
Top:    dabe7f3c60ee2dbee5bf32a6cadfeda3f3c3f73c
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-11-15 18:58:38 +0000

Refresh of move-gtk-drawing-routines-into

---

diff --git a/src/hid/gtk/gtkhid-gdk.c b/src/hid/gtk/gtkhid-gdk.c
index 2f49da7..4a35d0c 100644
--- a/src/hid/gtk/gtkhid-gdk.c
+++ b/src/hid/gtk/gtkhid-gdk.c
@@ -31,17 +31,17 @@ static int mask_seq = 0;
 
 /* ------------------------------------------------------------ */
 
-static inline int 
+static inline int
 Vx2 (int x)
-{     
+{
   return (x - gport->view_x0) / gport->zoom + 0.5;
-}       
-        
-static inline int 
+}
+
+static inline int
 Vy2 (int y)
-{     
+{
   return (y - gport->view_y0) / gport->zoom + 0.5;
-}       
+}
 
 /* ------------------------------------------------------------ */
 
@@ -73,7 +73,8 @@ ghid_draw_grid (void)
   x1 = GRIDFIT_X (SIDE_X (gport->view_x0), PCB->Grid);
   y1 = GRIDFIT_Y (SIDE_Y (gport->view_y0), PCB->Grid);
   x2 = GRIDFIT_X (SIDE_X (gport->view_x0 + gport->view_width - 1), PCB->Grid);
-  y2 = GRIDFIT_Y (SIDE_Y (gport->view_y0 + gport->view_height - 1), PCB->Grid);
+  y2 =
+    GRIDFIT_Y (SIDE_Y (gport->view_y0 + gport->view_height - 1), PCB->Grid);
   if (x1 > x2)
     {
       int tmp = x1;
@@ -118,41 +119,42 @@ ghid_draw_grid (void)
 
 /* ------------------------------------------------------------ */
 void
-ghid_draw_bg_image(void)
+ghid_draw_bg_image (void)
 {
-	static GdkPixbuf	*pixbuf;
-	GdkInterpType	interp_type;
-	gint	x, y, w, h, w_src, h_src;
-	static gint	w_scaled, h_scaled;
-
-	if (!ghidgui->bg_pixbuf)
-		return;
-
-	w = PCB->MaxWidth / gport->zoom;
-	h = PCB->MaxHeight / gport->zoom;
-	x = gport->view_x0 / gport->zoom;
-	y = gport->view_y0 / gport->zoom;
-
-	if (w_scaled != w || h_scaled != h)
-		{
-		if (pixbuf)
-			g_object_unref(G_OBJECT(pixbuf));
-
-		w_src = gdk_pixbuf_get_width(ghidgui->bg_pixbuf);
-		h_src = gdk_pixbuf_get_height(ghidgui->bg_pixbuf);
-		if (w > w_src && h > h_src)
-			interp_type = GDK_INTERP_NEAREST;
-		else
-			interp_type = GDK_INTERP_BILINEAR;
-
-		pixbuf = gdk_pixbuf_scale_simple(ghidgui->bg_pixbuf, w, h, interp_type);
-		w_scaled = w;
-		h_scaled = h;
-		}
-	if (pixbuf)
-		gdk_pixbuf_render_to_drawable(pixbuf, gport->drawable, gport->bg_gc,
-            x, y, 0, 0,
-            w - x, h - y, GDK_RGB_DITHER_NORMAL, 0, 0);
+  static GdkPixbuf *pixbuf;
+  GdkInterpType interp_type;
+  gint x, y, w, h, w_src, h_src;
+  static gint w_scaled, h_scaled;
+
+  if (!ghidgui->bg_pixbuf)
+    return;
+
+  w = PCB->MaxWidth / gport->zoom;
+  h = PCB->MaxHeight / gport->zoom;
+  x = gport->view_x0 / gport->zoom;
+  y = gport->view_y0 / gport->zoom;
+
+  if (w_scaled != w || h_scaled != h)
+    {
+      if (pixbuf)
+	g_object_unref (G_OBJECT (pixbuf));
+
+      w_src = gdk_pixbuf_get_width (ghidgui->bg_pixbuf);
+      h_src = gdk_pixbuf_get_height (ghidgui->bg_pixbuf);
+      if (w > w_src && h > h_src)
+	interp_type = GDK_INTERP_NEAREST;
+      else
+	interp_type = GDK_INTERP_BILINEAR;
+
+      pixbuf =
+	gdk_pixbuf_scale_simple (ghidgui->bg_pixbuf, w, h, interp_type);
+      w_scaled = w;
+      h_scaled = h;
+    }
+  if (pixbuf)
+    gdk_pixbuf_render_to_drawable (pixbuf, gport->drawable, gport->bg_gc,
+				   x, y, 0, 0,
+				   w - x, h - y, GDK_RGB_DITHER_NORMAL, 0, 0);
 }
 
 #define WHICH_GC(gc) (cur_mask == HID_MASK_CLEAR ? gport->mask_gc : (gc)->gc)
@@ -166,7 +168,7 @@ ghid_use_mask (int use_it)
 
   if (use_it == HID_FLUSH_DRAW_Q)
     {
-      gdk_flush();
+      gdk_flush ();
       return;
     }
   else if (use_it == HID_LIVE_DRAWING)
@@ -432,13 +434,13 @@ ghid_draw_line (hidGC gc, int x1, int y1, int x2, int y2)
 {
   double dx1, dy1, dx2, dy2;
 
-  dx1 = Vx ((double)x1);
-  dy1 = Vy ((double)y1);
-  dx2 = Vx ((double)x2);
-  dy2 = Vy ((double)y2);
+  dx1 = Vx ((double) x1);
+  dy1 = Vy ((double) y1);
+  dx2 = Vx ((double) x2);
+  dy2 = Vy ((double) y2);
 
-  if (! ClipLine (0, 0, gport->width, gport->height,
-		  &dx1, &dy1, &dx2, &dy2, gc->width / gport->zoom))
+  if (!ClipLine (0, 0, gport->width, gport->height,
+		 &dx1, &dy1, &dx2, &dy2, gc->width / gport->zoom))
     return;
 
   USE_GC (gc);
@@ -451,16 +453,16 @@ ghid_draw_arc (hidGC gc, int cx, int cy,
 {
   gint vrx, vry;
   gint w, h, radius;
-  
+
   w = gport->width * gport->zoom;
   h = gport->height * gport->zoom;
   radius = (xradius > yradius) ? xradius : yradius;
   if (SIDE_X (cx) < gport->view_x0 - radius
       || SIDE_X (cx) > gport->view_x0 + w + radius
-      || SIDE_Y (cy) < gport->view_y0 - radius 
+      || SIDE_Y (cy) < gport->view_y0 - radius
       || SIDE_Y (cy) > gport->view_y0 + h + radius)
     return;
-  
+
   USE_GC (gc);
   vrx = Vz (xradius);
   vry = Vz (yradius);
@@ -468,12 +470,12 @@ ghid_draw_arc (hidGC gc, int cx, int cy,
   if (ghid_flip_x)
     {
       start_angle = 180 - start_angle;
-      delta_angle = - delta_angle;
+      delta_angle = -delta_angle;
     }
   if (ghid_flip_y)
     {
-      start_angle = - start_angle;
-      delta_angle = - delta_angle;					
+      start_angle = -start_angle;
+      delta_angle = -delta_angle;
     }
   /* make sure we fall in the -180 to +180 range */
   start_angle = (start_angle + 360 + 180) % 360 - 180;
@@ -496,9 +498,9 @@ ghid_draw_rect (hidGC gc, int x1, int y1, int x2, int y2)
        && SIDE_X (x2) < gport->view_x0 - lw)
       || (SIDE_X (x1) > gport->view_x0 + w + lw
 	  && SIDE_X (x2) > gport->view_x0 + w + lw)
-      || (SIDE_Y (y1) < gport->view_y0 - lw 
+      || (SIDE_Y (y1) < gport->view_y0 - lw
 	  && SIDE_Y (y2) < gport->view_y0 - lw)
-      || (SIDE_Y (y1) > gport->view_y0 + h + lw 
+      || (SIDE_Y (y1) > gport->view_y0 + h + lw
 	  && SIDE_Y (y2) > gport->view_y0 + h + lw))
     return;
 
@@ -507,8 +509,18 @@ ghid_draw_rect (hidGC gc, int x1, int y1, int x2, int y2)
   x2 = Vx (x2);
   y2 = Vy (y2);
 
-  if (x1 > x2) { gint xt = x1; x1 = x2; x2 = xt; }
-  if (y1 > y2) { gint yt = y1; y1 = y2; y2 = yt; }
+  if (x1 > x2)
+    {
+      gint xt = x1;
+      x1 = x2;
+      x2 = xt;
+    }
+  if (y1 > y2)
+    {
+      gint yt = y1;
+      y1 = y2;
+      y2 = yt;
+    }
 
   USE_GC (gc);
   gdk_draw_rectangle (gport->drawable, gport->u_gc, FALSE,
@@ -525,15 +537,14 @@ ghid_fill_circle (hidGC gc, int cx, int cy, int radius)
   h = gport->height * gport->zoom;
   if (SIDE_X (cx) < gport->view_x0 - radius
       || SIDE_X (cx) > gport->view_x0 + w + radius
-      || SIDE_Y (cy) < gport->view_y0 - radius 
+      || SIDE_Y (cy) < gport->view_y0 - radius
       || SIDE_Y (cy) > gport->view_y0 + h + radius)
     return;
 
   USE_GC (gc);
   vr = Vz (radius);
   gdk_draw_arc (gport->drawable, gport->u_gc, TRUE,
-		Vx (cx) - vr, Vy (cy) - vr,
-		vr * 2, vr * 2, 0, 360 * 64);
+		Vx (cx) - vr, Vy (cy) - vr, vr * 2, vr * 2, 0, 360 * 64);
 }
 
 void
@@ -570,11 +581,11 @@ ghid_fill_rect (hidGC gc, int x1, int y1, int x2, int y2)
   if ((SIDE_X (x1) < gport->view_x0 - lw
        && SIDE_X (x2) < gport->view_x0 - lw)
       || (SIDE_X (x1) > gport->view_x0 + w + lw
-          && SIDE_X (x2) > gport->view_x0 + w + lw)
+	  && SIDE_X (x2) > gport->view_x0 + w + lw)
       || (SIDE_Y (y1) < gport->view_y0 - lw
-          && SIDE_Y (y2) < gport->view_y0 - lw)
+	  && SIDE_Y (y2) < gport->view_y0 - lw)
       || (SIDE_Y (y1) > gport->view_y0 + h + lw
-          && SIDE_Y (y2) > gport->view_y0 + h + lw))
+	  && SIDE_Y (y2) > gport->view_y0 + h + lw))
     return;
 
   x1 = Vx (x1);
@@ -595,5 +606,5 @@ ghid_fill_rect (hidGC gc, int x1, int y1, int x2, int y2)
     }
   USE_GC (gc);
   gdk_draw_rectangle (gport->drawable, gport->u_gc, TRUE,
-                      x1, y1, x2 - x1 + 1, y2 - y1 + 1);
+		      x1, y1, x2 - x1 + 1, y2 - y1 + 1);
 }
