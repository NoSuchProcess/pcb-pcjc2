Bottom: 337a65380d79b7e5a8451c72ce62b16d81f7702b
Top:    48db3f194311d8b78b8ca9ab8a76ddc6bb750bc3
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-24 17:44:51 +0100

Refresh of temp

---

diff --git a/src/draw.c b/src/draw.c
index 47db1fd..d096377 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -66,7 +66,6 @@ RCSID ("$Id$");
 #define	LARGE_TEXT_SIZE			3
 #define	N_TEXT_SIZES			4
 
-#define ON_SIDE(element, side) (TEST_FLAG (ONSOLDERFLAG, element) == (*side == SOLDER_LAYER))
 
 /* ---------------------------------------------------------------------------
  * some local identifiers
@@ -103,6 +102,7 @@ static void DrawEMark (ElementTypePtr, LocationType, LocationType, bool);
 static void ClearPad (PadTypePtr, bool);
 static void DrawHole (PinTypePtr);
 static void DrawMask (int side, BoxType *);
+static void DrawPaste (int side, BoxType *);
 static void DrawRats (BoxType *);
 static void DrawSilk (int side, const BoxType *);
 static int via_callback (const BoxType * b, void *cl);
@@ -236,7 +236,7 @@ element_callback (const BoxType * b, void *cl)
   ElementTypePtr element = (ElementTypePtr) b;
   int *side = cl;
 
-  if (ON_SIDE (element, side))
+  if (ON_SIDE (element, *side))
     DrawElementPackage (element);
   return 1;
 }
@@ -251,7 +251,7 @@ name_callback (const BoxType * b, void *cl)
   if (TEST_FLAG (HIDENAMEFLAG, element))
     return 0;
 
-  if (ON_SIDE (element, side))
+  if (ON_SIDE (element, *side))
     DrawElementName (element);
   return 0;
 }
@@ -611,7 +611,7 @@ clearPad_callback (const BoxType * b, void *cl)
 {
   PadTypePtr pad = (PadTypePtr) b;
   int *side = cl;
-  if (ON_SIDE (pad, side) && pad->Mask)
+  if (ON_SIDE (pad, *side) && pad->Mask)
     ClearPad (pad, true);
   return 1;
 }
@@ -705,6 +705,26 @@ DrawMask (int side, BoxType * screen)
     }
 }
 
+/* ---------------------------------------------------------------------------
+ * draws solder paste layer for a given side of the board
+ */
+static void
+DrawPaste (int side, BoxType *drawn_area)
+{
+  gui->set_color (Output.fgGC, PCB->ElementColor);
+  ALLPAD_LOOP (PCB->Data);
+  {
+    if (ON_SIDE (pad, side) && !TEST_FLAG (NOPASTEFLAG, pad) && pad->Mask > 0)
+      {
+        if (pad->Mask < pad->Thickness)
+          DrawPadLowLevel (Output.fgGC, pad, true, true);
+        else
+          DrawPadLowLevel (Output.fgGC, pad, false, false);
+      }
+  }
+  ENDALL_LOOP;
+}
+
 static void
 DrawRats (BoxTypePtr drawn_area)
 {
diff --git a/src/macro.h b/src/macro.h
index 19f80b8..6dcd0d1 100644
--- a/src/macro.h
+++ b/src/macro.h
@@ -162,6 +162,13 @@ extern int mem_any_set (unsigned char *, int);
 	((TEST_FLAG(ONSOLDERFLAG, (o)) != 0) == SWAP_IDENT)
 
 /* ---------------------------------------------------------------------------
+ *  Determines if an object is on the given side. side is either SOLDER_LAYER
+ *  or COMPONENT_LAYER.
+ */
+#define ON_SIDE(element, side) \
+        (TEST_FLAG (ONSOLDERFLAG, element) == (side == SOLDER_LAYER))
+
+/* ---------------------------------------------------------------------------
  * some loop shortcuts
  * all object loops run backwards to prevent from errors when deleting objects
  *
diff --git a/src/misc.c b/src/misc.c
index 02a883f..d7aad5d 100644
--- a/src/misc.c
+++ b/src/misc.c
@@ -600,6 +600,22 @@ IsLayerGroupEmpty (int num)
   return true;
 }
 
+static bool
+IsPasteEmpty (int side)
+{
+  bool paste_empty = true;
+  ALLPAD_LOOP (PCB->Data);
+  {
+    if (ON_SIDE (pad, side) && !TEST_FLAG (NOPASTEFLAG, pad) && pad->Mask > 0)
+      {
+        paste_empty = false;
+        break;
+      }
+  }
+  ENDALL_LOOP;
+  return paste_empty;
+}
+
 /* ---------------------------------------------------------------------------
  * gets minimum and maximum coordinates
  * returns NULL if layout is empty
