Bottom: 85a9a05d5592fc8c0b656320f2707535acf3bb55
Top:    52a9f876d484a24b9e5be92cefadb3fb2d40fcae
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-07-24 12:48:40 +0100

Refresh of wow-testing

---

diff --git a/src/hid/gtk/gtkhid-gdk.c b/src/hid/gtk/gtkhid-gdk.c
index 2899bf7..f0eedf7 100644
--- a/src/hid/gtk/gtkhid-gdk.c
+++ b/src/hid/gtk/gtkhid-gdk.c
@@ -708,7 +708,6 @@ redraw_region (GdkRectangle *rect)
   if (!gport->pixmap)
     return;
 
-<<<<<<< current
   if (rect != NULL)
     {
       priv->clip_rect = *rect;
@@ -728,10 +727,10 @@ redraw_region (GdkRectangle *rect)
   set_clip (priv, priv->mask_gc);
   set_clip (priv, priv->grid_gc);
 
-  region.X1 = MIN(PCB_X (0), PCB_X (gport->width  + 1));
-  region.Y1 = MIN(PCB_Y (0), PCB_Y (gport->height + 1));
-  region.X2 = MAX(PCB_X (0), PCB_X (gport->width  + 1));
-  region.Y2 = MAX(PCB_Y (0), PCB_Y (gport->height + 1));
+  region.X1 = MIN (PCB_X (0), PCB_X (gport->width  + 1));
+  region.Y1 = MIN (PCB_Y (0), PCB_Y (gport->height + 1));
+  region.X2 = MAX (PCB_X (0), PCB_X (gport->width  + 1));
+  region.Y2 = MAX (PCB_Y (0), PCB_Y (gport->height + 1));
 
   eleft =   SCREEN_X (0);
   eright =  SCREEN_X (PCB->MaxWidth);
@@ -1273,10 +1272,10 @@ ghid_render_pixmap (int cx, int cy, double zoom, int width, int height, int dept
   gdk_draw_rectangle (pixmap, priv->bg_gc, TRUE, 0, 0, width, height);
 
   /* call the drawing routine */
-  region.X1 = MIN(PCB_X (0), PCB_X (gport->width  + 1));
-  region.Y1 = MIN(PCB_Y (0), PCB_Y (gport->height + 1));
-  region.X2 = MAX(PCB_X (0), PCB_X (gport->width  + 1));
-  region.Y2 = MAX(PCB_Y (0), PCB_Y (gport->height + 1));
+  region.X1 = MIN (PCB_X (0), PCB_X (gport->width  + 1));
+  region.Y1 = MIN (PCB_Y (0), PCB_Y (gport->height + 1));
+  region.X2 = MAX (PCB_X (0), PCB_X (gport->width  + 1));
+  region.Y2 = MAX (PCB_Y (0), PCB_Y (gport->height + 1));
   hid_expose_callback (&ghid_hid, &region, NULL);
 
   gport->drawable = save_drawable;
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 611117d..89152f2 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -919,10 +919,10 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
   glStencilMask (0);
   glStencilFunc (GL_ALWAYS, 0, 0);
 
-  region.X1 = MIN(PCB_X (ev->area.x), PCB_X (ev->area.x + ev->area.width  + 1));
-  region.Y1 = MIN(PCB_Y (ev->area.y), PCB_Y (ev->area.y + ev->area.height + 1));
-  region.X2 = MAX(PCB_X (ev->area.x), PCB_X (ev->area.x + ev->area.width  + 1));
-  region.Y2 = MAX(PCB_Y (ev->area.y), PCB_Y (ev->area.y + ev->area.height + 1));
+  region.X1 = MIN (PCB_X (ev->area.x), PCB_X (ev->area.x + ev->area.width  + 1));
+  region.Y1 = MIN (PCB_Y (ev->area.y), PCB_Y (ev->area.y + ev->area.height + 1));
+  region.X2 = MAX (PCB_X (ev->area.x), PCB_X (ev->area.x + ev->area.width  + 1));
+  region.Y2 = MAX (PCB_Y (ev->area.y), PCB_Y (ev->area.y + ev->area.height + 1));
 
   glColor3f (port->bg_color.red / 65535.,
              port->bg_color.green / 65535.,
@@ -1180,10 +1180,10 @@ ghid_render_pixmap (int cx, int cy, double zoom, int width, int height, int dept
                              -gport->view_x0,
                 ghid_flip_y ? gport->view_y0 - PCB->MaxHeight :
                              -gport->view_y0, 0);
-  region.X1 = MIN(PCB_X (0), PCB_X (gport->width  + 1));
-  region.Y1 = MIN(PCB_Y (0), PCB_Y (gport->height + 1));
-  region.X2 = MAX(PCB_X (0), PCB_X (gport->width  + 1));
-  region.Y2 = MAX(PCB_Y (0), PCB_Y (gport->height + 1));
+  region.X1 = MIN (PCB_X (0), PCB_X (gport->width  + 1));
+  region.Y1 = MIN (PCB_Y (0), PCB_Y (gport->height + 1));
+  region.X2 = MAX (PCB_X (0), PCB_X (gport->width  + 1));
+  region.Y2 = MAX (PCB_Y (0), PCB_Y (gport->height + 1));
   hid_expose_callback (&ghid_hid, &region, NULL);
   hidgl_flush_triangles (&buffer);
   glPopMatrix ();
