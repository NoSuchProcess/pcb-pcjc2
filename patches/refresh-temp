Bottom: 4037f5571923b8ed63a960ca476fddde6c4d3597
Top:    4bf4ef30dcd6cb94ca1eb5494faf98d7da8a6530
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-26 12:42:46 +0100

Refresh of draw-c-separate-out-common-cod

---

diff --git a/src/draw.c b/src/draw.c
index d3bc398..e25972c 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -449,6 +449,18 @@ hole_callback (const BoxType * b, void *cl)
   return 1;
 }
 
+static void
+DrawHoles (bool draw_plated, bool draw_unplated)
+{
+  int plated = -1;
+
+  if ( draw_plated && !draw_unplated) plated = 1;
+  if (!draw_plated &&  draw_unplated) plated = 0;
+
+  r_search (PCB->Data->pin_tree, drawn_area, NULL, hole_callback, &plated);
+  r_search (PCB->Data->via_tree, drawn_area, NULL, hole_callback, &plated);
+}
+
 typedef struct
 {
   int nplated;
@@ -468,6 +480,18 @@ hole_counting_callback (const BoxType * b, void *cl)
 }
 
 static void
+CountHoles (int *plated, int *unplated)
+{
+  HoleCountStruct hcs = {0, 0};
+
+  r_search (PCB->Data->pin_tree, drawn_area, NULL, hole_counting_callback, &hcs);
+  r_search (PCB->Data->via_tree, drawn_area, NULL, hole_counting_callback, &hcs);
+
+  if (plated != NULL) *plated = hcs.nplated;
+  if (unplated != NULL) *unplated = hcs.nunplated;
+}
+
+static void
 _draw_line (LineType *line)
 {
   gui->set_line_cap (Output.fgGC, Trace_Cap);
@@ -638,12 +662,12 @@ static void
 DrawEverything (BoxTypePtr drawn_area)
 {
   int i, ngroups, side;
-  int plated;
   int component, solder;
   /* This is the list of layer groups we will draw.  */
   int do_group[MAX_LAYER];
   /* This is the reverse of the order in which we draw them.  */
   int drawn_groups[MAX_LAYER];
+  int plated, unplated;
   bool paste_empty;
 
   PCB->Data->SILKLAYER.Color = PCB->ElementColor;
@@ -698,29 +722,15 @@ DrawEverything (BoxTypePtr drawn_area)
     DrawPPV (SWAP_IDENT ? solder : component, drawn_area);
   else
     {
-      HoleCountStruct hcs;
-      hcs.nplated = hcs.nunplated = 0;
-      r_search (PCB->Data->pin_tree, drawn_area, NULL, hole_counting_callback,
-		&hcs);
-      r_search (PCB->Data->via_tree, drawn_area, NULL, hole_counting_callback,
-		&hcs);
-      if (hcs.nplated && gui->set_layer ("plated-drill", SL (PDRILL, 0), 0))
-	{
-	  plated = 1;
-	  r_search (PCB->Data->pin_tree, drawn_area, NULL, hole_callback,
-		    &plated);
-	  r_search (PCB->Data->via_tree, drawn_area, NULL, hole_callback,
-		    &plated);
-	}
-      if (hcs.nunplated && gui->set_layer ("unplated-drill", SL (UDRILL, 0), 0))
-	{
-	  plated = 0;
-	  r_search (PCB->Data->pin_tree, drawn_area, NULL, hole_callback,
-		    &plated);
-	  r_search (PCB->Data->via_tree, drawn_area, NULL, hole_callback,
-		    &plated);
-	}
+      CountHoles (&plated, &unplated);
+
+      if (plated && gui->set_layer ("plated-drill", SL (PDRILL, 0), 0))
+        DrawHoles (true, false);
+
+      if (unplated && gui->set_layer ("unplated-drill", SL (PDRILL, 0), 0))
+        DrawHoles (false, true);
     }
+
   /* Draw the solder mask if turned on */
   if (gui->set_layer ("componentmask", SL (MASK, TOP), 0))
     DrawMask (COMPONENT_LAYER, drawn_area);
