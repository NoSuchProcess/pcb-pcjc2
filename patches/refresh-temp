Bottom: 0d5872f2afb6d3593535b2d47f0c4906fc629e2d
Top:    451c4b6897be5a902ce9231dcb3828fb319f1b64
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-11-21 18:51:31 +0000

Refresh of add-vrml-model-rendering-suppo

---

diff --git a/src/hid/common/hidgl_geometry.h b/src/hid/common/hidgl_geometry.h
index cf8b60a..92a722a 100644
--- a/src/hid/common/hidgl_geometry.h
+++ b/src/hid/common/hidgl_geometry.h
@@ -25,9 +25,9 @@
 typedef struct _hidgl_geometry hidgl_geometry;
 
 struct geometry_class {
-  void create (void); /* How do we create a geometry without some concrete data? */
-  void draw (void);   /* What assumptions are made about the GL state prior to calling this? */
-  void free (void);   /* Clean up any internal state and delete */
+  void (*create) (void); /* How do we create a geometry without some concrete data? */
+  void (*draw) (void);   /* What assumptions are made about the GL state prior to calling this? */
+  void (*free) (void);   /* Clean up any internal state and delete */
 };
 
 /* Subclasses required / planned / thought of :
@@ -38,11 +38,13 @@ struct geometry_class {
  * hidgl_brep_geometry (EXAMPLE)
  */
 
+char *notes =
 "tristrip_geometry and traiangle geometry probably share some common data-storage stuff?"
 "Should we do like VRML and keep data-definition separate from the defining geometry?"
 "Should we create a data-storage class for reading the meshes / vertex data into?"
-""
+;
 
+#if 0
 Need something which looks a little like the following:
 
 Group / transform node
@@ -58,6 +60,7 @@ Group / transform node
                                        |            `-> Geometry
                                        `---> Shape -+-> Appearance / material
                                                     `-> Geometry
+#endif
 
 
 hidgl_geometry *hidgl_geometry_new (char *name);
