Bottom: 0aab6bac5ccc7d8873a12c7cd3835a94df1142c6
Top:    f99078587eb5f60233498f63cf2e9c7929d4b527
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-11-15 02:18:58 +0000

Refresh of remove-hid-set_draw_xor-api

---

diff --git a/src/hid.h b/src/hid.h
index 63fb358..c64c3bd 100644
--- a/src/hid.h
+++ b/src/hid.h
@@ -371,54 +371,6 @@ typedef enum
 
     HID_DRAW_API *graphics;
 
-<<<<<<< current
-=======
-    /* Special note about the "erase" color: To use this color, you must
-       use this function to tell the HID when you're using it.  At the
-       beginning of a layer redraw cycle (i.e. after set_layer), call
-       use_mask() to redirect output to a buffer.  Draw to the buffer
-       (using regular HID calls) using regular and "erase" colors.  Then
-       call use_mask(HID_MASK_OFF) to flush the buffer to the HID.  If
-       you use the "erase" color when use_mask is disabled, it simply
-       draws in the background color.  */
-    void (*use_mask) (int use_it_);
-    /* Flush the buffer and return to non-mask operation.  */
-#define HID_MASK_OFF 0
-    /* Polygons being drawn before clears.  */
-#define HID_MASK_BEFORE 1
-    /* Clearances being drawn.  */
-#define HID_MASK_CLEAR 2
-    /* Polygons being drawn after clears.  */
-#define HID_MASK_AFTER 3
-
-    /* Set a color.  Names can be like "red" or "#rrggbb" or special
-       names like "erase".  *Always* use the "erase" color for removing
-       ink (like polygon reliefs or thermals), as you cannot rely on
-       knowing the background color or special needs of the HID.  Always
-       use the "drill" color to draw holes.  You may assume this is
-       cheap enough to call inside the redraw callback, but not cheap
-       enough to call for each item drawn. */
-    void (*set_color) (hidGC gc_, const char *name_);
-
-    /* Set the line style.  While calling this is cheap, calling it with
-       different values each time may be expensive, so grouping items by
-       line style is helpful.  */
-    void (*set_line_cap) (hidGC gc_, EndCapStyle style_);
-    void (*set_line_width) (hidGC gc_, Coord width_);
-    /* Blends 20% or so color with 80% background.  Only used for
-       assembly drawings so far. */
-    void (*set_draw_faded) (hidGC gc_, int faded_);
-
-    /* The usual drawing functions.  "draw" means to use segments of the
-       given width, whereas "fill" means to fill to a zero-width
-       outline.  */
-    void (*draw_line) (hidGC gc_, Coord x1_, Coord y1_, Coord x2_, Coord y2_);
-    void (*draw_arc) (hidGC gc_, Coord cx_, Coord cy_, Coord xradius_, Coord yradius_,
-		      Angle start_angle_, Angle delta_angle_);
-    void (*draw_rect) (hidGC gc_, Coord x1_, Coord y1_, Coord x2_, Coord y2_);
-    void (*fill_circle) (hidGC gc_, Coord cx_, Coord cy_, Coord radius_);
-    void (*fill_polygon) (hidGC gc_, int n_coords_, Coord *x_, Coord *y_);
->>>>>>> patched
     void (*fill_pcb_polygon) (hidGC gc_, PolygonType *poly,
                               const BoxType *clip_box);
     void (*thindraw_pcb_polygon) (hidGC gc_, PolygonType *poly,
