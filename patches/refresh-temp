Bottom: f72e0350d36f1174648f8089a6e78df72eaa7a3d
Top:    2fd42ccc10506b3c7c815416688e2252317d3982
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-10-19 21:06:15 +0100

Refresh of temp-delete-me

---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index b2768cb..e04a398 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -193,6 +193,8 @@ static void draw_cap (double width, int x, int y, double angle, double scale)
   int slices = M_PI * radius / scale / PIXELS_PER_CIRCLINE;
   int i;
 
+  return 0;
+
   if (slices < MIN_TRIANGLES_PER_CAP)
     slices = MIN_TRIANGLES_PER_CAP;
 
@@ -391,6 +393,8 @@ hidgl_fill_circle (int vx, int vy, int vr, double scale)
   int slices;
   int i;
 
+  return;
+
   slices = M_PI * 2 * vr / scale / PIXELS_PER_CIRCLINE;
 
   if (slices < MIN_TRIANGLES_PER_CIRCLE)
@@ -672,7 +676,7 @@ hidgl_fill_pcb_polygon (PolygonType *poly, const BoxType *clip_box, double scale
    */
   /* Drawing operations now set our reference bit in the stencil buffer */
 
-  r_search (poly->Clipped->contour_tree, clip_box, NULL, do_hole, &info);
+//  r_search (poly->Clipped->contour_tree, clip_box, NULL, do_hole, &info);
   hidgl_flush_triangles (&buffer);
 
   /* Drawing operations as masked to areas where the stencil buffer is '0' */
diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index 3caa063..cf7f2dc 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -1171,6 +1171,7 @@ DrawLayerGroup (int group, const BoxType * screen)
         glPopAttrib ();
       }
 
+#if 1
       /* draw all polygons on this layer */
       if (Layer->PolygonN) {
         info.Layer = Layer;
@@ -1192,6 +1193,7 @@ DrawLayerGroup (int group, const BoxType * screen)
           glPopAttrib ();
         }
       }
+#endif
 
       /* Draw pins and vias on this layer */
       if (rv) {
@@ -1411,8 +1413,6 @@ ghid_port_drawing_area_expose_event_cb (GtkWidget * widget,
   GdkGLContext* pGlContext = gtk_widget_get_gl_context (widget);
   GdkGLDrawable* pGlDrawable = gtk_widget_get_gl_drawable (widget);
 
-//  if (!one_shot) return;
-
   /* make GL-context "current" */
   if (!gdk_gl_drawable_gl_begin (pGlDrawable, pGlContext)) {
     return FALSE;
