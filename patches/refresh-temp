Bottom: 3edded9a42dad188c814b8a3227a45eeaf5d17a1
Top:    f0721e599c527bafe362d30ebdddd544f974a02c
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-09-15 00:24:21 +0100

Refresh of wip-fix-some-undo-bugs

---

diff --git a/src/report.c b/src/report.c
index 4d5e27b..0e89425 100644
--- a/src/report.c
+++ b/src/report.c
@@ -783,6 +783,7 @@ ReportNetLengthByName (char *tofind, int x, int y)
   RestoreUndoSerialNumber ();
   ResetFoundLinesAndPolygons (true);
   RestoreUndoSerialNumber ();
+  IncrementUndoSerialNumber ();
 
 #if defined(USE_RE)
       use_re = 1;
@@ -805,6 +806,7 @@ ReportNetLengthByName (char *tofind, int x, int y)
 	      regerror (result, &elt_pattern, errorstring, 128);
 	      Message (_("regexp error: %s\n"), errorstring);
 	      regfree (&elt_pattern);
+              Undo (true);
 	      return (1);
 	    }
 #endif
@@ -812,6 +814,7 @@ ReportNetLengthByName (char *tofind, int x, int y)
 	  if ((elt_pattern = re_comp (tofind)) != NULL)
 	    {
 	      Message (_("re_comp error: %s\n"), elt_pattern);
+              Undo (true);
 	      return (false);
 	    }
 #endif
@@ -862,6 +865,7 @@ ReportNetLengthByName (char *tofind, int x, int y)
   if (!net_found)
     {
       gui->log ("No net named %s\n", tofind);
+      Undo (true);
       return 1;
     }
 #ifdef HAVE_REGCOMP
@@ -875,11 +879,13 @@ ReportNetLengthByName (char *tofind, int x, int y)
   if (!found && net_found)
   {
       gui->log ("Net found, but no lines or arcs were flagged.\n");
+      Undo (true);
       return 1;
   }
   else if (!found)
   {
       gui->log ("Net not found.\n");
+      Undo (true);
       return 1;
   }
 
@@ -891,6 +897,7 @@ ReportNetLengthByName (char *tofind, int x, int y)
     else
       gui->log ("Net length: %s\n", buf);
   }
+  Undo (true);
   return 0;
 }
 
diff --git a/src/undo.c b/src/undo.c
index 38fd1bd..dfb0285 100644
--- a/src/undo.c
+++ b/src/undo.c
@@ -1184,6 +1184,7 @@ RestoreUndoSerialNumber (void)
 {
   if (added_undo_whilst_bumped)
     Message (_("ERROR: Operations were added to the Undo stack with an incorrect serial number\n"));
+  added_undo_whilst_bumped = false;
   Serial = SavedSerial;
 }
