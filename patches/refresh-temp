Bottom: 908e721d2616dcdf617f2738a01211fc24844868
Top:    1142d3a2be9531e93fb1cb5f7229efe76c67fd7b
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-10-16 16:00:17 +0100

Refresh of work-in-progress-on-subcomposi

---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index 9389885..f4b32b7 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -728,6 +728,16 @@ hidgl_stencil_bits (void)
   return stencil_bits;
 }
 
+static void
+hidgl_clean_unassigned_stencil (void)
+{
+  glPushAttrib (GL_STENCIL_BUFFER_BIT);
+  glStencilMask (~assigned_bits);
+  glClearStencil (0);
+  glClear (GL_STENCIL_BUFFER_BIT);
+  glPopAttrib ();
+}
+
 int
 hidgl_assign_clear_stencil_bit (void)
 {
@@ -749,7 +759,6 @@ hidgl_assign_clear_stencil_bit (void)
         {
           assigned_bits |= test;
           dirty_bits |= test;
-//          printf ("Assigning an already clean stencil bitplane %x\n", test);
           return test;
         }
       else if (!first_dirty && !(test & assigned_bits))
@@ -758,19 +767,11 @@ hidgl_assign_clear_stencil_bit (void)
         }
     }
 
-//  printf ("Cleaning bitplanes %x, assigned are %x\n", ~assigned_bits & dirty_bits, assigned_bits);
-
   /* Didn't find any non dirty planes. Clear those dirty ones which aren't in use */
-  glPushAttrib (GL_STENCIL_BUFFER_BIT);
-  glStencilMask (~assigned_bits & dirty_bits);
-  glClearStencil (0);
-  glClear (GL_STENCIL_BUFFER_BIT);
-  glPopAttrib ();
-
+  hidgl_clean_unassigned_stencil ();
   assigned_bits |= first_dirty;
   dirty_bits = assigned_bits;
 
-//  printf ("Assigning the first of the dirty bitplanes we just cleaned, %x\n", first_dirty);
   return first_dirty;
 }
