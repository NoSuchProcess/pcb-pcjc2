Bottom: 059584ef7ec1a14ac709dd0550fc240d4d988def
Top:    6de5ea54cf3d9d46dde303144896f2a20cb06fea
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-09 20:39:31 +0000

Refresh of hid-lesstif-revert-some-boolea

---

diff --git a/src/hid/lesstif/dialogs.c b/src/hid/lesstif/dialogs.c
index 6c7a2de..a56e3a3 100644
--- a/src/hid/lesstif/dialogs.c
+++ b/src/hid/lesstif/dialogs.c
@@ -135,7 +135,7 @@ Load (int argc, char **argv, int x, int y)
 
   n = 0;
   stdarg (XmNpattern, pattern);
-  stdarg (XmNmustMatch, true);
+  stdarg (XmNmustMatch, True);
   stdarg (XmNselectionLabelString, xms_load);
   XtSetValues (fsb, args, n);
 
@@ -188,7 +188,7 @@ LoadVendor (int argc, char **argv, int x, int y)
 
   n = 0;
   stdarg (XmNpattern, pattern);
-  stdarg (XmNmustMatch, true);
+  stdarg (XmNmustMatch, True);
   stdarg (XmNselectionLabelString, xms_loadv);
   XtSetValues (fsb, args, n);
 
@@ -255,7 +255,7 @@ Save (int argc, char **argv, int x, int y)
 
   n = 0;
   stdarg (XmNpattern, pattern);
-  stdarg (XmNmustMatch, false);
+  stdarg (XmNmustMatch, False);
   stdarg (XmNselectionLabelString, xms_save);
   XtSetValues (fsb, args, n);
 
@@ -325,7 +325,7 @@ lesstif_logv (const char *fmt, va_list ap)
       Widget clear_button, dismiss_button;
 
       n = 0;
-      stdarg (XmNautoUnmanage, false);
+      stdarg (XmNautoUnmanage, False);
       stdarg (XmNwidth, 600);
       stdarg (XmNheight, 200);
       stdarg (XmNtitle, "PCB Log");
@@ -349,9 +349,9 @@ lesstif_logv (const char *fmt, va_list ap)
 		     (XtCallbackProc) log_dismiss, 0);
 
       n = 0;
-      stdarg (XmNeditable, false);
+      stdarg (XmNeditable, False);
       stdarg (XmNeditMode, XmMULTI_LINE_EDIT);
-      stdarg (XmNcursorPositionVisible, true);
+      stdarg (XmNcursorPositionVisible, True);
       stdarg (XmNtopAttachment, XmATTACH_FORM);
       stdarg (XmNleftAttachment, XmATTACH_FORM);
       stdarg (XmNrightAttachment, XmATTACH_FORM);
@@ -474,7 +474,7 @@ lesstif_confirm_dialog (char *msg, ...)
   wait_for_dialog (confirm_dialog);
 
   n = 0;
-  stdarg (XmNdefaultPosition, false);
+  stdarg (XmNdefaultPosition, False);
   XtSetValues (confirm_dialog, args, n);
 
   return ok;
@@ -511,16 +511,16 @@ lesstif_report_dialog (char *title, char *msg)
 	return;
 
       n = 0;
-      stdarg (XmNautoUnmanage, false);
+      stdarg (XmNautoUnmanage, False);
       stdarg (XmNwidth, 600);
       stdarg (XmNheight, 200);
       stdarg (XmNtitle, title);
       report_form = XmCreateFormDialog (mainwind, "report", args, n);
 
       n = 0;
-      stdarg (XmNeditable, false);
+      stdarg (XmNeditable, False);
       stdarg (XmNeditMode, XmMULTI_LINE_EDIT);
-      stdarg (XmNcursorPositionVisible, false);
+      stdarg (XmNcursorPositionVisible, False);
       stdarg (XmNtopAttachment, XmATTACH_FORM);
       stdarg (XmNleftAttachment, XmATTACH_FORM);
       stdarg (XmNrightAttachment, XmATTACH_FORM);
@@ -560,7 +560,7 @@ lesstif_prompt_for (const char *msg, const char *default_string)
   if (prompt_dialog == 0)
     {
       n = 0;
-      stdarg (XmNautoUnmanage, false);
+      stdarg (XmNautoUnmanage, False);
       stdarg (XmNtitle, "PCB Prompt");
       prompt_dialog = XmCreateFormDialog (mainwind, "prompt", args, n);
 
@@ -578,7 +578,7 @@ lesstif_prompt_for (const char *msg, const char *default_string)
       stdarg (XmNbottomAttachment, XmATTACH_WIDGET);
       stdarg (XmNleftAttachment, XmATTACH_FORM);
       stdarg (XmNrightAttachment, XmATTACH_FORM);
-      stdarg (XmNeditable, true);
+      stdarg (XmNeditable, True);
       prompt_text = XmCreateText (prompt_dialog, "text", args, n);
       XtManageChild (prompt_text);
       XtAddCallback (prompt_text, XmNactivateCallback,
@@ -752,20 +752,20 @@ lesstif_attribute_dialog (HID_Attribute * attrs,
 	  break;
 	case HID_String:
 	  stdarg (XmNcolumns, 40);
-	  stdarg (XmNresizeWidth, true);
+	  stdarg (XmNresizeWidth, True);
 	  stdarg (XmNvalue, results[i].str_value);
 	  wl[i] = XmCreateTextField (form, attrs[i].name, args, n);
 	  break;
 	case HID_Integer:
 	  stdarg (XmNcolumns, 13);
-	  stdarg (XmNresizeWidth, true);
+	  stdarg (XmNresizeWidth, True);
 	  sprintf (buf, "%d", results[i].int_value);
 	  stdarg (XmNvalue, buf);
 	  wl[i] = XmCreateTextField (form, attrs[i].name, args, n);
 	  break;
 	case HID_Real:
 	  stdarg (XmNcolumns, 16);
-	  stdarg (XmNresizeWidth, true);
+	  stdarg (XmNresizeWidth, True);
 	  sprintf (buf, "%g", results[i].real_value);
 	  stdarg (XmNvalue, buf);
 	  wl[i] = XmCreateTextField (form, attrs[i].name, args, n);
@@ -1269,7 +1269,7 @@ AdjustSizes (int argc, char **argv, int x, int y)
       stdarg (XmNmarginHeight, 3);
       stdarg (XmNhorizontalSpacing, 3);
       stdarg (XmNverticalSpacing, 3);
-      stdarg (XmNautoUnmanage, false);
+      stdarg (XmNautoUnmanage, False);
       stdarg (XmNtitle, "Board Sizes");
       sizes_dialog = XmCreateFormDialog (mainwind, "sizes", args, n);
 
@@ -1640,8 +1640,8 @@ EditLayerGroups (int argc, char **argv, int x, int y)
 	      stdarg (XmNbottomPosition, (i + 1) * MAX_LAYER);
 	      stdarg (XmNlabelString, XmStringCreateLocalized (" "));
 	      stdarg (XmNspacing, 0);
-	      stdarg (XmNvisibleWhenOff, true);
-	      stdarg (XmNfillOnSelect, true);
+	      stdarg (XmNvisibleWhenOff, True);
+	      stdarg (XmNfillOnSelect, True);
 	      stdarg (XmNshadowThickness, 0);
 	      stdarg (XmNmarginWidth, 0);
 	      stdarg (XmNmarginHeight, 0);
@@ -1794,14 +1794,14 @@ lesstif_attributes_need_rows (int new_max)
 		     (XtPointer) (size_t) attr_max_rows);
 
       n = 0;
-      stdarg (XmNresizeWidth, true);
+      stdarg (XmNresizeWidth, True);
       attr_row[attr_max_rows].w_name = XmCreateTextField (f_top, "name", args, n);
       XtManageChild (attr_row[attr_max_rows].w_name);
       XtAddCallback (attr_row[attr_max_rows].w_name, XmNvalueChangedCallback,
 		     (XtCallbackProc) fiddle_with_bb_layout, NULL);
 
       n = 0;
-      stdarg (XmNresizeWidth, true);
+      stdarg (XmNresizeWidth, True);
       attr_row[attr_max_rows].w_value = XmCreateTextField (f_top, "value", args, n);
       XtManageChild (attr_row[attr_max_rows].w_value);
       XtAddCallback (attr_row[attr_max_rows].w_value, XmNvalueChangedCallback,
@@ -1897,7 +1897,7 @@ lesstif_attributes_dialog (char *owner, AttributeListType *attrs_list)
   if (attr_dialog == NULL)
     {
       n = 0;
-      stdarg (XmNautoUnmanage, false);
+      stdarg (XmNautoUnmanage, False);
       stdarg (XmNtitle, owner);
       stdarg (XmNwidth, 400);
       stdarg (XmNheight, 300);
@@ -2049,7 +2049,7 @@ ImportGUI (int argc, char **argv, int x, int y)
 
   n = 0;
   stdarg (XmNpattern, xms_sch);
-  stdarg (XmNmustMatch, true);
+  stdarg (XmNmustMatch, True);
   stdarg (XmNselectionLabelString, xms_import);
   XtSetValues (fsb, args, n);
 
diff --git a/src/hid/lesstif/main.c b/src/hid/lesstif/main.c
index 5caec02..76dce1a 100644
--- a/src/hid/lesstif/main.c
+++ b/src/hid/lesstif/main.c
@@ -664,7 +664,7 @@ command_callback (Widget w, XtPointer uptr, XmTextVerifyCallbackStruct * cbs)
 }
 
 static void
-command_event_handler (Widget w, XtPointer p, XEvent * e, bool * cont)
+command_event_handler (Widget w, XtPointer p, XEvent * e, Boolean * cont)
 {
   char buf[10];
   KeySym sym;
@@ -680,7 +680,7 @@ command_event_handler (Widget w, XtPointer p, XEvent * e, bool * cont)
 	  XtUnmanageChild (m_cmd);
 	  XtUnmanageChild (m_cmd_label);
 	  XmTextSetString (w, "");
-	  *cont = false;
+	  *cont = False;
 	  break;
 	}
       break;
@@ -1294,7 +1294,7 @@ mod_changed (XKeyEvent * e, int set)
 }
 
 static void
-work_area_input (Widget w, XtPointer v, XEvent * e, bool * ctd)
+work_area_input (Widget w, XtPointer v, XEvent * e, Boolean * ctd)
 {
   static int pressed_button = 0;
   static int ignore_release = 0;
@@ -1673,7 +1673,7 @@ work_area_first_expose (Widget work_area, void *me,
       XRenderColor a = {0, 0, 0, 0x8000};
 
       pale_pixmap = XCreatePixmap (display, window, 1, 1, 8);
-      pa.repeat = true;
+      pa.repeat = True;
       pale_picture = XRenderCreatePicture (display, pale_pixmap,
 			    XRenderFindStandardFormat(display, PictStandardA8),
 			    CPRepeat, &pa);
@@ -1813,7 +1813,7 @@ lesstif_do_export (HID_Attr_Val * options)
   XtManageChild (hscroll);
 
   n = 0;
-  stdarg (XmNresize, true);
+  stdarg (XmNresize, True);
   stdarg (XmNresizePolicy, XmRESIZE_ANY);
   messages = XmCreateForm (mainwind, "messages", args, n);
   XtManageChild (messages);
@@ -1908,7 +1908,7 @@ typedef union
   char *s;
 } val_union;
 
-static bool
+static Boolean
 cvtres_string_to_double (Display * d, XrmValue * args, Cardinal * num_args,
 			 XrmValue * from, XrmValue * to,
 			 XtPointer * converter_data)
@@ -1920,7 +1920,7 @@ cvtres_string_to_double (Display * d, XrmValue * args, Cardinal * num_args,
   else
     to->addr = (XPointer) & rv;
   to->size = sizeof (rv);
-  return true;
+  return True;
 }
 
 static void
@@ -2110,7 +2110,7 @@ lesstif_parse_arguments (int *argc, char ***argv)
   XmAddWMProtocolCallback (appwidget, close_atom,
 			   (XtCallbackProc) mainwind_delete_cb, 0);
 
-  /*  XSynchronize(display, true); */
+  /*  XSynchronize(display, True); */
 
   XtGetApplicationResources (appwidget, new_values, new_resources,
 			     rmax, 0, 0);
@@ -2400,7 +2400,7 @@ lesstif_update_status_line ()
 static int idle_proc_set = 0;
 static int need_redraw = 0;
 
-static bool
+static Boolean
 idle_proc (XtPointer dummy)
 {
   if (need_redraw)
@@ -2794,7 +2794,7 @@ idle_proc (XtPointer dummy)
 
   show_crosshair (1);
   idle_proc_set = 0;
-  return true;
+  return True;
 }
 
 void
diff --git a/src/hid/lesstif/menu.c b/src/hid/lesstif/menu.c
index 9983d42..aca306d 100644
--- a/src/hid/lesstif/menu.c
+++ b/src/hid/lesstif/menu.c
@@ -271,7 +271,7 @@ LayersChanged (int argc, char **argv, int x, int y)
 	    {
 	      stdarg (XmNforeground, bg_color);
 	      stdarg (XmNbackground, fg_colors[i]);
-	      stdarg (XmNset, current_layer == i ? true : false);
+	      stdarg (XmNset, current_layer == i ? True : False);
 	    }
 	  XtSetValues (lb->w[i], args, n);
 
@@ -398,7 +398,7 @@ layerpick_button_callback (Widget w, int layer,
       if (!lb->is_pick)
 	continue;
       for (i = 0; i < LB_NUMPICK; i++)
-	XmToggleButtonSetState (lb->w[i], layer == i, false);
+	XmToggleButtonSetState (lb->w[i], layer == i, False);
     }
   switch (layer)
     {
@@ -1305,7 +1305,7 @@ add_resource_to_menu (Widget menu, Resource * node, XtCallbackProc callback)
 
 		if (resource_value (node->v[i].subres, "set"))
 		  {
-		    stdarg (XmNset, true);
+		    stdarg (XmNset, True);
 		  }
 		stdarg (XmNindicatorType, XmONE_OF_MANY);
 		btn = XmCreateToggleButton (menu, "menubutton", args, n);
diff --git a/src/hid/lesstif/netlist.c b/src/hid/lesstif/netlist.c
index 7d31197..ee6d723 100644
--- a/src/hid/lesstif/netlist.c
+++ b/src/hid/lesstif/netlist.c
@@ -89,7 +89,7 @@ netlist_select (Widget w, void *v, XmListCallbackStruct * cbs)
   str = XmStringCreateLocalized (name);
   XmListReplaceItemsPos (netlist_list, &str, 1, pos);
   XmStringFree (str);
-  XmListSelectPos (netlist_list, pos, false);
+  XmListSelectPos (netlist_list, pos, False);
 }
 
 static void
@@ -175,7 +175,7 @@ nbcb_std_callback (Widget w, Std_Nbcb_Func v, XmPushButtonCallbackStruct * cbs)
 {
   int *posl, posc, i;
   XmString **items, **selected;
-  if (XmListGetSelectedPos (netlist_list, &posl, &posc) == false)
+  if (XmListGetSelectedPos (netlist_list, &posl, &posc) == False)
     return;
   if (v == nbcb_find)
     hid_actionl ("connection", "reset", NULL);
@@ -314,7 +314,7 @@ build_netlist_dialog ()
   n = 0;
   stdarg (XmNresizePolicy, XmRESIZE_GROW);
   stdarg (XmNtitle, "Netlists");
-  stdarg (XmNautoUnmanage, false);
+  stdarg (XmNautoUnmanage, False);
   netlist_dialog = XmCreateFormDialog (mainwind, "netlist", args, n);
 
   n = 0;
@@ -435,15 +435,15 @@ LesstifNetlistShow (int argc, char **argv, int x, int y)
 	  XmString item;
 	  int vis = 0;
 
-	  /* Select net first, 'true' causes pick_net() to be invoked */
+	  /* Select net first, 'True' causes pick_net() to be invoked */
 	  item = XmStringCreateLocalized (net->Name);
-	  XmListSelectItem (netlist_list, item, true);
+	  XmListSelectItem (netlist_list, item, True);
 	  XmListSetItem (netlist_list, item);
 	  XmStringFree (item);
 
 	  /* Now the netnode_list has the right contents */
 	  item = XmStringCreateLocalized (argv[0]);
-	  XmListSelectItem (netnode_list, item, false);
+	  XmListSelectItem (netnode_list, item, False);
 
 	  /*
 	   * Only force the item to the top if there are enough to scroll.
@@ -470,7 +470,7 @@ LesstifNetlistShow (int argc, char **argv, int x, int y)
 
 	      item = XmStringCreateLocalized (net->Name);
 	      XmListSetItem (netlist_list, item);
-	      XmListSelectItem (netlist_list, item, true);
+	      XmListSelectItem (netlist_list, item, True);
 	      XmStringFree (item);
 	    }
 	}
diff --git a/src/hid/lesstif/styles.c b/src/hid/lesstif/styles.c
index fb9d3b3..d3dcdaa 100644
--- a/src/hid/lesstif/styles.c
+++ b/src/hid/lesstif/styles.c
@@ -364,7 +364,7 @@ AdjustStyle (int argc, char **argv, int x, int y)
       xms_mil = XmStringCreateLocalized ("mil");
 
       n = 0;
-      stdarg (XmNautoUnmanage, false);
+      stdarg (XmNautoUnmanage, False);
       stdarg (XmNtitle, "Route Styles");
       style_dialog = XmCreateFormDialog (mainwind, "style", args, n);
