Bottom: 6d2629509e5b2f917f2eec2973b136c8b0615fb4
Top:    2efb98e05a79f0359cff1ef728721591ec32e57f
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-11-21 19:27:35 +0000

Refresh of add-vrml-model-rendering-suppo

---

diff --git a/src/hid/common/hidgl_package_acy_resistor.c b/src/hid/common/hidgl_package_acy_resistor.c
index 33b4273..060b21a 100644
--- a/src/hid/common/hidgl_package_acy_resistor.c
+++ b/src/hid/common/hidgl_package_acy_resistor.c
@@ -344,8 +344,6 @@ setup_resistor_texture (ElementType *element, GLfloat *res_body_color)
   return false;
 }
 
-static void invert_4x4 (float m[4][4], float out[4][4]);
-
 static GLfloat *debug_lines = NULL;
 static int no_debug_lines = 0;
 static int max_debug_lines = 0;
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 663647b..dc3522b 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -2535,24 +2535,24 @@ ghid_render_pixmap (int cx, int cy, double zoom, int width, int height, int dept
 bool
 ghid_unproject_to_z_plane (int ex, int ey, int vz, int *vx, int *vy)
 {
-  double mat[2][2];
-  double inv_mat[2][2];
-  double x, y;
-  double fvz;
-  double vpx, vpy;
-  double fvx, fvy;
+  float mat[2][2];
+  float inv_mat[2][2];
+  float x, y;
+  float fvz;
+  float vpx, vpy;
+  float fvx, fvy;
   GtkWidget *widget = gport->drawing_area;
 
   /* FIXME: Dirty kludge.. I know what our view parameters are here */
-  double aspect = (double)widget->allocation.width / (double)widget->allocation.height;
-  double width = 2. * aspect;
-  double height = 2.;
-  double near = 1.;
-  // double far = 24.;
+  float aspect = (float)widget->allocation.width / (float)widget->allocation.height;
+  float width = 2. * aspect;
+  float height = 2.;
+  float near = 1.;
+  // float far = 24.;
 
   /* This is nasty beyond words, but I'm lazy and translating directly
    * from some untested maths I derived which used this notation */
-  double A, B, C, D, E, F, G, H, I, J, K, L;
+  float A, B, C, D, E, F, G, H, I, J, K, L;
 
   /* NB: last_modelview_matrix is transposed in memory! */
   A = last_modelview_matrix[0][0];
