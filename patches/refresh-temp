Bottom: 4b019a99ec150531d107c14ca59d8f3976157c5d
Top:    61958208dded08c85202bd0f54c0b72dfbe9053a
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-11-07 10:23:19 +0000

Refresh of debug-polygon-stuff

---

diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index b48c6bf..91fb370 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -1561,7 +1561,7 @@ HID ghid_hid = {
   ghid_draw_rect,
   ghid_fill_circle,
   ghid_fill_polygon,
-  ghid_fill_pcb_polygon,
+  common_fill_pcb_polygon, // ghid_fill_pcb_polygon,
   ghid_thindraw_pcb_polygon,
   ghid_fill_rect,
 
diff --git a/src/polygon.c b/src/polygon.c
index 2f82405..9669e91 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -1111,8 +1111,10 @@ UnsubtractArc (ArcType * arc, LayerType * l, PolygonType * p)
 
   if (!np)
     return 0;
+  printf ("Unsubtract call\n");
   if (!Unsubtract (np, p))
     return 0;
+  printf ("DONE call\n");
   clearPoly (PCB->Data, l, p, (const BoxType *) arc, 2 * UNSUBTRACT_BLOAT);
   return 1;
 }
diff --git a/src/polygon1.c b/src/polygon1.c
index 67f5665..f6da13f 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -105,7 +105,7 @@ if (UNLIKELY (((ptr) = malloc(sizeof(type))) == NULL)) \
 #undef DEBUG_JUMP
 #undef DEBUG_GATHER
 #undef DEBUG_ANGLE
-#undef DEBUG
+#define DEBUG
 #ifdef DEBUG
 #define DEBUGP(...) fprintf(stderr, ## __VA_ARGS__)
 #else
@@ -2499,10 +2499,15 @@ poly_AndSubtract_free (POLYAREA * ai, POLYAREA * bi,
     {
 
 #ifdef DEBUG
-      if (!poly_Valid (a))
+      if (!poly_Valid (a)) {
+        printf ("Polygon A fubar\n");
+        *(char *)0 = 0;
 	return -1;
-      if (!poly_Valid (b))
+      }
+      if (!poly_Valid (b)) {
+        printf ("Polygon B fubar\n");
 	return -1;
+      }
 #endif
       M_POLYAREA_intersect (&e, a, b, TRUE);
 
@@ -3148,12 +3153,14 @@ poly_Valid (POLYAREA * p)
 {
   PLINE *c;
 
-  if ((p == NULL) || (p->contours == NULL))
+  if ((p == NULL) || (p->contours == NULL)) {
+    printf ("p or p->contours was NULL\n");
     return FALSE;
+  }
 
   if (p->contours->Flags.orient == PLF_INV || poly_ChkContour (p->contours))
     {
-#ifndef NDEBUG
+//#ifndef NDEBUG
       VNODE *v;
       DEBUGP ("Invalid Outer PLINE\n");
       if (p->contours->Flags.orient == PLF_INV)
@@ -3167,7 +3174,7 @@ poly_Valid (POLYAREA * p)
 	  fprintf (stderr, "Line [%d %d ", v->point[0], v->point[1]);
 	}
       while ((v = v->next) != &p->contours->head);
-#endif
+//#endif
       return FALSE;
     }
   for (c = p->contours->next; c != NULL; c = c->next)
@@ -3175,7 +3182,7 @@ poly_Valid (POLYAREA * p)
       if (c->Flags.orient == PLF_DIR ||
 	  poly_ChkContour (c) || !poly_ContourInContour (p->contours, c))
 	{
-#ifndef NDEBUG
+//#ifndef NDEBUG
 	  VNODE *v;
 	  DEBUGP ("Invalid Inner PLINE orient = %d\n", c->Flags.orient);
 	  if (c->Flags.orient == PLF_DIR)
@@ -3192,7 +3199,7 @@ poly_Valid (POLYAREA * p)
 	      fprintf (stderr, "Line [%d %d ", v->point[0], v->point[1]);
 	    }
 	  while ((v = v->next) != &c->head);
-#endif
+//#endif
 	  return FALSE;
 	}
     }
