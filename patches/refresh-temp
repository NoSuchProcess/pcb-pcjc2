Bottom: e220b4930d718578fc6e9ae6d7902d26dbbc3fc5
Top:    1116961644fe14b778a705068cc3ad1dac5c3eca
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-09-03 15:56:17 +0100

Refresh of hid-gtk-don-t-use-a-gtkeventbo

---

diff --git a/src/hid/gtk/gui-top-window.c b/src/hid/gtk/gui-top-window.c
index 95f39a2..f327573 100644
--- a/src/hid/gtk/gui-top-window.c
+++ b/src/hid/gtk/gui-top-window.c
@@ -1178,8 +1178,6 @@ make_mode_buttons (GHidPort * port)
  * ---------------------------------------------------------------
  */
 
-static GtkWidget *ghid_left_sensitive_box;
-
 static gint
 delete_chart_cb (GtkWidget * widget, GdkEvent * event, GHidPort * port)
 {
@@ -1208,8 +1206,8 @@ static void
 ghid_build_pcb_top_window (void)
 {
   GtkWidget *window;
-  GtkWidget *vbox_main, *vbox_left, *hbox_middle, *hbox;
-  GtkWidget *ebox, *vbox, *frame;
+  GtkWidget *vbox_main, *hbox_middle, *hbox;
+  GtkWidget *vbox, *frame;
   GtkWidget *label;
   GHidPort *port = &ghid_port;
   gchar *s;
@@ -1305,26 +1303,20 @@ ghid_build_pcb_top_window (void)
 
 
   /* -- Left control bar */
-  ebox = gtk_event_box_new ();
-  gtk_widget_set_events (ebox, GDK_EXPOSURE_MASK);
-  gtk_box_pack_start (GTK_BOX (hbox_middle), ebox, FALSE, FALSE, 3);
-
-  /* 
-   * This box will also be made insensitive when the gui needs
+  /*
+   * This box will be made insensitive when the gui needs
    * a modal button GetLocation button press.
    */
-  ghid_left_sensitive_box = ebox;
-
-  vbox_left = gtk_vbox_new (FALSE, 0);
-  gtk_container_add (GTK_CONTAINER (ebox), vbox_left);
+  ghidgui->left_toolbar = gtk_vbox_new (FALSE, 0);
+  gtk_box_pack_start (GTK_BOX (hbox_middle), ghidgui->left_toolbar, FALSE, FALSE, 3);
 
-  vbox = ghid_scrolled_vbox(vbox_left, &scrolled,
-      GTK_POLICY_NEVER, GTK_POLICY_AUTOMATIC);
+  vbox = ghid_scrolled_vbox (ghidgui->left_toolbar, &scrolled,
+                             GTK_POLICY_NEVER, GTK_POLICY_AUTOMATIC);
   gtk_box_pack_start (GTK_BOX(vbox), ghidgui->layer_selector,
                       FALSE, FALSE, 0);
 
   ghidgui->mode_buttons0_frame_vbox = gtk_vbox_new (FALSE, 0);
-  gtk_box_pack_start (GTK_BOX(vbox_left),
+  gtk_box_pack_start (GTK_BOX(ghidgui->left_toolbar),
                       ghidgui->mode_buttons0_frame_vbox, FALSE, FALSE, 0);
 
   ghidgui->mode_buttons0_frame = gtk_frame_new (NULL);
@@ -1336,7 +1328,7 @@ ghid_build_pcb_top_window (void)
   make_mode_buttons (port);
 
   frame = gtk_frame_new(NULL);
-  gtk_box_pack_end(GTK_BOX(vbox_left), frame, FALSE, FALSE, 0);
+  gtk_box_pack_end (GTK_BOX (ghidgui->left_toolbar), frame, FALSE, FALSE, 0);
   vbox = gtk_vbox_new(FALSE, 0);
   gtk_container_add(GTK_CONTAINER(frame), vbox);
   hbox = gtk_hbox_new(FALSE, 0);
@@ -1514,7 +1506,7 @@ ghid_interface_input_signals_disconnect (void)
 void
 ghid_interface_set_sensitive (gboolean sensitive)
 {
-  gtk_widget_set_sensitive (ghid_left_sensitive_box, sensitive);
+  gtk_widget_set_sensitive (ghidgui->left_toolbar, sensitive);
   gtk_widget_set_sensitive (ghidgui->menu_hbox, sensitive);
 }
 
diff --git a/src/hid/gtk/gui.h b/src/hid/gtk/gui.h
index 8dfc203..1cb3865 100644
--- a/src/hid/gtk/gui.h
+++ b/src/hid/gtk/gui.h
@@ -107,6 +107,7 @@ typedef struct
     *menu_hbox, *compact_vbox, *compact_hbox, *position_hbox,
     *mode_buttons0_vbox, *mode_buttons1_hbox, *mode_buttons1_vbox,
     *mode_buttons0_frame, *mode_buttons1_frame, *mode_buttons0_frame_vbox;
+  GtkWidget *left_toolbar;
   GtkWidget *menu_bar, *layer_selector;
 
   GtkWidget *h_range, *v_range;
