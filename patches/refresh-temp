Bottom: 2326913aabdfe329256c2fb1bfb953d2dda3c4f6
Top:    bada76301e5f26789d023483c598878f2ae8b7da
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-01-22 16:36:50 +0000

Refresh of other-drawing-api-changes

---

diff --git a/src/draw.c b/src/draw.c
index b23cb2d..41dc647 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -71,9 +71,6 @@
  */
 static BoxType Block = {MAXINT, MAXINT, -MAXINT, -MAXINT};
 
-static int doing_pinout = 0;
-static bool doing_assy = false;
-
 /* ---------------------------------------------------------------------------
  * some local prototypes
  */
@@ -92,7 +89,7 @@ SetPVColor (DrawAPI *dapi, PinType *Pin, int Type)
 
   if (Type == VIA_TYPE)
     {
-      if (!doing_pinout
+      if (!dapi->doing_pinout
 	  && TEST_FLAG (WARNFLAG | SELECTEDFLAG | FOUNDFLAG, Pin))
 	{
 	  if (TEST_FLAG (WARNFLAG, Pin))
@@ -107,7 +104,7 @@ SetPVColor (DrawAPI *dapi, PinType *Pin, int Type)
     }
   else
     {
-      if (!doing_pinout
+      if (!dapi->doing_pinout
 	  && TEST_FLAG (WARNFLAG | SELECTEDFLAG | FOUNDFLAG, Pin))
 	{
 	  if (TEST_FLAG (WARNFLAG, Pin))
@@ -195,11 +192,10 @@ _draw_pv_name (DrawAPI *dapi, PinType *pv)
   text.Y = box.Y1;
   text.Direction = vert ? 1 : 0;
 
-  if (gui->gui)
-    doing_pinout++;
+  g_warn_if_fail (dapi->doing_overlay_text == false);
+  dapi->doing_overlay_text = gui->gui;
   DrawTextLowLevel (dapi, &text, 0);
-  if (gui->gui)
-    doing_pinout--;
+  dapi->doing_overlay_text = false;
 }
 
 static void
@@ -286,7 +282,7 @@ draw_pad_name (DrawAPI *dapi, PadType *pad)
 static void
 draw_pad (DrawAPI *dapi, PadType *pad)
 {
-  if (doing_pinout)
+  if (dapi->doing_pinout)
    dapi->gapi->set_color (dapi->fg_gc, PCB->PinColor);
   else if (TEST_FLAG (WARNFLAG | SELECTEDFLAG | FOUNDFLAG, pad))
    {
@@ -304,7 +300,7 @@ draw_pad (DrawAPI *dapi, PadType *pad)
 
   dapi->draw_pcb_pad (dapi, NULL, pad);
 
-  if (doing_pinout || TEST_FLAG (DISPLAYNAMEFLAG, pad))
+  if (dapi->doing_pinout || TEST_FLAG (DISPLAYNAMEFLAG, pad))
     draw_pad_name (dapi, pad);
 }
 
@@ -331,7 +327,7 @@ draw_element_name (DrawAPI *dapi, ElementType *element)
   if ((TEST_FLAG (HIDENAMESFLAG, PCB) && gui->gui) ||
       TEST_FLAG (HIDENAMEFLAG, element))
     return;
-  if (doing_pinout || doing_assy)
+  if (dapi->doing_overlay_text || dapi->doing_pinout || dapi->doing_assy)
     dapi->gapi->set_color (dapi->fg_gc, PCB->ElementColor);
   else if (TEST_FLAG (SELECTEDFLAG, &ELEMENT_TEXT (PCB, element)))
     dapi->gapi->set_color (dapi->fg_gc, PCB->ElementSelectedColor);
@@ -553,7 +549,7 @@ static void
 draw_element_package (DrawAPI *dapi, ElementType *element)
 {
   /* set color and draw lines, arcs, text and pins */
-  if (doing_pinout || doing_assy)
+  if (dapi->doing_pinout || dapi->doing_assy)
     dapi->gapi->set_color (dapi->fg_gc, PCB->ElementColor);
   else if (TEST_FLAG (SELECTEDFLAG, element))
     dapi->gapi->set_color (dapi->fg_gc, PCB->ElementSelectedColor);
@@ -596,14 +592,15 @@ PrintAssembly (DrawAPI *dapi, int side)
 {
   int side_group = GetLayerGroupNumberByNumber (max_copper_layer + side);
 
-  doing_assy = true;
+  g_warn_if_fail (dapi->doing_assy == false);
+  dapi->doing_assy = true;
   dapi->gapi->set_draw_faded (dapi->fg_gc, 1);
   dapi->draw_pcb_layer_group (dapi, side_group);
   dapi->gapi->set_draw_faded (dapi->fg_gc, 0);
 
   /* draw package */
   dapi->draw_silk_layer (dapi, side);
-  doing_assy = false;
+  dapi->doing_assy = false;
 }
 
 /* ---------------------------------------------------------------------------
@@ -850,7 +847,7 @@ DrawPPV (DrawAPI *dapi, int group)
       r_search (PCB->Data->via_tree, dapi->clip_box, NULL, via_callback, dapi);
       r_search (PCB->Data->via_tree, dapi->clip_box, NULL, hole_callback, &hole_info);
     }
-  if (PCB->PinOn || doing_assy)
+  if (PCB->PinOn || dapi->doing_assy)
     r_search (PCB->Data->pin_tree, dapi->clip_box, NULL, hole_callback, &hole_info);
 }
 
@@ -1296,8 +1293,7 @@ void
 DrawPin (PinType *Pin)
 {
   AddPart (Pin);
-  if ((!TEST_FLAG (HOLEFLAG, Pin) && TEST_FLAG (DISPLAYNAMEFLAG, Pin))
-      || doing_pinout)
+  if ((!TEST_FLAG (HOLEFLAG, Pin) && TEST_FLAG (DISPLAYNAMEFLAG, Pin)))
     DrawPinName (Pin);
 }
 
@@ -1317,7 +1313,7 @@ void
 DrawPad (PadType *Pad)
 {
   AddPart (Pad);
-  if (doing_pinout || TEST_FLAG (DISPLAYNAMEFLAG, Pad))
+  if (TEST_FLAG (DISPLAYNAMEFLAG, Pad))
     DrawPadName (Pad);
 }
 
@@ -1440,7 +1436,7 @@ DrawElementPinsAndPads (ElementType *Element)
 {
   PAD_LOOP (Element);
   {
-    if (doing_pinout || doing_assy || FRONT (pad) || PCB->InvisibleObjectsOn)
+    if (FRONT (pad) || PCB->InvisibleObjectsOn)
       DrawPad (pad);
   }
   END_LOOP;
@@ -1718,7 +1714,7 @@ draw_pcb_element (DrawAPI *dapi, ElementType *element)
 
   PAD_LOOP (element);
   {
-    if (doing_pinout || doing_assy || FRONT (pad) || PCB->InvisibleObjectsOn)
+    if (dapi->doing_pinout || dapi->doing_assy || FRONT (pad) || PCB->InvisibleObjectsOn)
       draw_pad (dapi, pad);
   }
   END_LOOP;
@@ -1760,9 +1756,10 @@ draw_pinout_preview (DrawAPI *dapi, ElementType *element)
   dapi->gapi->set_color (dapi->pm_gc, "erase");
   dapi->gapi->set_color (dapi->bg_gc, "drill");
 
-  doing_pinout = true;
+  g_warn_if_fail (dapi->doing_pinout == false);
+  dapi->doing_pinout = true;
   dapi->draw_pcb_element (dapi, element);
-  doing_pinout = false;
+  dapi->doing_pinout = false;
 
   dapi->gapi->destroy_gc (dapi->fg_gc);
   dapi->gapi->destroy_gc (dapi->bg_gc);
diff --git a/src/draw_api.h b/src/draw_api.h
index 6ceab34..cc42be6 100644
--- a/src/draw_api.h
+++ b/src/draw_api.h
@@ -66,12 +66,16 @@ struct DrawAPI {
   void (*set_clip_box)         (DrawAPI *, const BoxType *);
 
   /* Member variables */
+  const BoxType *clip_box; /* Clipping box for the current drawing operation                  */
+  bool doing_overlay_text; /* Override for colour / style of overlay text such as pin names   */
+  bool doing_pinout;       /* Override for visibility / style when drawing a pinout preview   */
+  bool doing_assy;         /* Override for visibility / style when making an assembly drawing */
+
   GraphicsAPI *gapi;       /* <--- This should be in a subclass of the base dapi, but nevermind */
   hidGC gc;                /* <--- This should be in a subclass of the base dapi, but nevermind */
   hidGC fg_gc;             /* <--- This should be in a subclass of the base dapi, but nevermind */
   hidGC bg_gc;             /* <--- This should be in a subclass of the base dapi, but nevermind */
   hidGC pm_gc;             /* <--- This should be in a subclass of the base dapi, but nevermind */
-  const BoxType *clip_box;
 };
 
 enum mask_mode {
diff --git a/src/hid/common/draw_helpers.c b/src/hid/common/draw_helpers.c
index 46d1ade..72831c3 100644
--- a/src/hid/common/draw_helpers.c
+++ b/src/hid/common/draw_helpers.c
@@ -2,6 +2,7 @@
 #include "hid.h"
 #include "polygon.h"
 #include "draw_api.h"
+#include "data.h"    /* <-- For nasty global "PCB" */
 
 static void
 fill_contour (DrawAPI *dapi, PLINE *pl)
@@ -19,7 +20,7 @@ fill_contour (DrawAPI *dapi, PLINE *pl)
       y[i++] = v->point[1];
     }
 
-  dapi->gapi->fill_polygon (dapi->gc, n, x, y);
+  dapi->gapi->fill_polygon (dapi->fg_gc, n, x, y);
 
   free (x);
   free (y);
@@ -32,13 +33,13 @@ thindraw_contour (DrawAPI *dapi, PLINE *pl)
   Coord last_x, last_y;
   Coord this_x, this_y;
 
-  dapi->gapi->set_line_width (dapi->gc, 0);
-  dapi->gapi->set_line_cap (dapi->gc, Round_Cap);
+  dapi->gapi->set_line_width (dapi->fg_gc, 0);
+  dapi->gapi->set_line_cap (dapi->fg_gc, Round_Cap);
 
   /* If the contour is round, use an arc drawing routine. */
   if (pl->is_round)
     {
-      dapi->gapi->draw_arc (dapi->gc, pl->cx, pl->cy, pl->radius, pl->radius, 0, 360);
+      dapi->gapi->draw_arc (dapi->fg_gc, pl->cx, pl->cy, pl->radius, pl->radius, 0, 360);
       return;
     }
 
@@ -55,8 +56,8 @@ thindraw_contour (DrawAPI *dapi, PLINE *pl)
       this_x = v->point[0];
       this_y = v->point[1];
 
-      dapi->gapi->draw_line (dapi->gc, last_x, last_y, this_x, this_y);
-      // dapi->gapi->fill_circle (dapi->gc, this_x, this_y, 30);
+      dapi->gapi->draw_line (dapi->fg_gc, last_x, last_y, this_x, this_y);
+      // dapi->gapi->fill_circle (dapi->fg_gc, this_x, this_y, 30);
 
       last_x = this_x;
       last_y = this_y;
@@ -212,8 +213,8 @@ thindraw_pcb_pad (DrawAPI *dapi, PadType *pad, Coord w)
       x1 = x2; x2 = temp_x;
       y1 = y2; y2 = temp_y;
     }
-  dapi->gapi->set_line_cap (dapi->gc, Round_Cap);
-  dapi->gapi->set_line_width (dapi->gc, 0);
+  dapi->gapi->set_line_cap (dapi->fg_gc, Round_Cap);
+  dapi->gapi->set_line_width (dapi->fg_gc, 0);
   if (TEST_FLAG (SQUAREFLAG, pad))
     {
       /* slanted square pad */
@@ -229,14 +230,14 @@ thindraw_pcb_pad (DrawAPI *dapi, PadType *pad, Coord w)
       tx = t * cos (theta + M_PI / 4) * sqrt (2.0);
       ty = t * sin (theta + M_PI / 4) * sqrt (2.0);
 
-      dapi->gapi->draw_line (dapi->gc, x1 - tx, y1 - ty, x2 + ty, y2 - tx);
-      dapi->gapi->draw_line (dapi->gc, x2 + ty, y2 - tx, x2 + tx, y2 + ty);
-      dapi->gapi->draw_line (dapi->gc, x2 + tx, y2 + ty, x1 - ty, y1 + tx);
-      dapi->gapi->draw_line (dapi->gc, x1 - ty, y1 + tx, x1 - tx, y1 - ty);
+      dapi->gapi->draw_line (dapi->fg_gc, x1 - tx, y1 - ty, x2 + ty, y2 - tx);
+      dapi->gapi->draw_line (dapi->fg_gc, x2 + ty, y2 - tx, x2 + tx, y2 + ty);
+      dapi->gapi->draw_line (dapi->fg_gc, x2 + tx, y2 + ty, x1 - ty, y1 + tx);
+      dapi->gapi->draw_line (dapi->fg_gc, x1 - ty, y1 + tx, x1 - tx, y1 - ty);
     }
   else if (x1 == x2 && y1 == y2)
     {
-      dapi->gapi->draw_arc (dapi->gc, x1, y1, t, t, 0, 360);
+      dapi->gapi->draw_arc (dapi->fg_gc, x1, y1, t, t, 0, 360);
     }
   else
     {
@@ -250,14 +251,14 @@ thindraw_pcb_pad (DrawAPI *dapi, PadType *pad, Coord w)
       ox = dy * h + 0.5 * SGN (dy);
       oy = -(dx * h + 0.5 * SGN (dx));
 
-      dapi->gapi->draw_line (dapi->gc, x1 + ox, y1 + oy, x2 + ox, y2 + oy);
+      dapi->gapi->draw_line (dapi->fg_gc, x1 + ox, y1 + oy, x2 + ox, y2 + oy);
 
       if (abs (ox) >= pixel_slop || abs (oy) >= pixel_slop)
         {
           Angle angle = atan2 (dx, dy) * 57.295779;
-          dapi->gapi->draw_line (dapi->gc, x1 - ox, y1 - oy, x2 - ox, y2 - oy);
-          dapi->gapi->draw_arc (dapi->gc, x1, y1, t, t, angle - 180, 180);
-          dapi->gapi->draw_arc (dapi->gc, x2, y2, t, t, angle, 180);
+          dapi->gapi->draw_line (dapi->fg_gc, x1 - ox, y1 - oy, x2 - ox, y2 - oy);
+          dapi->gapi->draw_arc (dapi->fg_gc, x1, y1, t, t, angle - 180, 180);
+          dapi->gapi->draw_arc (dapi->fg_gc, x2, y2, t, t, angle, 180);
         }
     }
 }
@@ -295,21 +296,21 @@ fill_pcb_pad (DrawAPI *dapi, PadType *pad, Coord w)
           b = pad->Point1.Y - w / 2;
           r = l + w;
           t = b + w;
-          dapi->gapi->fill_rect (dapi->gc, l, b, r, t);
+          dapi->gapi->fill_rect (dapi->fg_gc, l, b, r, t);
         }
       else
         {
-          dapi->gapi->fill_circle (dapi->gc, pad->Point1.X, pad->Point1.Y, w / 2);
+          dapi->gapi->fill_circle (dapi->fg_gc, pad->Point1.X, pad->Point1.Y, w / 2);
         }
     }
   else
     {
-      dapi->gapi->set_line_cap (dapi->gc, TEST_FLAG (SQUAREFLAG, pad) ?
-                                          Square_Cap : Round_Cap);
-      dapi->gapi->set_line_width (dapi->gc, w);
+      dapi->gapi->set_line_cap (dapi->fg_gc, TEST_FLAG (SQUAREFLAG, pad) ?
+                                               Square_Cap : Round_Cap);
+      dapi->gapi->set_line_width (dapi->fg_gc, w);
 
-      dapi->gapi->draw_line (dapi->gc, pad->Point1.X, pad->Point1.Y,
-                                       pad->Point2.X, pad->Point2.Y);
+      dapi->gapi->draw_line (dapi->fg_gc, pad->Point1.X, pad->Point1.Y,
+                                          pad->Point2.X, pad->Point2.Y);
     }
 }
 
@@ -519,9 +520,88 @@ common_thindraw_pcb_pv_hole (DrawAPI *dapi, PinType *pv)
   dapi->gapi->draw_arc (dapi->bg_gc, pv->X, pv->Y, r, r, 0, 360);
 }
 
+static void
+common_draw_pcb_polygon (DrawAPI *dapi, LayerType *layer, PolygonType *poly)
+{
+  if (TEST_FLAG (THINDRAWFLAG,     PCB) ||
+      TEST_FLAG (THINDRAWPOLYFLAG, PCB))
+    common_thindraw_pcb_polygon (dapi, layer, poly);
+  else
+    common_fill_pcb_polygon (dapi, layer, poly);
+
+}
+
+static void
+common_draw_pcb_pad (DrawAPI *dapi, LayerType *layer, PadType *pad)
+{
+  if (TEST_FLAG (THINDRAWFLAG, PCB))
+    common_thindraw_pcb_pad (dapi, layer, pad);
+  else
+    common_fill_pcb_pad (dapi, layer, pad);
+}
+
+static void
+common_draw_pcb_pad_mask (DrawAPI *dapi, LayerType *layer, PadType *pad)
+{
+  if (TEST_FLAG (THINDRAWFLAG, PCB))
+    common_thindraw_pcb_pad_mask (dapi, layer, pad);
+  else
+    common_fill_pcb_pad_mask (dapi, layer, pad);
+}
+
+static void
+common_draw_pcb_pad_paste (DrawAPI *dapi, LayerType *layer, PadType *pad)
+{
+  if (TEST_FLAG (THINDRAWFLAG, PCB))
+    common_thindraw_pcb_pad_paste (dapi, layer, pad);
+  else
+    common_fill_pcb_pad_paste (dapi, layer, pad);
+}
+
+static void
+common_draw_pcb_pv (DrawAPI *dapi, PinType *pv)
+{
+  if (TEST_FLAG (THINDRAWFLAG, PCB))
+    common_thindraw_pcb_pv (dapi, pv);
+  else
+    common_fill_pcb_pv (dapi, pv);
+}
+
+static void
+common_draw_pcb_pv_mask (DrawAPI *dapi, PinType *pv)
+{
+  if (TEST_FLAG (THINDRAWFLAG, PCB))
+    common_thindraw_pcb_pv_mask (dapi, pv);
+  else
+    common_fill_pcb_pv_mask (dapi, pv);
+}
+
+static void
+common_draw_pcb_pv_hole (DrawAPI *dapi, PinType *pv)
+{
+  if (TEST_FLAG (THINDRAWFLAG, PCB))
+    common_thindraw_pcb_pv_hole (dapi, pv);
+  else
+    common_fill_pcb_pv_hole (dapi, pv);
+}
+
 void
 common_draw_helpers_init (DrawAPI *dapi)
 {
+  dapi->draw_pcb_polygon   = common_draw_pcb_polygon;
+  dapi->draw_pcb_pad       = common_draw_pcb_pad;
+  dapi->draw_pcb_pad_mask  = common_draw_pcb_pad_mask;
+  dapi->draw_pcb_pad_paste = common_draw_pcb_pad_paste;
+  dapi->draw_pcb_pin       = common_draw_pcb_pv;
+  dapi->draw_pcb_pin_mask  = common_draw_pcb_pv_mask;
+  dapi->draw_pcb_pin_hole  = common_draw_pcb_pv_hole;
+  dapi->draw_pcb_via       = common_draw_pcb_pv;
+  dapi->draw_pcb_via_mask  = common_draw_pcb_pv_mask;
+}
+
+void
+common_fill_helpers_init (DrawAPI *dapi)
+{
   dapi->draw_pcb_polygon   = common_fill_pcb_polygon;
   dapi->draw_pcb_pad       = common_fill_pcb_pad;
   dapi->draw_pcb_pad_mask  = common_fill_pcb_pad_mask;
