Bottom: 5d6395a66009ff0f6b5b75a2e02c3ed8e2bca9bc
Top:    b5f2e5527d23dce9b81c9b65188139c50bfefeaf
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-08-19 15:00:57 +0100

Refresh of hid-gtk-separate-out-board-fli

---

diff --git a/src/hid/gtk/gtkhid-gdk.c b/src/hid/gtk/gtkhid-gdk.c
index b464e1d..79a185c 100644
--- a/src/hid/gtk/gtkhid-gdk.c
+++ b/src/hid/gtk/gtkhid-gdk.c
@@ -75,7 +75,7 @@ hid_gc_struct;
 
 /* Px converts view->pcb, Vx converts pcb->view */
 static inline int
-Vx (int x)
+Vx (Coord x)
 {
   render_priv *priv = gport->render_priv;
   if (priv->view.flip_x)
@@ -85,7 +85,7 @@ Vx (int x)
 }
 
 static inline int
-Vy (int y)
+Vy (Coord y)
 {
   render_priv *priv = gport->render_priv;
   if (priv->view.flip_y)
@@ -95,26 +95,26 @@ Vy (int y)
 }
 
 static inline int
-Vz (int z)
+Vz (Coord z)
 {
   return z / gport->zoom + 0.5;
 }
 
-static inline int
+static inline Coord
 Px (int x)
 {
   render_priv *priv = gport->render_priv;
-  int rv = x * gport->zoom + gport->view_x0;
+  Coord rv = x * gport->zoom + gport->view_x0;
   if (priv->view.flip_x)
     rv = PCB->MaxWidth - (x * gport->zoom + gport->view_x0);
   return  rv;
 }
 
-static inline int
+static inline Coord
 Py (int y)
 {
   render_priv *priv = gport->render_priv;
-  int rv = y * gport->zoom + gport->view_y0;
+  Coord rv = y * gport->zoom + gport->view_y0;
   if (priv->view.flip_y)
     rv = PCB->MaxHeight - (y * gport->zoom + gport->view_y0);
   return  rv;
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 77b130e..013b9e5 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -85,26 +85,26 @@ static void draw_lead_user (render_priv *priv);
 
 /* Px converts view->pcb, Vx converts pcb->view */
 static inline int
-Vz (int z)
+Vz (Coord z)
 {
   return z / gport->zoom + 0.5;
 }
 
-static inline int
+static inline Coord
 Px (int x)
 {
   render_priv *priv = gport->render_priv;
-  int rv = x * gport->zoom + gport->view_x0;
+  Coord rv = x * gport->zoom + gport->view_x0;
   if (priv->view.flip_x)
     rv = PCB->MaxWidth - (x * gport->zoom + gport->view_x0);
   return  rv;
 }
 
-static inline int
+static inline Coord
 Py (int y)
 {
   render_priv *priv = gport->render_priv;
-  int rv = y * gport->zoom + gport->view_y0;
+  Coord rv = y * gport->zoom + gport->view_y0;
   if (priv->view.flip_y)
     rv = PCB->MaxHeight - (y * gport->zoom + gport->view_y0);
   return  rv;
