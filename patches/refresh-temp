Bottom: 09461b8e31437d1a43997d13b5091f918ad5eb61
Top:    ce96d591da83d35d7d34480234802873460b17fc
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-10-22 14:41:13 +0100

Refresh of shiny-3d-eye-candy

---

diff --git a/src/draw.c b/src/draw.c
index 5efb010..4359225 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -308,10 +308,6 @@ hole_callback (const BoxType * b, void *cl)
 {
   PinTypePtr pin = (PinTypePtr) b;
   int plated = cl ? *(int *) cl : -1;
-
-  if (!TEST_FLAG (SQUAREFLAG,pin))
-    return;
-
   switch (plated)
     {
     case -1:
@@ -376,30 +372,6 @@ PrintAssembly (const BoxType * drawn_area, int side_group, int swap_ident)
   SWAP_IDENT = save_swap;
 }
 
-static int
-via_callback (const BoxType * b, void *cl)
-{
-  PinTypePtr via = (PinTypePtr) b;
-  DrawPlainVia (via, False);
-  return 1;
-}
-
-static int
-pin_callback (const BoxType * b, void *cl)
-{
-  DrawPlainPin ((PinTypePtr) b, False);
-  return 1;
-}
-
-static int
-pad_callback (const BoxType * b, void *cl)
-{
-  PadTypePtr pad = (PadTypePtr) b;
-  if (FRONT (pad))
-    DrawPad (pad, 0);
-  return 1;
-}
-
 /* ---------------------------------------------------------------------------
  * initializes some identifiers for a new zoom factor and redraws whole screen
  */
@@ -488,20 +460,6 @@ DrawEverything (BoxTypePtr drawn_area)
 		}
 	    }
 	  gui->set_layer (NULL, SL (FINISHED, 0), 0);
-	  if (gui->gui) {
-            /* draw element pins */
-            if (PCB->PinOn || doing_assy)
-              {
-                r_search (PCB->Data->pin_tree, drawn_area, NULL, pin_callback, NULL);
-//                r_search (PCB->Data->pin_tree, drawn_area, NULL, hole_callback, NULL);
-              }
-            /* draw vias */
-            if (PCB->ViaOn || doing_assy)
-              {
-                r_search (PCB->Data->via_tree, drawn_area, NULL, via_callback, NULL);
-//                r_search (PCB->Data->via_tree, drawn_area, NULL, hole_callback, NULL);
-              }
-          }
 	}
     }
   if (TEST_FLAG (CHECKPLANESFLAG, PCB) && gui->gui)
@@ -509,14 +467,7 @@ DrawEverything (BoxTypePtr drawn_area)
 
   /* Draw pins, pads, vias below silk */
   if (gui->gui)
-    {
-      if (!Settings.ShowSolderSide)
-        gui->set_layer ("topsilk", SL (SILK, TOP), 0);
-      else
-        gui->set_layer ("bottomsilk", SL (SILK, BOTTOM), 0);
-      gui->set_layer (NULL, SL (FINISHED, 0), 0);
-      DrawTop (drawn_area);
-    }
+    DrawTop (drawn_area);
   else
     {
       HoleCountStruct hcs;
@@ -675,6 +626,30 @@ DrawEMark (ElementTypePtr e, LocationType X, LocationType Y,
   
 }
 
+static int
+via_callback (const BoxType * b, void *cl)
+{
+  PinTypePtr via = (PinTypePtr) b;
+  DrawPlainVia (via, False);
+  return 1;
+}
+
+static int
+pin_callback (const BoxType * b, void *cl)
+{
+  DrawPlainPin ((PinTypePtr) b, False);
+  return 1;
+}
+
+static int
+pad_callback (const BoxType * b, void *cl)
+{
+  PadTypePtr pad = (PadTypePtr) b;
+  if (FRONT (pad))
+    DrawPad (pad, 0);
+  return 1;
+}
+
 /* ---------------------------------------------------------------------------
  * draws pins pads and vias
  */
@@ -692,10 +667,10 @@ DrawTop (const BoxType * screen)
   if (PCB->ViaOn || doing_assy)
     {
       r_search (PCB->Data->via_tree, screen, NULL, via_callback, NULL);
-//      r_search (PCB->Data->via_tree, screen, NULL, hole_callback, NULL);
+      r_search (PCB->Data->via_tree, screen, NULL, hole_callback, NULL);
     }
   if (PCB->PinOn || doing_assy)
-      r_search (PCB->Data->pin_tree, screen, NULL, hole_callback, NULL);
+    r_search (PCB->Data->pin_tree, screen, NULL, hole_callback, NULL);
 }
 
 struct pin_info
@@ -1102,12 +1077,7 @@ DrawPinOrViaLowLevel (PinTypePtr Ptr, Boolean drawHole)
 	}
       else
 	{
-	  gui->set_line_cap (Output.fgGC, Round_Cap);
-	  gui->set_line_width (Output.fgGC, (Ptr->Thickness - Ptr->DrillingHole) / 2);
-	  gui->draw_arc (Output.fgGC, Ptr->X, Ptr->Y,
-			 (Ptr->Thickness + Ptr->DrillingHole) / 4,
-                         (Ptr->Thickness + Ptr->DrillingHole) / 4, 0, 360);
-//          gui->fill_circle (Output.fgGC, Ptr->X, Ptr->Y, Ptr->Thickness / 2);
+	  gui->fill_circle (Output.fgGC, Ptr->X, Ptr->Y, Ptr->Thickness / 2);
 	}
     }
