Bottom: 63c36ac927f8be176931c317530e295c26756dab
Top:    ac9ad592c8a7cde0bd066992e7a47a9582e41e2c
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-09-29 17:35:43 +0100

Refresh of hack-to-avoid-gl-calls-when-we

---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 9f99ec3..b211284 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -45,7 +45,6 @@ RCSID ("$Id$");
 extern HID ghid_hid;
 
 static hidGC current_gc = NULL;
-static bool check_gl_drawing_ok_hack = false;
 
 /* Sets gport->u_gc to the "right" GC to use (wrt mask or window)
 */
@@ -500,7 +499,7 @@ set_gl_color_for_gc (hidGC gc)
    * current_colorname set to NULL, so we don't NOOP the
    * next set_gl_color_for_gc call.
    */
-  if (!check_gl_drawing_ok_hack)
+  if(!priv->in_context)
     return;
 
   priv->current_colorname = strdup (gc->colorname);
@@ -580,9 +579,6 @@ set_gl_color_for_gc (hidGC gc)
 #endif
   }
 
-  if(!priv->in_context)
-    return;
-
   hidgl_flush_triangles (&buffer);
   glColor4d (r, g, b, a);
 }
@@ -865,7 +861,7 @@ draw_crosshair (render_priv *priv)
   static int done_once = 0;
   static GdkColor cross_color;
 
-  if (!check_gl_drawing_ok_hack)
+  if(!priv->in_context)
     return;
 
   if (!done_once)
@@ -1917,7 +1913,6 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
   ghid_start_drawing (port);
 
   hidgl_init ();
-  check_gl_drawing_ok_hack = true;
 
   /* If we don't have any stencil bits available,
      we can't use the hidgl polygon drawing routine */
@@ -2097,7 +2092,6 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
 
   draw_lead_user (priv);
 
-  check_gl_drawing_ok_hack = false;
   ghid_end_drawing (port);
 
   g_timer_start (priv->time_since_expose);
@@ -2162,8 +2156,6 @@ ghid_pinout_preview_expose (GtkWidget *widget,
   }
   gport->render_priv->in_context = true;
 
-  check_gl_drawing_ok_hack = true;
-
   glEnable (GL_BLEND);
   glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
 
@@ -2213,8 +2205,6 @@ ghid_pinout_preview_expose (GtkWidget *widget,
   else
     glFlush ();
 
-  check_gl_drawing_ok_hack = false;
-
   /* end drawing to current GL-context */
   gport->render_priv->in_context = false;
   gdk_gl_drawable_gl_end (pGlDrawable);
@@ -2238,7 +2228,6 @@ ghid_render_pixmap (int cx, int cy, double zoom, int width, int height, int dept
   view_data save_view;
   int save_width, save_height;
   BoxType region;
-  bool save_check_gl_drawing_ok_hack;
 
   save_view = gport->view;
   save_width = gport->width;
@@ -2274,9 +2263,6 @@ ghid_render_pixmap (int cx, int cy, double zoom, int width, int height, int dept
   }
   gport->render_priv->in_context = true;
 
-  save_check_gl_drawing_ok_hack = check_gl_drawing_ok_hack;
-  check_gl_drawing_ok_hack = true;
-
   glEnable (GL_BLEND);
   glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
 
@@ -2329,8 +2315,6 @@ ghid_render_pixmap (int cx, int cy, double zoom, int width, int height, int dept
 
   glFlush ();
 
-  check_gl_drawing_ok_hack = save_check_gl_drawing_ok_hack;
-
   /* end drawing to current GL-context */
   gport->render_priv->in_context = false;
   gdk_gl_drawable_gl_end (gldrawable);
