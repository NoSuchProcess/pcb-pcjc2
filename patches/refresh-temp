Bottom: c6e2e0f1a6eb1c72991420b7a7ae9a4c4c4d618f
Top:    9a878aabd39520f704333e664e41d87a73a56498
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-11-20 01:42:08 +0000

Refresh of hid-merge-fill-thindraw-_pcb_-

---

diff --git a/src/crosshair.c b/src/crosshair.c
index 937e506..65a94fb 100644
--- a/src/crosshair.c
+++ b/src/crosshair.c
@@ -75,7 +75,7 @@ thindraw_moved_pv (PinType *pv, Coord x, Coord y)
   moved_pv.X += x;
   moved_pv.Y += y;
 
-  gui->thindraw_pcb_pv (Crosshair.GC, Crosshair.GC, &moved_pv, true, false);
+  gui->graphics->thindraw_pcb_pv (Crosshair.GC, Crosshair.GC, &moved_pv, true, false);
 }
 
 /* ---------------------------------------------------------------------------
@@ -249,7 +249,7 @@ XORDrawElement (ElementType *Element, Coord DX, Coord DY)
         moved_pad.Point1.X += DX; moved_pad.Point1.Y += DY;
         moved_pad.Point2.X += DX; moved_pad.Point2.Y += DY;
 
-        gui->thindraw_pcb_pad (Crosshair.GC, &moved_pad, false, false);
+        gui->graphics->thindraw_pcb_pad (Crosshair.GC, &moved_pad, false, false);
       }
   }
   END_LOOP;
@@ -550,14 +550,14 @@ DrawAttached (void)
         via.Mask = 0;
         via.Flags = NoFlags ();
 
-        gui->thindraw_pcb_pv (Crosshair.GC, Crosshair.GC, &via, true, false);
+        gui->graphics->thindraw_pcb_pv (Crosshair.GC, Crosshair.GC, &via, true, false);
 
         if (TEST_FLAG (SHOWDRCFLAG, PCB))
           {
             /* XXX: Naughty cheat - use the mask to draw DRC clearance! */
             via.Mask = Settings.ViaThickness + PCB->Bloat * 2;
             gui->graphics->set_color (Crosshair.GC, Settings.CrossColor);
-            gui->thindraw_pcb_pv (Crosshair.GC, Crosshair.GC, &via, false, true);
+            gui->graphics->thindraw_pcb_pv (Crosshair.GC, Crosshair.GC, &via, false, true);
             gui->graphics->set_color (Crosshair.GC, Settings.CrosshairColor);
           }
         break;
diff --git a/src/draw.c b/src/draw.c
index 9b45887..e4d59f5 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -208,9 +208,9 @@ static void
 _draw_pv (PinType *pv, bool draw_hole)
 {
   if (TEST_FLAG (THINDRAWFLAG, PCB))
-    gui->thindraw_pcb_pv (Output.fgGC, Output.fgGC, pv, draw_hole, false);
+    gui->graphics->thindraw_pcb_pv (Output.fgGC, Output.fgGC, pv, draw_hole, false);
   else
-    gui->fill_pcb_pv (Output.fgGC, Output.bgGC, pv, draw_hole, false);
+    gui->graphics->fill_pcb_pv (Output.fgGC, Output.bgGC, pv, draw_hole, false);
 
   if (!TEST_FLAG (HOLEFLAG, pv) && TEST_FLAG (DISPLAYNAMEFLAG, pv))
     _draw_pv_name (pv);
@@ -294,9 +294,9 @@ _draw_pad (hidGC gc, PadType *pad, bool clear, bool mask)
 
   if (TEST_FLAG (THINDRAWFLAG, PCB) ||
       (clear && TEST_FLAG (THINDRAWPOLYFLAG, PCB)))
-    gui->thindraw_pcb_pad (gc, pad, clear, mask);
+    gui->graphics->thindraw_pcb_pad (gc, pad, clear, mask);
   else
-    gui->fill_pcb_pad (gc, pad, clear, mask);
+    gui->graphics->fill_pcb_pad (gc, pad, clear, mask);
 }
 
 static void
@@ -855,9 +855,9 @@ clearPin_callback (const BoxType * b, void *cl)
 {
   PinType *pin = (PinType *) b;
   if (TEST_FLAG (THINDRAWFLAG, PCB) || TEST_FLAG (THINDRAWPOLYFLAG, PCB))
-    gui->thindraw_pcb_pv (Output.pmGC, Output.pmGC, pin, false, true);
+    gui->graphics->thindraw_pcb_pv (Output.pmGC, Output.pmGC, pin, false, true);
   else
-    gui->fill_pcb_pv (Output.pmGC, Output.pmGC, pin, false, true);
+    gui->graphics->fill_pcb_pv (Output.pmGC, Output.pmGC, pin, false, true);
   return 1;
 }
 
@@ -884,15 +884,15 @@ poly_callback (const BoxType * b, void *cl)
     color = i->layer->Color;
   gui->graphics->set_color (Output.fgGC, color);
 
-  if (gui->thindraw_pcb_polygon != NULL &&
+  if (gui->graphics->thindraw_pcb_polygon != NULL &&
       (TEST_FLAG (THINDRAWFLAG, PCB) ||
        TEST_FLAG (THINDRAWPOLYFLAG, PCB)))
-    gui->thindraw_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
+    gui->graphics->thindraw_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
   else
-    gui->fill_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
+    gui->graphics->fill_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
 
   /* If checking planes, thin-draw any pieces which have been clipped away */
-  if (gui->thindraw_pcb_polygon != NULL &&
+  if (gui->graphics->thindraw_pcb_polygon != NULL &&
       TEST_FLAG (CHECKPLANESFLAG, PCB) &&
       !TEST_FLAG (FULLPOLYFLAG, polygon))
     {
@@ -901,7 +901,7 @@ poly_callback (const BoxType * b, void *cl)
       for (poly.Clipped = polygon->Clipped->f;
            poly.Clipped != polygon->Clipped;
            poly.Clipped = poly.Clipped->f)
-        gui->thindraw_pcb_polygon (Output.fgGC, &poly, i->drawn_area);
+        gui->graphics->thindraw_pcb_polygon (Output.fgGC, &poly, i->drawn_area);
     }
 
   return 1;
diff --git a/src/hid/common/hidnogui.c b/src/hid/common/hidnogui.c
index 0792df9..2123ad0 100644
--- a/src/hid/common/hidnogui.c
+++ b/src/hid/common/hidnogui.c
@@ -454,11 +454,6 @@ common_nogui_init (HID *hid)
   hid->invalidate_all =       nogui_invalidate_all;
   hid->set_layer =            nogui_set_layer;
   hid->end_layer =            nogui_end_layer;
-  hid->fill_pcb_polygon =     nogui_fill_pcb_polygon;
-  hid->fill_pcb_pad =         nogui_fill_pcb_pad;
-  hid->thindraw_pcb_pad =     nogui_thindraw_pcb_pad;
-  hid->fill_pcb_pv =          nogui_fill_pcb_pv;
-  hid->thindraw_pcb_pv =      nogui_thindraw_pcb_pv;
   hid->calibrate =            nogui_calibrate;
   hid->shift_is_pressed =     nogui_shift_is_pressed;
   hid->control_is_pressed =   nogui_control_is_pressed;
@@ -504,6 +499,12 @@ common_nogui_graphics_init (HID_DRAW_API *graphics)
   graphics->fill_circle =     nogui_fill_circle;
   graphics->fill_polygon =    nogui_fill_polygon;
   graphics->fill_rect =       nogui_fill_rect;
+
+  graphics->fill_pcb_polygon = nogui_fill_pcb_polygon;
+  graphics->fill_pcb_pad =     nogui_fill_pcb_pad;
+  graphics->thindraw_pcb_pad = nogui_thindraw_pcb_pad;
+  graphics->fill_pcb_pv =      nogui_fill_pcb_pv;
+  graphics->thindraw_pcb_pv =  nogui_thindraw_pcb_pv;
 }
 
 static HID nogui_hid;
