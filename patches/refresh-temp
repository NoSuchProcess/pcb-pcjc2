Bottom: eb348e7ff6592c6b4dff188756e77907b983b335
Top:    87e640f1ac03adc064a1d3d1cd971c36eaec0d57
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-11-03 23:52:41 +0000

Refresh of cache-triangulated-polygons-fo

---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index 99ab59d..8ae6047 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -221,8 +221,7 @@ hidgl_draw_line (int cap, double width, int x1, int y1, int x2, int y2, double s
   int hairline = 0;
 
   if (width == 0.0)
-    return;
-//    hairline = 1;
+    hairline = 1;
 
   if (width < scale)
     width = scale;
@@ -305,8 +304,7 @@ hidgl_draw_arc (double width, int x, int y, int rx, int ry,
   int hairline = 0;
 
   if (width == 0.0)
-    return;
-//    hairline = 1;
+    hairline = 1;
 
   if (width < scale)
     width = scale;
@@ -472,7 +470,6 @@ myBegin (GLenum type)
 }
 
 static double global_scale;
-static int global_triangle_count;
 
 static void
 myVertex (GLdouble *vertex_data)
@@ -490,7 +487,7 @@ myVertex (GLdouble *vertex_data)
         }
       else
         {
-#if 0
+#if 1
           hidgl_ensure_triangle_space (&buffer, 1);
           hidgl_add_triangle (&buffer,
                               triangle_vertices [0], triangle_vertices [1],
@@ -507,7 +504,6 @@ myVertex (GLdouble *vertex_data)
                            vertex_data [0],       vertex_data [1],
                            triangle_vertices [0], triangle_vertices [1], global_scale);
 #endif
-          global_triangle_count ++;
 
           if (tessVertexType == GL_TRIANGLE_STRIP)
             {
@@ -534,7 +530,6 @@ myVertex (GLdouble *vertex_data)
                               triangle_vertices [4], triangle_vertices [5]);
           triangle_comp_idx = 0;
           stashed_vertices = 0;
-          global_triangle_count ++;
         }
     }
   else
@@ -654,7 +649,6 @@ hidgl_fill_pcb_polygon_nocache (PolygonType *poly, const BoxType *clip_box, doub
   gluTessCallback(info.tobj, GLU_TESS_VERTEX, myVertex);
   gluTessCallback(info.tobj, GLU_TESS_COMBINE, myCombine);
   gluTessCallback(info.tobj, GLU_TESS_ERROR, myError);
-  global_triangle_count = 0;
 
   gluTessBeginPolygon (info.tobj, NULL);
 
@@ -668,7 +662,6 @@ hidgl_fill_pcb_polygon_nocache (PolygonType *poly, const BoxType *clip_box, doub
   gluDeleteTess (info.tobj);
   myFreeCombined ();
 
-  printf ("global triangle count = %i\n", global_triangle_count);
   free (info.vertices);
 }
