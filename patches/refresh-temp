Bottom: 0b01d29061edd83e718d0288f53d5ecc75644441
Top:    982c8499342fb50cdc846d95f159f539b18e27d2
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2008-10-12 22:28:38 +0100

Refresh of try-something-with-the-rtrees

---

diff --git a/src/pour.c b/src/pour.c
index 3e272ac..03c3911 100644
--- a/src/pour.c
+++ b/src/pour.c
@@ -294,40 +294,7 @@ DestroyPolygonInPour (PourTypePtr pour, PolygonTypePtr polygon)
   return (NULL);
 }
 
-/*static*/ int
-subtract_wonkyline_poly (POLYAREA * np1, POLYAREA **pg)
-{
-  POLYAREA *merged = NULL, *np = np1;
-  int x;
-
-  assert (np);
-  assert (pg);
-  assert (*pg);
-
-  if (pg == NULL)
-    {
-      printf ("Hmm, got pg == NULL in subtract_poly\n");
-      poly_Free (&np);
-      return -1;
-    }
-
-  assert (poly_Valid (*pg));
-  assert (poly_Valid (np));
-  x = poly_Boolean_free (*pg, np, &merged, PBO_SUB);
-  if (x != err_ok)
-    {
-      fprintf (stderr, "Error while clipping PBO_SUB: %d\n", x);
-      poly_Free (&merged);
-      return -1;
-    }
-
-  assert (!merged || poly_Valid (merged));
-
-  *pg = merged;
-  return 1;
-}
-
-/*static*/ int
+static int
 subtract_poly (POLYAREA * np1, POLYAREA **pg)
 {
   POLYAREA *merged = NULL, *np = np1;
@@ -569,17 +536,8 @@ line_sub_callback (const BoxType * b, void *cl)
   if (np == NULL)
     return 0;
 
-  if (line->Point1.X == line->Point2.X ||
-      line->Point1.Y == line->Point2.Y)
-    {
-      if (subtract_poly (np, &info->pg) < 0)
-        longjmp (info->env, 1);
-    }
-  else
-    {
-      if (subtract_wonkyline_poly (np, &info->pg) < 0)
-        longjmp (info->env, 1);
-    }
+  if (subtract_poly (np, &info->pg) < 0)
+    longjmp (info->env, 1);
   return 1;
 }
 
@@ -679,21 +637,11 @@ ClearPour (DataTypePtr Data, LayerTypePtr Layer, PourType * pour,
 
   if (setjmp (info.env) == 0)
     {
-#warning I KNOW THIS IS THE SLOW PATH, profile it first so I can stop part way
-#if 1
-      GROUP_LOOP (Data, group);
-      {
-        r = r_search (layer->line_tree, &region, NULL, line_sub_callback, &info);
-      }
-      END_LOOP;
-#endif
-
-//      r = 0;
-      r += r_search (Data->via_tree, &region, NULL, pin_sub_callback, &info);
+      r  = r_search (Data->via_tree, &region, NULL, pin_sub_callback, &info);
       r += r_search (Data->pin_tree, &region, NULL, pin_sub_callback, &info);
       GROUP_LOOP (Data, group);
       {
-//        r += r_search (layer->line_tree, &region, NULL, line_sub_callback, &info);
+        r += r_search (layer->line_tree, &region, NULL, line_sub_callback, &info);
         r += r_search (layer->arc_tree,  &region, NULL, arc_sub_callback,  &info);
         r += r_search (layer->text_tree, &region, NULL, text_sub_callback, &info);
         r += r_search (layer->pour_tree, &region, NULL, pour_sub_callback, &info);
diff --git a/src/rtree.c b/src/rtree.c
index 36d9f60..662c581 100644
--- a/src/rtree.c
+++ b/src/rtree.c
@@ -61,33 +61,6 @@
 
 RCSID ("$Id$");
 
-/* G_LIKELY and G_UNLIKLEY macros taken from GLib 2.16.3, LGPL */
-/*
- * The G_LIKELY and G_UNLIKELY macros let the programmer give hints to 
- * the compiler about the expected result of an expression. Some compilers
- * can use this information for optimizations.
- *
- * The _G_BOOLEAN_EXPR macro is intended to trigger a gcc warning when
- * putting assignments in g_return_if_fail ().  
- */
-#if defined(__GNUC__) && (__GNUC__ > 2) && defined(__OPTIMIZE__)
-#define _G_BOOLEAN_EXPR(expr)                   \
- __extension__ ({                               \
-   int _g_boolean_var_;                         \
-   if (expr)                                    \
-      _g_boolean_var_ = 1;                      \
-   else                                         \
-      _g_boolean_var_ = 0;                      \
-   _g_boolean_var_;                             \
-})
-#define G_LIKELY(expr) (__builtin_expect (_G_BOOLEAN_EXPR(expr), 1))
-#define G_UNLIKELY(expr) (__builtin_expect (_G_BOOLEAN_EXPR(expr), 0))
-#else
-#define G_LIKELY(expr) (expr)
-#define G_UNLIKELY(expr) (expr)
-#warning NOT OPTIMISING
-#endif
-
 
 #define SLOW_ASSERTS
 /* All rectangles are closed on the bottom left and open on the
@@ -940,8 +913,7 @@ __r_insert_node (struct rtree_node *node, const BoxType * query,
     {
       register int i;
 
-#warning UNLIKELY BASED ON QTY OF CALLERS PASSING manage=0 IN PCB, NOT PROFILING
-      if (G_UNLIKELY (manage))
+      if (manage)
         {
           register int flag = 1;
