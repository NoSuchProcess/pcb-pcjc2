Bottom: 91145259fd6d4ad408c2f6ce4ee17908fd3dd9d4
Top:    30f3585a4ccb8fcf229203b162627df41cee733f
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-26 00:08:04 +0100

Refresh of w-c-split-gathering-routines-f-0

---

diff --git a/src/draw.c b/src/draw.c
index 136a5b3..efdf499 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -186,35 +186,6 @@ Redraw (void)
 }
 
 static int
-element_callback (const BoxType * b, void *cl)
-{
-  ElementTypePtr element = (ElementTypePtr) b;
-  int *side = cl;
-
-  if (ON_SIDE (element, *side))
-    DrawElementPackage (element);
-  return 1;
-}
-
-static void
-draw_element_name (ElementType *element)
-{
-  if (gui->gui && TEST_FLAG (HIDENAMESFLAG, PCB))
-    return;
-  if (TEST_FLAG (HIDENAMEFLAG, element))
-    return;
-  if (doing_pinout || doing_assy)
-    gui->set_color (Output.fgGC, PCB->ElementColor);
-  else if (TEST_FLAG (SELECTEDFLAG, &ELEMENT_TEXT (PCB, element)))
-    gui->set_color (Output.fgGC, PCB->ElementSelectedColor);
-  else if (FRONT (element))
-    gui->set_color (Output.fgGC, PCB->ElementColor);
-  else
-    gui->set_color (Output.fgGC, PCB->InvisibleObjectsColor);
-  DrawTextLowLevel (&ELEMENT_TEXT (PCB, element), PCB->minSlk);
-}
-
-static int
 name_callback (const BoxType * b, void *cl)
 {
   TextTypePtr text = (TextTypePtr) b;
@@ -973,6 +944,61 @@ text_callback (const BoxType * b, void *cl)
   return 1;
 }
 
+static void
+draw_element_package (ELement)
+{
+  /* set color and draw lines, arcs, text and pins */
+  if (doing_pinout || doing_assy)
+    gui->set_color (Output.fgGC, PCB->ElementColor);
+  else if (TEST_FLAG (SELECTEDFLAG, Element))
+    gui->set_color (Output.fgGC, PCB->ElementSelectedColor);
+  else if (FRONT (Element))
+    gui->set_color (Output.fgGC, PCB->ElementColor);
+  else
+    gui->set_color (Output.fgGC, PCB->InvisibleObjectsColor);
+
+  /* draw lines, arcs, text and pins */
+  ELEMENTLINE_LOOP (Element);
+  {
+    _draw_line (line);
+  }
+  END_LOOP;
+  ARC_LOOP (Element);
+  {
+    _draw_arc (arc);
+  }
+  END_LOOP;
+}
+
+static int
+element_callback (const BoxType * b, void *cl)
+{
+  ElementTypePtr element = (ElementTypePtr) b;
+  int *side = cl;
+
+  if (ON_SIDE (element, *side))
+    draw_element_package (element);
+  return 1;
+}
+
+static void
+draw_element_name (ElementType *element)
+{
+  if (gui->gui && TEST_FLAG (HIDENAMESFLAG, PCB))
+    return;
+  if (TEST_FLAG (HIDENAMEFLAG, element))
+    return;
+  if (doing_pinout || doing_assy)
+    gui->set_color (Output.fgGC, PCB->ElementColor);
+  else if (TEST_FLAG (SELECTEDFLAG, &ELEMENT_TEXT (PCB, element)))
+    gui->set_color (Output.fgGC, PCB->ElementSelectedColor);
+  else if (FRONT (element))
+    gui->set_color (Output.fgGC, PCB->ElementColor);
+  else
+    gui->set_color (Output.fgGC, PCB->InvisibleObjectsColor);
+  DrawTextLowLevel (&ELEMENT_TEXT (PCB, element), PCB->minSlk);
+}
+
 
 /* ---------------------------------------------------------------------------
  * draws one non-copper layer
@@ -1428,11 +1454,16 @@ thin_callback (PLINE * pl, LayerTypePtr lay, PolygonTypePtr poly)
 void
 DrawElement (ElementTypePtr Element)
 {
-  DrawElementPackage (Element);
   if (Gathering)
-    DrawElementName (Element);
+    {
+      DrawElementPackage (Element);
+      DrawElementName (Element);
+    }
   else
-    draw_element_name (Element);
+    {
+      draw_element_name (Element);
+      draw_element_package (Element);
+    }
   DrawElementPinsAndPads (Element);
 }
