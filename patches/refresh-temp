Bottom: 60ec07440f9c4557e0946f9265b6dbf0285122fb
Top:    64de0fcfbbf746d5fd9b1d0137de49d1a3ee8f1b
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-11-15 02:37:42 +0000

Refresh of butcher-the-xor-crosshair-draw

---

diff --git a/src/draw_api.h b/src/draw_api.h
index fc7e924..69091c8 100644
--- a/src/draw_api.h
+++ b/src/draw_api.h
@@ -53,7 +53,8 @@ struct DrawAPI {
   void (*set_clip_box)         (DrawAPI *, const BoxType *);
 
   /* Member variables */
-  GraphicsAPI *graphics;
+//  GraphicsAPI *graphics;
+  HID_DRAW_API *graphics;
   hidGC gc;
   hidGC fg_gc;
   hidGC bg_gc;
@@ -70,6 +71,7 @@ enum mask_mode {
 };
 #endif
 
+#if 0
 struct GraphicsAPI {
   /* Make an empty graphics context. */
   hidGC (*make_gc) (void);
@@ -110,6 +112,7 @@ struct GraphicsAPI {
   void (*fill_polygon)         (hidGC gc, int n_coords, Coord *x, Coord *y);
   void (*fill_rect)            (hidGC gc, Coord x1, Coord y1, Coord x2, Coord y2);
 };
+#endif
 
 #if 0
   void (*fill_pcb_polygon)     (hidGC gc, PolygonType *poly, const BoxType *clip_box);
diff --git a/src/hid.h b/src/hid.h
index 59bee9c..c64c3bd 100644
--- a/src/hid.h
+++ b/src/hid.h
@@ -232,16 +232,13 @@ typedef enum
     int (*throw_drc_dialog) (void);
   } HID_DRC_GUI;
 
-#if 1
   enum mask_mode {
     HID_MASK_OFF    = 0, /* Flush the buffer and return to non-mask operation. */
     HID_MASK_BEFORE = 1, /* Polygons being drawn before clears.                */
     HID_MASK_CLEAR  = 2, /* Clearances being drawn.                            */
     HID_MASK_AFTER  = 3, /* Polygons being drawn after clears.                 */
   };
-#endif
 
-#if 0
 /* Low level drawing API */
   typedef struct
   {
@@ -285,7 +282,6 @@ typedef enum
     void (*fill_rect)    (hidGC gc, Coord x1, Coord y1, Coord x2, Coord y2);
 
   } HID_DRAW_API;
-#endif
 
 
   typedef struct hid_st HID;
@@ -373,7 +369,7 @@ typedef enum
     void (*end_layer) (void);
 
 
-//    HID_DRAW_API *graphics;
+    HID_DRAW_API *graphics;
 
     void (*fill_pcb_polygon) (hidGC gc_, PolygonType *poly,
                               const BoxType *clip_box);
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 5bd1ce5..76b4dff 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1008,7 +1008,7 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
 
   {
     DrawAPI *dapi;
-    dapi = outline_draw_new (gui);
+    dapi = outline_draw_new (gui->graphics);
     dapi->set_draw_offset = hidgl_set_draw_offset;
 
     DrawAttached (dapi);
diff --git a/src/outline_draw.c b/src/outline_draw.c
index 3cdeb1e..e8731a0 100644
--- a/src/outline_draw.c
+++ b/src/outline_draw.c
@@ -257,12 +257,12 @@ outline_draw_pcb_pad (DrawAPI *dapi, LayerType *layer, PadType *pad)
   dapi->graphics->thindraw_pcb_pad (dapi->gc, pad, false, false);
 }
 
-DrawAPI *outline_draw_new (HID *hid)
+DrawAPI *outline_draw_new (HID_DRAW_API *graphics)
 {
   DrawAPI *dapi;
 
   dapi = g_new0 (DrawAPI, 1);
-  dapi->graphics = hid; /* XXX */
+  dapi->graphics = graphics;
 
   dapi->draw_pcb_pin          = outline_draw_pcb_pv;
   dapi->draw_pcb_pin_mask     = outline_draw_pcb_pv_mask;
