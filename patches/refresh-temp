Bottom: 2d2d02544f91fa852dbb6dd0a303180d603d93a3
Top:    a265e2972773df3fedad123f406805f194db2805
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-10-01 11:13:07 +0100

Refresh of play-with-glsl-shader-for-rend

---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index 876f5a8..22a51c9 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -814,12 +814,6 @@ load_built_in_shaders (void)
   circular_program = hidgl_shader_new ("circular_rendering", NULL, circular_fs_source);
 }
 
-static void
-unload_built_in_shaders (void)
-{
-  hidgl_shader_free (circular_program);
-}
-
 void
 hidgl_init (void)
 {
@@ -864,7 +858,6 @@ hidgl_start_render (void)
   in_context = true;
   hidgl_init ();
   hidgl_init_triangle_array (&buffer);
-//  load_built_in_shaders ();
   hidgl_shader_activate (circular_program);
 }
 
@@ -876,7 +869,6 @@ hidgl_finish_render (void)
 
   hidgl_finish_triangle_array (&buffer);
   hidgl_shader_activate (NULL);
-//  unload_built_in_shaders ();
   in_context = false;
 }
 
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 87b2d0b..384440e 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -936,10 +936,19 @@ void
 ghid_init_drawing_widget (GtkWidget *widget, GHidPort *port)
 {
   render_priv *priv = port->render_priv;
+  GdkGLContext *drawarea_glcontext;
+
+  /* NB: We share with the main rendering context so we can use the
+   *     same pixel shader etc..
+   */
+  if (widget == gport->drawing_area)
+    drawarea_glcontext = NULL;
+  else
+    drawarea_glcontext = gtk_widget_get_gl_context (gport->drawing_area);
 
   gtk_widget_set_gl_capability (widget,
                                 priv->glconfig,
-                                NULL,
+                                drawarea_glcontext,
                                 TRUE,
                                 GDK_GL_RGBA_TYPE);
 }
