Bottom: 5515b98df1dceadd033b9b2f319281e9b892d867
Top:    a20961f7b994dcfd290817bfa2afad1c53ed5781
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-08-27 17:44:10 +0100

Refresh of hid-gtk-move-viewport-view-dat

---

diff --git a/src/hid/gtk/gtkhid-gdk.c b/src/hid/gtk/gtkhid-gdk.c
index 72814e4..01830b0 100644
--- a/src/hid/gtk/gtkhid-gdk.c
+++ b/src/hid/gtk/gtkhid-gdk.c
@@ -29,11 +29,23 @@ extern HID ghid_hid;
 #define SIDE_X(x)   ((priv->view.flip_x ? PCB->MaxWidth  - (x) : (x)))
 #define SIDE_Y(y)   ((priv->view.flip_y ? PCB->MaxHeight - (y) : (y)))
 
+#define DRAW_X(x)         (int)((SIDE_X(x) - priv->view.x0) / priv->view.coord_per_px)
+#define DRAW_Y(y)         (int)((SIDE_Y(y) - priv->view.y0) / priv->view.coord_per_px)
+
+#define EVENT_TO_PCB_X(x) SIDE_X((int)((x) * priv->view.coord_per_px + priv->view.x0))
+#define EVENT_TO_PCB_Y(y) SIDE_Y((int)((y) * priv->view.coord_per_px + priv->view.y0))
+
 static int cur_mask = -1;
 static int mask_seq = 0;
 
 typedef struct view_data {
   double coord_per_px;
+
+  Coord x0;
+  Coord y0;
+  Coord width;
+  Coord height;
+
   bool flip_x;
   bool flip_y;
 } view_data;
@@ -79,35 +91,40 @@ static inline int
 Vx (Coord x)
 {
   render_priv *priv = gport->render_priv;
+
   if (priv->view.flip_x)
-    return (PCB->MaxWidth - x - priv->view_x0) / gport->zoom + 0.5;
+    return (PCB->MaxWidth - x - priv->view.x0) / priv->view.coord_per_px + 0.5;
   else
-    return (x - priv->view_x0) / gport->zoom + 0.5;
+    return (x - priv->view.x0) / priv->view.coord_per_px + 0.5;
 }
 
 static inline int
 Vy (Coord y)
 {
   render_priv *priv = gport->render_priv;
+
   if (priv->view.flip_y)
-    return (PCB->MaxHeight - y - priv->view_y0) / gport->zoom + 0.5;
+    return (PCB->MaxHeight - y - priv->view.y0) / priv->view.coord_per_px + 0.5;
   else
-    return (y - priv->view_y0) / gport->zoom + 0.5;
+    return (y - priv->view.y0) / priv->view.coord_per_px + 0.5;
 }
 
 static inline int
 Vz (Coord z)
 {
-  return z / gport->zoom + 0.5;
+  render_priv *priv = gport->render_priv;
+
+  return z / priv->view.coord_per_px + 0.5;
 }
 
 static inline Coord
 Px (int x)
 {
   render_priv *priv = gport->render_priv;
-  Coord rv = x * gport->zoom + priv->view_x0;
+
+  Coord rv = x * priv->view.coord_per_px + priv->view.x0;
   if (priv->view.flip_x)
-    rv = PCB->MaxWidth - (x * gport->zoom + priv->view_x0);
+    rv = PCB->MaxWidth - (x * priv->view.coord_per_px + priv->view.x0);
   return  rv;
 }
 
@@ -115,9 +132,10 @@ static inline Coord
 Py (int y)
 {
   render_priv *priv = gport->render_priv;
-  Coord rv = y * gport->zoom + priv->view_y0;
+  Coord rv = y * priv->view.coord_per_px + priv->view.y0;
+
   if (priv->view.flip_y)
-    rv = PCB->MaxHeight - (y * gport->zoom + priv->view_y0);
+    rv = PCB->MaxHeight - (y * priv->view.coord_per_px + priv->view.y0);
   return  rv;
 }
 
@@ -1223,7 +1241,6 @@ ghid_pinout_preview_expose (GtkWidget *widget,
   GdkDrawable *save_drawable;
   int da_w, da_h;
   view_data save_view;
-  int da_w, da_h;
   double xz, yz;
   render_priv *priv = gport->render_priv;
 
@@ -1255,7 +1272,7 @@ ghid_pinout_preview_expose (GtkWidget *widget,
   hid_expose_callback (&ghid_hid, NULL, &pinout->element);
 
   gport->drawable = save_drawable;
-  gport->view = save_view;
+  priv->view = save_view;
 
   return FALSE;
 }
@@ -1270,7 +1287,7 @@ ghid_render_pixmap (int cx, int cy, double zoom, int width, int height, int dept
   render_priv *priv = gport->render_priv;
 
   save_drawable = gport->drawable;
-  save_view = gport->view;
+  save_view = priv->view;
 
   pixmap = gdk_pixmap_new (NULL, width, height, depth);
 
@@ -1305,7 +1322,7 @@ ghid_render_pixmap (int cx, int cy, double zoom, int width, int height, int dept
   hid_expose_callback (&ghid_hid, &region, NULL);
 
   gport->drawable = save_drawable;
-  gport->view = save_view;
+  priv->view = save_view;
 
   return pixmap;
 }
@@ -1388,6 +1405,8 @@ pan_common (GHidPort *port)
 void
 ghid_pan_view_abs (Coord pcb_x, Coord pcb_y, int widget_x, int widget_y)
 {
+  render_priv *priv = gport->render_priv;
+
   priv->view.x0 = SIDE_X (pcb_x) - widget_x * priv->view.coord_per_px;
   priv->view.y0 = SIDE_Y (pcb_y) - widget_y * priv->view.coord_per_px;
 
@@ -1397,6 +1416,8 @@ ghid_pan_view_abs (Coord pcb_x, Coord pcb_y, int widget_x, int widget_y)
 void
 ghid_pan_view_rel (Coord dx, Coord dy)
 {
+  render_priv *priv = gport->render_priv;
+
   priv->view.x0 += dx;
   priv->view.y0 += dy;
 
@@ -1449,6 +1470,8 @@ ghid_zoom_view_abs (Coord center_x, Coord center_y, double new_zoom)
 void
 ghid_zoom_view_rel (Coord center_x, Coord center_y, double factor)
 {
+  render_priv *priv = gport->render_priv;
+
   ghid_zoom_view_abs (center_x, center_y, priv->view.coord_per_px * factor);
 }
