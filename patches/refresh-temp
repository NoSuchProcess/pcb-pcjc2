Bottom: 60bb92430dae3b29a5f859dc153aaa33b658428e
Top:    a06b284f142de4fe49fcec3f72f897fe767c44ac
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2014-06-28 22:32:47 +0100

Refresh of move-preloadelementpcb-and

---

diff --git a/src/parse_y.y b/src/parse_y.y
index 415e221..4765ccf 100644
--- a/src/parse_y.y
+++ b/src/parse_y.y
@@ -54,7 +54,7 @@
 #include "rtree.h"
 #include "strflags.h"
 #include "thermal.h"
-#include "assert.h"
+#include "move.h"
 
 #ifdef HAVE_LIBDMALLOC
 # include <dmalloc.h> /* see http://dmalloc.com */
@@ -215,11 +215,44 @@ parsepcb
 			}
 			   
 		| {
-		    assert (yyPCB == NULL);
+
+		    if (yyPCB != NULL)
+		      {
+                        printf ("Begin parsing element...");
+			yyFont = &yyPCB->Font;
+			yyData = yyPCB->Data;
+			yyData->pcb = yyPCB;
+			yyData->LayerN = 0;
+			layer_group_string = NULL;
+		      }
+                    else
+                      printf ("yyPCB=NULL Begin parsing element...");
 		  }
 		  element
 		  {
-		    assert (yyPCB == NULL);
+		    PCBType *pcb_save = PCB;
+		    ElementType *e;
+
+		    if (yyPCB != NULL)
+		      {
+                        printf ("done\n");
+
+			LayerFlag[0] = true;
+			LayerFlag[1] = true;
+			yyData->LayerN = 2;
+
+			CreateNewPCBPost (yyPCB, 0);
+			ParseGroupString("1,c:2,s", &yyPCB->LayerGroups, yyData->LayerN);
+			e = yyPCB->Data->Element->data; /* we know there's only one */
+			PCB = yyPCB;
+			MoveElementLowLevel (yyPCB->Data, e, -e->BoundingBox.X1, -e->BoundingBox.Y1);
+			PCB = pcb_save;
+			yyPCB->MaxWidth = e->BoundingBox.X2;
+			yyPCB->MaxHeight = e->BoundingBox.Y2;
+			yyPCB->is_footprint = 1;
+		      }
+                    else
+                      printf ("done, BTW: yyData is %p\n", yyData);
 		  }
 		;
