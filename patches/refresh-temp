Bottom: d2f60c5e6217e9beb6caeef3b940b8b7ad7782b0
Top:    b5ba01a6f86e9daad8f40e783f9e7df6d63a19fb
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-23 17:06:55 +0000

Refresh of fix-broken-undo-handling-for-r

---

diff --git a/src/action.c b/src/action.c
index 7a9c3f0..fde1e7c 100644
--- a/src/action.c
+++ b/src/action.c
@@ -2362,18 +2362,18 @@ ActionConnection (int argc, char **argv, int x, int y)
 	  }
 
 	case F_ResetLinesAndPolygons:
-	  ResetFoundLinesAndPolygons (true);
+	  if (ResetFoundLinesAndPolygons (true, true))
+	    IncrementUndoSerialNumber ();
 	  break;
 
 	case F_ResetPinsViasAndPads:
-	  ResetFoundPinsViasAndPads (true);
+	  if (ResetFoundPinsViasAndPads (true, true))
+	    IncrementUndoSerialNumber ();
 	  break;
 
 	case F_Reset:
-	  SaveUndoSerialNumber ();
-	  ResetFoundPinsViasAndPads (true);
-	  RestoreUndoSerialNumber ();
-	  ResetFoundLinesAndPolygons (true);
+	  if (ResetConnections (true, true))
+	    IncrementUndoSerialNumber ();
 	  break;
 	}
       RestoreCrosshair (true);
@@ -2786,10 +2786,8 @@ ActionDisplay (int argc, char **argv, int childX, int childY)
 	  TOGGLE_FLAG (AUTODRCFLAG, PCB);
 	  if (TEST_FLAG (AUTODRCFLAG, PCB) && Settings.Mode == LINE_MODE)
 	    {
-	      SaveUndoSerialNumber ();
-	      ResetFoundPinsViasAndPads (true);
-	      RestoreUndoSerialNumber ();
-	      ResetFoundLinesAndPolygons (true);
+	      if (ResetConnections (true, true))
+		IncrementUndoSerialNumber ();
 	      if (Crosshair.AttachedLine.State != STATE_FIRST)
 		LookupConnection (Crosshair.AttachedLine.Point1.X,
 				  Crosshair.AttachedLine.Point1.Y, true, 1,
diff --git a/src/autoroute.c b/src/autoroute.c
index 9ccab97..2c86270 100644
--- a/src/autoroute.c
+++ b/src/autoroute.c
@@ -985,8 +985,7 @@ CreateRouteData ()
    * this saves on searching the trees to find the nets
    */
   /* use the DRCFLAG to mark objects as they are entered */
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
+  ResetConnections (false, false);
   Nets = CollectSubnets (false);
   {
     routebox_t *last_net = NULL;
diff --git a/src/find.c b/src/find.c
index d628b36..8229868 100644
--- a/src/find.c
+++ b/src/find.c
@@ -3220,7 +3220,7 @@ LookupElementConnections (ElementTypePtr Element, FILE * FP)
   /* reset all currently marked connections */
   User = true;
   TheFlag = FOUNDFLAG;
-  ResetConnections (true);
+  ResetConnections (true, true);
   InitConnectionLookup ();
   PrintElementConnections (Element, FP, true);
   SetChangedFlag (true);
@@ -3241,7 +3241,7 @@ LookupConnectionsToAllElements (FILE * FP)
   /* reset all currently marked connections */
   User = false;
   TheFlag = FOUNDFLAG;
-  ResetConnections (false);
+  ResetConnections (false, false);
   InitConnectionLookup ();
 
   ELEMENT_LOOP (PCB->Data);
@@ -3251,12 +3251,12 @@ LookupConnectionsToAllElements (FILE * FP)
       break;
     SEPARATE (FP);
     if (Settings.ResetAfterElement && n != 1)
-      ResetConnections (false);
+      ResetConnections (false, false);
   }
   END_LOOP;
   if (Settings.RingBellWhenFinished)
     gui->beep ();
-  ResetConnections (false);
+  ResetConnections (false, false);
   FreeConnectionLookupMemory ();
   ClearAndRedrawOutput ();
 }
@@ -3418,7 +3418,7 @@ LookupUnusedPins (FILE * FP)
   /* reset all currently marked connections */
   User = true;
   SaveUndoSerialNumber ();
-  ResetConnections (true);
+  ResetConnections (true, true);
   RestoreUndoSerialNumber ();
   InitConnectionLookup ();
 
@@ -3572,7 +3572,7 @@ ResetFoundLinesAndPolygons (bool save_undo, bool redraw)
 /* ---------------------------------------------------------------------------
  * resets all found connections
  */
-static void
+bool
 ResetConnections (bool save_undo, bool redraw)
 {
   bool change = false;
@@ -3582,6 +3582,8 @@ ResetConnections (bool save_undo, bool redraw)
 
   if (change && save_undo)
     IncrementUndoSerialNumber ();
+
+  return change;
 }
 
 /*----------------------------------------------------------------------------
@@ -3651,7 +3653,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
           DumpList ();
           /* make the flag changes undoable */
           TheFlag = FOUNDFLAG | SELECTEDFLAG;
-          ResetConnections (false);
+          ResetConnections (false, false);
           User = true;
           drc = false;
           Bloat = -PCB->Shrink;
@@ -3700,7 +3702,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
     }
   /* now check the bloated condition */
   drc = false;
-  ResetConnections (false);
+  ResetConnections (false, false);
   TheFlag = FOUNDFLAG;
   ListStart (What, ptr1, ptr2, ptr3);
   Bloat = PCB->Bloat;
@@ -3711,7 +3713,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
       DumpList ();
       /* make the flag changes undoable */
       TheFlag = FOUNDFLAG | SELECTEDFLAG;
-      ResetConnections (false);
+      ResetConnections (false, false);
       User = true;
       drc = false;
       Bloat = 0;
@@ -3769,7 +3771,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
   drc = false;
   DumpList ();
   TheFlag = FOUNDFLAG | SELECTEDFLAG;
-  ResetConnections (false);
+  ResetConnections (false, false);
   return (false);
 }
 
@@ -3928,7 +3930,7 @@ DRCAll (void)
 
   TheFlag = FOUNDFLAG | DRCFLAG | SELECTEDFLAG;
 
-  ResetConnections (true);
+  ResetConnections (true, true);
 
   User = false;
 
@@ -3978,7 +3980,7 @@ DRCAll (void)
   END_LOOP;
 
   TheFlag = (IsBad) ? DRCFLAG : (FOUNDFLAG | DRCFLAG | SELECTEDFLAG);
-  ResetConnections (false);
+  ResetConnections (false, false);
   TheFlag = SELECTEDFLAG;
   /* check minimum widths and polygon clearances */
   if (!IsBad)
diff --git a/src/hid/gtk/gui-netlist-window.c b/src/hid/gtk/gui-netlist-window.c
index cee63da..6e129cc 100644
--- a/src/hid/gtk/gui-netlist-window.c
+++ b/src/hid/gtk/gui-netlist-window.c
@@ -516,17 +516,16 @@ netlist_select_cb (GtkWidget * widget, gpointer data)
     node_selected_net = NULL;
 
   InitConnectionLookup ();
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
-  SaveUndoSerialNumber ();
+  ResetConnections (false, false);
 
+  SaveUndoSerialNumber ();
   for (i = selected_net->EntryN, entry = selected_net->Entry; i; i--, entry++)
     if (SeekPad (entry, &conn, false))
       RatFindHook (conn.type, conn.ptr1, conn.ptr2, conn.ptr2, true, true);
   RestoreUndoSerialNumber ();
+
   SelectConnection (select_flag);
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
+  ResetConnections (false, false);
   FreeConnectionLookupMemory ();
   IncrementUndoSerialNumber ();
   Draw ();
diff --git a/src/hid/lesstif/netlist.c b/src/hid/lesstif/netlist.c
index 3438b33..b2952d8 100644
--- a/src/hid/lesstif/netlist.c
+++ b/src/hid/lesstif/netlist.c
@@ -136,8 +136,7 @@ nbcb_select_common (LibraryMenuTypePtr net, int pos, int select_flag)
   int i;
 
   InitConnectionLookup ();
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
+  ResetConnections (false);
   SaveUndoSerialNumber ();
 
   for (i = net->EntryN, entry = net->Entry; i; i--, entry++)
@@ -145,8 +144,7 @@ nbcb_select_common (LibraryMenuTypePtr net, int pos, int select_flag)
       RatFindHook (conn.type, conn.ptr1, conn.ptr2, conn.ptr2, true, true);
   RestoreUndoSerialNumber ();
   SelectConnection (select_flag);
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
+  ResetConncetions (false);
   FreeConnectionLookupMemory ();
   IncrementUndoSerialNumber ();
   Draw ();
diff --git a/src/rats.c b/src/rats.c
index 5fe86cd..3f2a8fa 100644
--- a/src/rats.c
+++ b/src/rats.c
@@ -463,8 +463,7 @@ GatherSubnets (NetListTypePtr Netl, bool NoWarn, bool AndRats)
   for (m = 0; Netl->NetN > 0 && m < Netl->NetN; m++)
     {
       a = &Netl->Net[m];
-      ResetFoundPinsViasAndPads (false);
-      ResetFoundLinesAndPolygons (false);
+      ResetConnections (false, false);
       RatFindHook (a->Connection[0].type, a->Connection[0].ptr1,
 		   a->Connection[0].ptr2, a->Connection[0].ptr2, false,
 		   AndRats);
@@ -545,8 +544,7 @@ GatherSubnets (NetListTypePtr Netl, bool NoWarn, bool AndRats)
       if (!NoWarn)
 	Warned |= CheckShorts (a->Connection[0].menu);
     }
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
+  ResetConnections (false, false);
   return (Warned);
 }
 
diff --git a/src/report.c b/src/report.c
index a9c429d..7d9063a 100644
--- a/src/report.c
+++ b/src/report.c
@@ -688,11 +688,8 @@ ReportAllNetLengths (int argc, char **argv, int x, int y)
       continue;
 
     got_one:
-      SaveUndoSerialNumber ();
-      ResetFoundPinsViasAndPads (true);
-      RestoreUndoSerialNumber ();
-      ResetFoundLinesAndPolygons (true);
-      RestoreUndoSerialNumber ();
+      ResetConnections (true, true);
+      /* FIXME: Need a serial number increment?? */
       length = XYtoNetLength (x, y, &found);
 
       gui->log("Net %s length %.*f %s\n", netname, prec, length*scale, units_name);
@@ -707,11 +704,8 @@ ReportNetLength (int argc, char **argv, int x, int y)
   char *netname = 0;
   int found = 0;
 
-  SaveUndoSerialNumber ();
-  ResetFoundPinsViasAndPads (true);
-  RestoreUndoSerialNumber ();
-  ResetFoundLinesAndPolygons (true);
-  RestoreUndoSerialNumber ();
+  ResetConnections (true, true);
+  /* FIXME: Need a serial number increment?? */
   gui->get_coords ("Click on a connection", &x, &y);
 
   length = XYtoNetLength (x, y, &found);
diff --git a/src/set.c b/src/set.c
index 7a41f73..837b786 100644
--- a/src/set.c
+++ b/src/set.c
@@ -292,11 +292,8 @@ SetMode (int Mode)
       Crosshair.AttachedLine.State = STATE_FIRST;
       if (Mode == LINE_MODE && TEST_FLAG (AUTODRCFLAG, PCB))
 	{
-	  SaveUndoSerialNumber ();
-	  ResetFoundPinsViasAndPads (true);
-	  RestoreUndoSerialNumber ();
-	  ResetFoundLinesAndPolygons (true);
-	  IncrementUndoSerialNumber ();
+	  if (ResetConnections (true, true))
+	    IncrementUndoSerialNumber ();
 	}
     }
 
diff --git a/src/toporouter.c b/src/toporouter.c
index 88c1325..7b44ec4 100644
--- a/src/toporouter.c
+++ b/src/toporouter.c
@@ -2799,8 +2799,7 @@ void
 import_clusters(toporouter_t *r)
 {
   NetListListType nets;
-  ResetFoundPinsViasAndPads (false);
-  ResetFoundLinesAndPolygons (false);
+  ResetConnections (false, false);
   nets = CollectSubnets(false);
   NETLIST_LOOP(&nets);
   {
