Bottom: 1543b8492b542d5e00de2256e73116aede4037cb
Top:    67a82f0d0c5e0d565f9297568774f9c53bc1b589
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-07-24 18:49:05 +0100

Refresh of hid-gtk-fixup-zoom-action

---

diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index c71e70b..28c79fa 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -31,6 +31,7 @@ RCSID ("$Id$");
 
 static void zoom_to (double factor, int x, int y);
 static void zoom_by (double factor, int x, int y);
+static void zoom_fit (void);
 
 int ghid_flip_x = 0, ghid_flip_y = 0;
 
@@ -64,7 +65,7 @@ ghid_pan_fixup ()
   if (gport->view_width > PCB->MaxWidth &&
       gport->view_height > PCB->MaxHeight)
     {
-      zoom_by (1, 0, 0);
+      zoom_fit ();
       return;
     }
 
@@ -128,29 +129,21 @@ static int
 Zoom (int argc, char **argv, int x, int y)
 {
   const char *vp;
+  int vx, vy;
   double v;
 
   if (argc > 1)
     AFAIL (zoom);
 
-  if (x == 0 && y == 0)
-    {
-      x = gport->view_width / 2;
-      y = gport->view_height / 2;
-    }
-  else
-    {
-      /* Px converts view->pcb, Vx converts pcb->view */
-      x = Vx (x);
-      y = Vy (y);
-    }
-
   if (argc < 1)
     {
-      zoom_to (1000000, 0, 0);
+      zoom_fit ();
       return 0;
     }
 
+  vx = Vx (x);
+  vy = Vy (y);
+
   vp = argv[0];
   if (*vp == '+' || *vp == '-' || *vp == '=')
     vp++;
@@ -160,15 +153,15 @@ Zoom (int argc, char **argv, int x, int y)
   switch (argv[0][0])
     {
     case '-':
-      zoom_by (1 / v, x, y);
+      zoom_by (1 / v, vx, vy);
       break;
     default:
     case '+':
-      zoom_by (v, x, y);
+      zoom_by (v, vx, vy);
       break;
     case '=':
       /* this needs to set the scale factor absolutely*/
-      zoom_to (v, x, y);
+      zoom_to (v, vx, vy);
       break;
     }
 
@@ -222,12 +215,19 @@ zoom_to (double new_zoom, int x, int y)
   ghid_set_status_line_label ();
 }
 
-void
+static void
 zoom_by (double factor, int x, int y)
 {
   zoom_to (gport->zoom * factor, x, y);
 }
 
+static void
+zoom_fit (void)
+{
+  zoom_to (MAX (PCB->MaxWidth  / gport->width,
+                PCB->MaxHeight / gport->height), 0, 0);
+}
+
 /* ------------------------------------------------------------ */
 
 void
@@ -1181,7 +1181,7 @@ PCBChanged (int argc, char **argv, int x, int y)
   RouteStylesChanged (0, NULL, 0, 0);
   ghid_port_ranges_scale (TRUE);
   ghid_port_ranges_pan (0, 0, FALSE);
-  ghid_port_ranges_zoom (0);
+  zoom_fit ();
   ghid_port_ranges_changed ();
   ghid_sync_with_new_layout ();
   return 0;
diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index 951a001..bc47214 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -147,52 +147,6 @@ ghid_port_ranges_scale (gboolean emit_changed)
     gtk_signal_emit_by_name (GTK_OBJECT (adj), "changed");
 }
 
-void
-ghid_port_ranges_zoom (gdouble zoom)
-{
-  gdouble xtmp, ytmp;
-  gint		x0, y0;
-
-  /* figure out zoom values in that would just make the width fit and
-   * that would just make the height fit
-   */
-  xtmp = (gdouble) PCB->MaxWidth / gport->width;
-  ytmp = (gdouble) PCB->MaxHeight / gport->height;
-
-  /* if we've tried to zoom further out than what would make the
-   * entire board fit or we passed 0, then pick a zoom that just makes
-   * the board fit.
-   */
-  if ((zoom > xtmp && zoom > ytmp) || zoom == 0.0)
-    zoom = (xtmp > ytmp) ? xtmp : ytmp;
-
-  xtmp = (SIDE_X (gport->pcb_x) - gport->view_x0) /
-            (gdouble) gport->view_width;
-  ytmp = (SIDE_Y (gport->pcb_y) - gport->view_y0) /
-            (gdouble) gport->view_height;
-
-  gport->zoom = zoom;
-  pixel_slop = zoom;
-  ghid_port_ranges_scale(FALSE);
-
-  x0 = SIDE_X (gport->pcb_x) - xtmp * gport->view_width;
-  if (x0 < 0)
-    x0 = 0;
-  gport->view_x0 = x0;
-
-  y0 = SIDE_Y (gport->pcb_y) - ytmp * gport->view_height;
-  if (y0 < 0)
-    y0 = 0;
-  gport->view_y0 = y0;
-
-  ghidgui->adjustment_changed_holdoff = TRUE;
-  gtk_range_set_value (GTK_RANGE (ghidgui->h_range), gport->view_x0);
-  gtk_range_set_value (GTK_RANGE (ghidgui->v_range), gport->view_y0);
-  ghidgui->adjustment_changed_holdoff = FALSE;
-
-  ghid_port_ranges_changed();
-}
-
 
 /* ---------------------------------------------------------------------- 
  * handles all events from PCB drawing area
diff --git a/src/hid/gtk/gui-top-window.c b/src/hid/gtk/gui-top-window.c
index b11d32c..f0d3da5 100644
--- a/src/hid/gtk/gui-top-window.c
+++ b/src/hid/gtk/gui-top-window.c
@@ -2382,7 +2382,6 @@ ghid_parse_arguments (int *argc, char ***argv)
   gtk_init (argc, argv);
 
   gport = &ghid_port;
-  gport->zoom = 300.0;
   pixel_slop = 300;
 
   ghid_init_renderer (argc, argv, gport);
diff --git a/src/hid/gtk/gui.h b/src/hid/gtk/gui.h
index e825b75..930df19 100644
--- a/src/hid/gtk/gui.h
+++ b/src/hid/gtk/gui.h
@@ -276,7 +276,6 @@ void ghid_get_pointer (gint *, gint *);
 /* gui-output-events.c function prototypes.
 */
 void ghid_port_ranges_changed (void);
-void ghid_port_ranges_zoom (gdouble zoom);
 gboolean ghid_port_ranges_pan (gdouble x, gdouble y, gboolean relative);
 void ghid_port_ranges_scale (gboolean emit_changed);
 void ghid_port_ranges_update_ranges (void);
