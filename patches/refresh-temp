Bottom: 24f22c095bce08e25f94955b4d128962c13ab3f3
Top:    0e14e0fd773fae11a6e41cf754ec4f3857a7bb9d
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-06-04 13:10:11 +0100

Refresh of support-holes-in-input-polygon

---

diff --git a/src/create.c b/src/create.c
index 5bade30..f419d2a 100644
--- a/src/create.c
+++ b/src/create.c
@@ -650,25 +650,6 @@ CreateNewHoleInPolygon (PolygonType *Polygon)
   return Polygon;
 }
 
-/* ---------------------------------------------------------------------------
- * creates a new point in a polygon's hole
- */
-PointTypePtr
-CreateNewPointInPolygonHole (PolygonTypePtr Polygon,
-                             LocationType X,
-                             LocationType Y)
-{
-  PointTypePtr point = GetPointMemoryInPolygon (Polygon);
-
-  printf ("Adding point %i,%i to polygon %i hole\n", X, Y, Polygon->ID);
-
-  /* copy values */
-  point->X = X;
-  point->Y = Y;
-  point->ID = ID++;
-  return point;
-}
-
 static char *refdes_map_file = "refdes.map";
 static GHashTable *refdes_map_table = NULL;
 
diff --git a/src/create.h b/src/create.h
index 721e577..5ed2404 100644
--- a/src/create.h
+++ b/src/create.h
@@ -63,8 +63,6 @@ PolygonTypePtr CreateNewPolygon (LayerTypePtr, FlagType);
 PointTypePtr CreateNewPointInPolygon (PolygonTypePtr,
 				      LocationType, LocationType);
 PolygonType *CreateNewHoleInPolygon (PolygonType *polygon);
-PointTypePtr CreateNewPointInPolygonHole (PolygonTypePtr,
-					  LocationType, LocationType);
 void RefdesMapInit (void);
 ElementTypePtr CreateNewElement (DataTypePtr, ElementTypePtr,
 				 FontTypePtr, FlagType, char *, char *,
diff --git a/src/parse_y.y b/src/parse_y.y
index ef178e3..b5a3fe3 100644
--- a/src/parse_y.y
+++ b/src/parse_y.y
@@ -1119,12 +1119,6 @@ Defines a hole within the polygon's outer contour. There may be zero or more suc
 
 %end-doc */
 
-polygonholes
-		: /* empty */
-		| polygonhole
-		| polygonholes polygonhole
-		;
-
 polygon_format
 		: /* flags are passed in */
 		T_POLYGON '(' flags ')' '('
@@ -1153,22 +1147,10 @@ polygon_format
 			}
 		;
 
-polygonpoints
-		: polygonpoint
-		| polygonpoints polygonpoint
-		;
-
-polygonpoint
-			/* xcoord ycoord */
-		: '(' NUMBER NUMBER ')'
-			{
-				CreateNewPointInPolygon(Polygon, $2*100, $3*100);
-			}
-		| '[' NUMBER NUMBER ']'
-			{
-				CreateNewPointInPolygon(Polygon, $2, $3);
-			}
-		|
+polygonholes
+		: /* empty */
+		| polygonhole
+		| polygonholes polygonhole
 		;
 
 polygonhole
@@ -1176,22 +1158,23 @@ polygonhole
 			{
 				Hole = CreateNewHoleInPolygon (Polygon);
 			}
-		  polygonholepoints ')'
+		  polygonpoints ')'
+		;
 
-polygonholepoints
-		: polygonholepoint
-		| polygonholepoints polygonholepoint
+polygonpoints
+		: polygonpoint
+		| polygonpoints polygonpoint
 		;
 
-polygonholepoint
+polygonpoint
 			/* xcoord ycoord */
 		: '(' NUMBER NUMBER ')'
 			{
-				CreateNewPointInPolygonHole(Hole, $2*100, $3*100);
+				CreateNewPointInPolygon(Polygon, $2*100, $3*100);
 			}
 		| '[' NUMBER NUMBER ']'
 			{
-				CreateNewPointInPolygonHole(Hole, $2, $3);
+				CreateNewPointInPolygon(Polygon, $2, $3);
 			}
 		|
 		;
diff --git a/src/polygon.h b/src/polygon.h
index f4c0b01..ccf3164 100644
--- a/src/polygon.h
+++ b/src/polygon.h
@@ -67,6 +67,4 @@ Boolean MorphPolygon (LayerTypePtr, PolygonTypePtr);
 void NoHolesPolygonDicer (PolygonType *p, const BoxType *clip,
                           void (*emit) (PLINE *, void *), void *user_data);
 POLYAREA *board_outline_poly ();
-PolygonType *CreateNewPolygonHole (PolygonType *polygon);
-PointTypePtr CreateNewPointInPolygonHole (PolygonTypePtr Polygon, LocationType X, LocationType Y);
 #endif
