Bottom: db4b4b0e025559e959e5b6666caaea981a2cda44
Top:    703fa5cee0ffd57a5871914a938d05d7d9193190
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-11-19 01:00:53 +0000

Refresh of push-special-case-thindraw-vs-

---

diff --git a/src/hid/common/draw_helpers.c b/src/hid/common/draw_helpers.c
index a854435..427b0f1 100644
--- a/src/hid/common/draw_helpers.c
+++ b/src/hid/common/draw_helpers.c
@@ -140,6 +140,26 @@ should_compute_no_holes (PolygonType *poly, const BoxType *clip_box)
 #undef BOUNDS_INSIDE_CLIP_THRESHOLD
 
 void
+common_gui_draw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+{
+  if (TEST_FLAG (THINDRAWFLAG, PCB) || TEST_FLAG (THINDRAWPOLYFLAG, PCB))
+    common_thindraw_pcb_polygon (gc, polygon, drawn_area);
+  else
+    common_fill_pcb_polygon (gc, polygon, drawn_area);
+
+  /* If checking planes, thin-draw any pieces which have been clipped away */
+  if (TEST_FLAG (CHECKPLANESFLAG, PCB) && !TEST_FLAG (FULLPOLYFLAG, polygon))
+    {
+      PolygonType poly = *polygon;
+
+      for (poly.Clipped = polygon->Clipped->f;
+           poly.Clipped != polygon->Clipped;
+           poly.Clipped = poly.Clipped->f)
+        common_thindraw_pcb_polygon (gc, &poly, drawn_area);
+    }
+}
+
+void
 common_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
   if (!poly->NoHolesValid)
diff --git a/src/hid/common/draw_helpers.h b/src/hid/common/draw_helpers.h
index 8243fe4..0d16415 100644
--- a/src/hid/common/draw_helpers.h
+++ b/src/hid/common/draw_helpers.h
@@ -1,7 +1,6 @@
-void common_fill_pcb_polygon (hidGC gc, PolygonType *poly,
-                              const BoxType *clip_box);
-void common_thindraw_pcb_polygon (hidGC gc, PolygonType *poly,
-                                  const BoxType *clip_box);
+void common_gui_draw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box);
+void common_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box);
+void common_thindraw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box);
 void common_fill_pcb_pad (hidGC gc, PadType *pad, bool clear, bool mask);
 void common_thindraw_pcb_pad (hidGC gc, PadType *pad, bool clear, bool mask);
 void common_fill_pcb_pv (hidGC gc, PinType *pv, bool drawHole, bool mask);
diff --git a/src/hid/gtk/gtkhid-gdk.c b/src/hid/gtk/gtkhid-gdk.c
index c061361..6c159b4 100644
--- a/src/hid/gtk/gtkhid-gdk.c
+++ b/src/hid/gtk/gtkhid-gdk.c
@@ -699,26 +699,6 @@ ghid_fill_rect (hidGC gc, Coord x1, Coord y1, Coord x2, Coord y2)
 }
 
 static void
-ghid_draw_pcb_polygon (hidGC gc, PolygonType *polygon, const BoxType *drawn_area)
-{
-  if (TEST_FLAG (THINDRAWFLAG, PCB) || TEST_FLAG (THINDRAWPOLYFLAG, PCB))
-    common_thindraw_pcb_polygon (gc, polygon, drawn_area);
-  else
-    common_fill_pcb_polygon (gc, polygon, drawn_area);
-
-  /* If checking planes, thin-draw any pieces which have been clipped away */
-  if (TEST_FLAG (CHECKPLANESFLAG, PCB) && !TEST_FLAG (FULLPOLYFLAG, polygon))
-    {
-      PolygonType poly = *polygon;
-
-      for (poly.Clipped = polygon->Clipped->f;
-           poly.Clipped != polygon->Clipped;
-           poly.Clipped = poly.Clipped->f)
-        common_thindraw_pcb_polygon (gc, &poly, drawn_area);
-    }
-}
-
-static void
 redraw_region (GdkRectangle *rect)
 {
   int eleft, eright, etop, ebottom;
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index f34562e..54ecebd 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -811,7 +811,7 @@ ghid_init_renderer (int *argc, char ***argv, GHidPort *port)
 
   /* Setup HID function pointers specific to the GL renderer*/
   ghid_hid.end_layer = ghid_end_layer;
-/* XXX: ONLY GL SPECIFIC FOR THE FILL ROUTINE  ghid_hid.draw_pcb_polygon = ghid_draw_pcb_polygon; */
+  ghid_hid.draw_pcb_polygon = ghid_draw_pcb_polygon;
 }
 
 void
@@ -901,7 +901,7 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
      we can't use the hidgl polygon drawing routine */
   /* TODO: We could use the GLU tessellator though */
   if (hidgl_stencil_bits() == 0)
-    ghid_hid.draw_pcb_polygon = common_draw_pcb_polygon; /* XXX: THIS WILL KILL THE RENDERING THINDRAW FUNCTIONALITY TOO */
+    ghid_hid.draw_pcb_polygon = common_gui_draw_pcb_polygon;
 
   glEnable (GL_BLEND);
   glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 7b07561..8fc142f 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -2181,7 +2181,7 @@ hid_gtk_init ()
   ghid_hid.notify_save_pcb          = ghid_notify_save_pcb;
   ghid_hid.notify_filename_changed  = ghid_notify_filename_changed;
 
-  ghid_hid.draw_pcb_polygon         = ghid_draw_pcb_polygon;
+  ghid_hid.draw_pcb_polygon         = common_gui_draw_pcb_polygon;
 
   ghid_hid.graphics                 = &ghid_graphics;
 
diff --git a/src/hid/gtk/gui.h b/src/hid/gtk/gui.h
index af719fd..6c6f26c 100644
--- a/src/hid/gtk/gui.h
+++ b/src/hid/gtk/gui.h
@@ -484,6 +484,7 @@ void ghid_draw_rect (hidGC gc, Coord x1, Coord y1, Coord x2, Coord y2);
 void ghid_fill_circle (hidGC gc, Coord cx, Coord cy, Coord radius);
 void ghid_fill_polygon (hidGC gc, int n_coords, Coord *x, Coord *y);
 void ghid_fill_rect (hidGC gc, Coord x1, Coord y1, Coord x2, Coord y2);
+void ghid_draw_pcb_polygon (hidGC gc, PolygonType *polygon, const BoxType *drawn_area);
 void ghid_invalidate_lr (int left, int right, int top, int bottom);
 void ghid_invalidate_all ();
 void ghid_notify_crosshair_change (bool changes_complete);
diff --git a/src/hid/lesstif/main.c b/src/hid/lesstif/main.c
index 189fbc3..d95e391 100644
--- a/src/hid/lesstif/main.c
+++ b/src/hid/lesstif/main.c
@@ -3479,26 +3479,6 @@ lesstif_fill_rect (hidGC gc, Coord x1, Coord y1, Coord x2, Coord y2)
 }
 
 static void
-lesstif_draw_pcb_polygon (hidGC gc, PolygonType *polygon, const BoxType *drawn_area)
-{
-  if (TEST_FLAG (THINDRAWFLAG, PCB) || TEST_FLAG (THINDRAWPOLYFLAG, PCB))
-    common_thindraw_pcb_polygon (gc, polygon, drawn_area);
-  else
-    common_fill_pcb_polygon (gc, polygon, drawn_area);
-
-  /* If checking planes, thin-draw any pieces which have been clipped away */
-  if (TEST_FLAG (CHECKPLANESFLAG, PCB) && !TEST_FLAG (FULLPOLYFLAG, polygon))
-    {
-      PolygonType poly = *polygon;
-
-      for (poly.Clipped = polygon->Clipped->f;
-           poly.Clipped != polygon->Clipped;
-           poly.Clipped = poly.Clipped->f)
-        common_thindraw_pcb_polygon (gc, &poly, drawn_area);
-    }
-}
-
-static void
 lesstif_calibrate (double xval, double yval)
 {
   CRASH;
@@ -4110,7 +4090,7 @@ hid_lesstif_init ()
   lesstif_hid.flush_debug_draw        = lesstif_flush_debug_draw;
   lesstif_hid.finish_debug_draw       = lesstif_finish_debug_draw;
 
-  lesstif_hid.draw_pcb_polygon        = lesstif_draw_pcb_polygon;
+  lesstif_hid.draw_pcb_polygon        = common_gui_draw_pcb_polygon;
 
   lesstif_hid.graphics                = &lesstif_graphics;
