Bottom: a96a551f3c2c73b2bfda2d9b970b709f162e8542
Top:    998694800e6685c6283a4191877a80c0cf44fa3f
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-11-16 01:18:31 +0000

Refresh of try-some-new-things-with-my-re

---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index ca42744..e41eac9 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -326,26 +326,26 @@ ghid_draw_grid (BoxTypePtr drawn_area)
 }
 
 static void
-setup_resistor_texture ()
+setup_resistor_texture (GLfloat *body_color, float value)
 {
   GLuint texture;
-  GLfloat tex_data[] = {0.5, 0.5, 1.0,
-                        0.5, 0.5, 1.0,
-                        0.5, 0.5, 1.0,
+  GLfloat tex_data[] = {body_color[0], body_color[1], body_color[2],
+                        body_color[0], body_color[1], body_color[2],
+                        body_color[0], body_color[1], body_color[2],
                         0.0, 0.0, 0.0,
-                        0.5, 0.5, 1.0,
+                        body_color[0], body_color[1], body_color[2],
                         1.0, 0.0, 0.0,
-                        0.5, 0.5, 1.0,
+                        body_color[0], body_color[1], body_color[2],
                         0.0, 1.0, 0.0,
-                        0.5, 0.5, 1.0,
-                        0.5, 0.5, 1.0};
+                        body_color[0], body_color[1], body_color[2],
+                        body_color[0], body_color[1], body_color[2]};
 
   glGenTextures (1, &texture);
   glBindTexture (GL_TEXTURE_1D, texture);
   glTexImage1D (GL_TEXTURE_1D, 0, GL_RGB, 10, 1, GL_RGB, GL_FLOAT, tex_data);
 }
 
-#define NUM_RESISTOR_STRIPS 30
+#define NUM_RESISTOR_STRIPS 100
 #define NUM_PIN_RINGS 15
 #define MIL_TO_INTERNAL 100.
 static void
@@ -354,6 +354,8 @@ ghid_draw_acy_resistor (ElementType *element)
 
   float center_x, center_y, surface_depth;
   float angle;
+  GLfloat resistor_body_color[] = {0.31, 0.47, 0.64};
+  GLfloat resistor_pin_color[] = {0.82, 0.82, 0.82};
 
   int strip;
   int no_strips = NUM_RESISTOR_STRIPS;
@@ -395,7 +397,7 @@ ghid_draw_acy_resistor (ElementType *element)
   /* TEXTURE SETUP */
   glGetIntegerv (GL_CURRENT_PROGRAM, &sp);
   glUseProgram (0);
-  setup_resistor_texture ();
+  setup_resistor_texture (resistor_body_color, 0);
   glEnable (GL_TEXTURE_1D);
 
   glTexEnvf (GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);
@@ -412,9 +414,11 @@ ghid_draw_acy_resistor (ElementType *element)
 
   if (1) {
     GLfloat emission[] = {0.0f, 0.0f, 0.0f, 1.0f};
-    GLfloat specular[] = {0.0f, 0.0f, 0.0f, 1.0f};
+    GLfloat specular[] = {0.5f, 0.5f, 0.5f, 1.0f};
+    GLfloat shininess = 20.;
     glMaterialfv (GL_FRONT_AND_BACK, GL_EMISSION, emission);
     glMaterialfv (GL_FRONT_AND_BACK, GL_SPECULAR, specular);
+    glMaterialfv (GL_FRONT_AND_BACK, GL_SHININESS, &shininess);
   }
 
   glBegin (GL_TRIANGLE_STRIP);
@@ -539,7 +543,9 @@ ghid_draw_acy_resistor (ElementType *element)
 
   glDisable (GL_TEXTURE_1D);
 
-  glColor4f (0.5, 0.5, 0.5, 1.);
+  glColor3f (resistor_pin_color[0],
+             resistor_pin_color[1],
+             resistor_pin_color[2]);
 
   if (1) {
     GLfloat specular[] = {0.5, 0.5, 0.5, 1.0};
@@ -2450,7 +2456,7 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
   glEnable (GL_LIGHT0);
 
   /* XXX: FIX OUR NORMALS */
-  glEnable (GL_NORMALIZE);
+//  glEnable (GL_NORMALIZE);
 //  glEnable (GL_RESCALE_NORMAL);
 
   glDepthFunc (GL_LESS);
@@ -2463,10 +2469,11 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
     GLfloat global_ambient[] = {0.0f, 0.0f, 0.0f, 1.0f};
     glLightModelfv (GL_LIGHT_MODEL_AMBIENT, global_ambient);
     glLightModeli (GL_LIGHT_MODEL_LOCAL_VIEWER, GL_FALSE);
+    glLightModeli (GL_LIGHT_MODEL_COLOR_CONTROL, GL_SEPARATE_SPECULAR_COLOR);
   }
   if (1) {
-    GLfloat diffuse[] =  {0.3, 0.3, 0.3, 1.0};
-    GLfloat ambient[] =  {0.7, 0.7, 0.7, 1.0};
+    GLfloat diffuse[] =  {0.6, 0.6, 0.6, 1.0};
+    GLfloat ambient[] =  {0.4, 0.4, 0.4, 1.0};
     GLfloat specular[] = {1.0, 1.0, 1.0, 1.0};
     glLightfv (GL_LIGHT0, GL_DIFFUSE,  diffuse);
     glLightfv (GL_LIGHT0, GL_AMBIENT,  ambient);
@@ -2474,7 +2481,14 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
   }
   if (1) {
 //    GLfloat position[] = {1., -1., 1., 0.};
-    GLfloat position[] = {1., -0.5, 1., 0.};
+//    GLfloat position[] = {1., -0.5, 1., 0.};
+    GLfloat position[] = {0., -0.5, 1., 0.};
+    GLfloat abspos = sqrt (position[0] * position[0] +
+                           position[1] * position[1] +
+                           position[2] * position[2]);
+    position[0] /= abspos;
+    position[1] /= abspos;
+    position[2] /= abspos;
     glPushMatrix ();
     glLoadIdentity ();
     glLightfv (GL_LIGHT0, GL_POSITION, position);
