Bottom: 720dad19453052567f7c6a4434e83d23ef70345d
Top:    926b018a0c9a8483c86888bffe3e061f53ffb7f6
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-11-15 00:05:06 +0000

Refresh of make-rats-snap-to-the-center-o

---

diff --git a/src/find.c b/src/find.c
index 30a1ea5..dba0e3a 100644
--- a/src/find.c
+++ b/src/find.c
@@ -330,7 +330,7 @@ static Boolean LookupLOConnectionsToPad (PadTypePtr, Cardinal);
 static Boolean LookupLOConnectionsToPolygon (PolygonTypePtr, Cardinal);
 static Boolean LookupLOConnectionsToArc (ArcTypePtr, Cardinal);
 static Boolean LookupLOConnectionsToRatEnd (PointTypePtr, Cardinal);
-static Boolean IsRatPointOnLine (PointTypePtr, LineTypePtr);
+static Boolean IsRatPointOnLineEnd (PointTypePtr, LineTypePtr);
 static Boolean ArcArcIntersect (ArcTypePtr, ArcTypePtr);
 static Boolean PrepareNextLoop (FILE *);
 static Boolean PrintElementConnections (ElementTypePtr, FILE *, Boolean);
@@ -1458,12 +1458,11 @@ ArcArcIntersect (ArcTypePtr Arc1, ArcTypePtr Arc2)
  * Tests if point is same as line end point
  */
 static Boolean
-IsRatPointOnLine (PointTypePtr Point, LineTypePtr Line)
+IsRatPointOnLineEnd (PointTypePtr Point, LineTypePtr Line)
 {
-  if ((Point->X == Line->Point1.X && Point->Y == Line->Point1.Y) ||
-      (Point->X == Line->Point2.X && Point->Y == Line->Point2.Y) ||
-      (Point->X == (Line->Point1.X + Line->Point2.X) / 2 &&
-       Point->Y == (Line->Point1.Y + Line->Point2.Y) / 2))
+  if ((Point->X == Line->Point1.X
+       && Point->Y == Line->Point1.Y)
+      || (Point->X == Line->Point2.X && Point->Y == Line->Point2.Y))
     return (True);
   return (False);
 }
@@ -1948,13 +1947,13 @@ LOCtoLineRat_callback (const BoxType * b, void *cl)
   if (!TEST_FLAG (TheFlag, rat))
     {
       if ((rat->group1 == i->layer)
-          && IsRatPointOnLine (&rat->Point1, &i->line))
+          && IsRatPointOnLineEnd (&rat->Point1, &i->line))
         {
           if (ADD_RAT_TO_LIST (rat))
             longjmp (i->env, 1);
         }
       else if ((rat->group2 == i->layer)
-               && IsRatPointOnLine (&rat->Point2, &i->line))
+               && IsRatPointOnLineEnd (&rat->Point2, &i->line))
         {
           if (ADD_RAT_TO_LIST (rat))
             longjmp (i->env, 1);
@@ -2192,9 +2191,11 @@ LOCtoPad_callback (const BoxType * b, void *cl)
   struct rat_info *i = (struct rat_info *) cl;
 
   if (!TEST_FLAG (TheFlag, pad) && i->layer ==
-        (TEST_FLAG (ONSOLDERFLAG, pad) ? SOLDER_LAYER : COMPONENT_LAYER) &&
-      i->Point->X == (pad->Point1.X + pad->Point2.X) / 2 &&
-      i->Point->Y == (pad->Point1.Y + pad->Point2.Y) / 2 &&
+	(TEST_FLAG (ONSOLDERFLAG, pad) ? SOLDER_LAYER : COMPONENT_LAYER) &&
+      ((pad->Point1.X == i->Point->X && pad->Point1.Y == i->Point->Y) ||
+       (pad->Point2.X == i->Point->X && pad->Point2.Y == i->Point->Y) ||
+       ((pad->Point1.X + pad->Point2.X) / 2 == i->Point->X &&
+        (pad->Point1.Y + pad->Point2.Y) / 2 == i->Point->Y)) &&
       ADD_PAD_TO_LIST (i->layer, pad))
     longjmp (i->env, 1);
   return 0;
diff --git a/src/rubberband.c b/src/rubberband.c
index a806d6d..ec4920f 100644
--- a/src/rubberband.c
+++ b/src/rubberband.c
@@ -293,6 +293,16 @@ rat_callback (const BoxType * box, void *cl)
 	if (rat->Point2.X == i->pad->Point2.X &&
 	    rat->Point2.Y == i->pad->Point2.Y && rat->group2 == i->group)
 	CreateNewRubberbandEntry (NULL, (LineTypePtr) rat, &rat->Point2);
+      else
+	if (rat->Point1.X == (i->pad->Point1.X + i->pad->Point2.X) / 2 &&
+	    rat->Point1.Y == (i->pad->Point1.Y + i->pad->Point2.Y) / 2 &&
+	    rat->group1 == i->group)
+	CreateNewRubberbandEntry (NULL, (LineTypePtr) rat, &rat->Point1);
+      else
+	if (rat->Point2.X == (i->pad->Point1.X + i->pad->Point2.X) / 2 &&
+	    rat->Point2.Y == (i->pad->Point1.Y + i->pad->Point2.Y) / 2 &&
+	    rat->group2 == i->group)
+	CreateNewRubberbandEntry (NULL, (LineTypePtr) rat, &rat->Point2);
       break;
     case LINEPOINT_TYPE:
       if (rat->group1 == i->group &&
