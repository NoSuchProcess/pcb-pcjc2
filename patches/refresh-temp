Bottom: 1a90f0e14eecefd61bec429d968c612b3d824fbc
Top:    f558a7903be244d8a2a0de3856d3328c7834508a
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-10-20 03:04:36 +0100

Refresh of use-trackball-to-allow-rotatio

---

diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index 784f77f..92c2def 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -861,20 +861,16 @@ ghid_port_drawing_area_expose_event_cb (GtkWidget * widget,
   glEnable (GL_BLEND);
   glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
 
-//  glEnable (GL_DEPTH_TEST);
-
 //  glEnable(GL_POLYGON_SMOOTH);
 //  glHint(GL_POLYGON_SMOOTH_HINT, [GL_FASTEST, GL_NICEST, or GL_DONT_CARE]);
 
   glViewport (widget->allocation.x,     widget->allocation.y,
               widget->allocation.width, widget->allocation.height);
 
-#if 0
   glEnable (GL_SCISSOR_TEST);
   glScissor (ev->area.x,
              widget->allocation.height - ev->area.height - ev->area.y,
              ev->area.width, ev->area.height);
-#endif
 
   glMatrixMode (GL_PROJECTION);
   glLoadIdentity ();
@@ -893,17 +889,15 @@ ghid_port_drawing_area_expose_event_cb (GtkWidget * widget,
                 1.);
 
   glDepthMask (0);
-//  glClearDepth (1000);
   glStencilMask (~0);
   glClearStencil (0);
-  glClear (GL_COLOR_BUFFER_BIT | GL_STENCIL_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
+  glClear (GL_COLOR_BUFFER_BIT | GL_STENCIL_BUFFER_BIT);
   hidgl_reset_stencil_usage ();
 
   /* Disable the stencil test until we need it - otherwise it gets dirty */
   glDisable (GL_STENCIL_TEST);
   glStencilFunc (GL_ALWAYS, 0, 0);
 
-#if 1
   region.X1 = MIN (Px (ev->area.x), Px (ev->area.x + ev->area.width + 1));
   region.X2 = MAX (Px (ev->area.x), Px (ev->area.x + ev->area.width + 1));
   region.Y1 = MIN (Py (ev->area.y), Py (ev->area.y + ev->area.height + 1));
@@ -925,7 +919,6 @@ ghid_port_drawing_area_expose_event_cb (GtkWidget * widget,
 
   /* TODO: Background image */
 
-#if 1
   hidgl_init_triangle_array (&buffer);
   ghid_invalidate_current_gc ();
 
@@ -963,13 +956,11 @@ ghid_port_drawing_area_expose_event_cb (GtkWidget * widget,
   hidgl_flush_triangles (&buffer);
   glPopMatrix ();
 
-#endif
 
   ghid_show_crosshair (TRUE);
 
   hidgl_flush_triangles (&buffer);
 
-#endif
 
   if (gdk_gl_drawable_is_double_buffered (pGlDrawable))
     gdk_gl_drawable_swap_buffers (pGlDrawable);
