Bottom: 1f5639b83681bd2ec4c3eff6a179b30e387861ff
Top:    17034d91460454faa121b62f230ec0935358e865
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-08-28 16:40:26 +0100

Refresh of hid-gerber-don-t-use-the-core-

---

diff --git a/src/hid/gerber/gerber.c b/src/hid/gerber/gerber.c
index a5405ce..003a77e 100644
--- a/src/hid/gerber/gerber.c
+++ b/src/hid/gerber/gerber.c
@@ -50,7 +50,7 @@ RCSID ("$Id$");
 static HID_Attribute * gerber_get_export_options (int *n);
 static void gerber_do_export (HID_Attr_Val * options);
 static void gerber_parse_arguments (int *argc, char ***argv);
-static int set_layer (const char *name, int group, int empty);
+static bool set_layer (const char *name, int group);
 static hidGC gerber_make_gc (void);
 static void gerber_destroy_gc (hidGC gc);
 static void gerber_use_mask (int use_it);
@@ -501,38 +501,38 @@ gerber_expose (HID * hid, BoxType *drawn_area, void *item)
       if (!print_group[group])
         continue;
 
-      if (set_layer (0, group, 0))
+      if (set_layer (0, group))
         if (DrawLayerGroup (group, drawn_area))
           DrawPPV (group, drawn_area);
     }
 
   count_holes (drawn_area, &nplated, &nunplated);
 
-  if (nplated && set_layer ("plated-drill", SL (PDRILL, 0), 0))
+  if (nplated && set_layer ("plated-drill", SL (PDRILL, 0)))
     DrawHoles (true, drawn_area);
 
-  if (nunplated && set_layer ("unplated-drill", SL (UDRILL, 0), 0))
+  if (nunplated && set_layer ("unplated-drill", SL (UDRILL, 0)))
     DrawHoles (false, drawn_area);
 
-  if (set_layer ("componentmask", SL (MASK, TOP), 0))
+  if (set_layer ("componentmask", SL (MASK, TOP)))
     DrawMask (COMPONENT_LAYER, drawn_area);
 
-  if (set_layer ("soldermask", SL (MASK, BOTTOM), 0))
+  if (set_layer ("soldermask", SL (MASK, BOTTOM)))
     DrawMask (SOLDER_LAYER, drawn_area);
 
-  if (set_layer ("topsilk", SL (SILK, TOP), 0))
+  if (set_layer ("topsilk", SL (SILK, TOP)))
     DrawSilk (COMPONENT_LAYER, drawn_area);
 
-  if (set_layer ("bottomsilk", SL (SILK, BOTTOM), 0))
+  if (set_layer ("bottomsilk", SL (SILK, BOTTOM)))
     DrawSilk (SOLDER_LAYER, drawn_area);
 
-  if (set_layer ("toppaste", SL (PASTE, TOP), 0))
+  if (set_layer ("toppaste", SL (PASTE, TOP)))
     DrawPaste (COMPONENT_LAYER, drawn_area);
 
-  if (set_layer ("bottompaste", SL (PASTE, BOTTOM), 0))
+  if (set_layer ("bottompaste", SL (PASTE, BOTTOM)))
     DrawPaste (SOLDER_LAYER, drawn_area);
 
-  if (set_layer ("fab", SL (FAB, 0), 0))
+  if (set_layer ("fab", SL (FAB, 0)))
     PrintFab (Output.fgGC);
 
   gui->destroy_gc (Output.fgGC);
@@ -651,9 +651,17 @@ drill_sort (const void *va, const void *vb)
   return b->y - b->y;
 }
 
-static int
-set_layer (const char *name, int group, int empty)
+static bool
+set_layer (const char *name, int group)
 {
+  time_t currenttime;
+  char utcTime[64];
+#ifdef HAVE_GETPWUID
+  struct passwd *pwentry;
+#endif
+  ApertureList *aptr_list;
+  Aperture *search;
+
   int want_outline;
   char *cp;
   int idx = (group >= 0
@@ -693,18 +701,6 @@ set_layer (const char *name, int group, int empty)
   is_drill = (SL_TYPE (idx) == SL_PDRILL || SL_TYPE (idx) == SL_UDRILL);
   is_mask = (SL_TYPE (idx) == SL_MASK);
   current_mask = 0;
-#if 0
-  printf ("Layer %s group %d drill %d mask %d\n", name, group, is_drill,
-          is_mask);
-#endif
-
-  time_t currenttime;
-  char utcTime[64];
-#ifdef HAVE_GETPWUID
-  struct passwd *pwentry;
-#endif
-  ApertureList *aptr_list;
-  Aperture *search;
 
   lastX = -1;
   lastY = -1;
@@ -821,17 +817,17 @@ set_layer (const char *name, int group, int empty)
   if (copy_outline_mode == COPY_OUTLINE_SILK
       && SL_TYPE (idx) == SL_SILK)
     want_outline = 1;
-  if (copy_outline_mode == COPY_OUTLINE_ALL
-      && (SL_TYPE (idx) == SL_SILK
-          || SL_TYPE (idx) == SL_MASK
-          || SL_TYPE (idx) == SL_FAB
-          || SL_TYPE (idx) == SL_ASSY
-          || SL_TYPE (idx) == 0))
+  if (copy_outline_mode == COPY_OUTLINE_ALL &&
+      (SL_TYPE (idx) == SL_SILK ||
+       SL_TYPE (idx) == SL_MASK ||
+       SL_TYPE (idx) == SL_FAB  ||
+       SL_TYPE (idx) == SL_ASSY ||
+       SL_TYPE (idx) == 0))
     want_outline = 1;
 
-  if (want_outline
-      && strcmp (name, "outline")
-      && strcmp (name, "route"))
+  if (want_outline &&
+      strcmp (name, "outline") != 0 &&
+      strcmp (name, "route") != 0)
     {
       if (outline_layer &&
           outline_layer != PCB->Data->Layer+idx)
