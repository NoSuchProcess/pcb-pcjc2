Bottom: 7dfe2208687b00e993e0ec8e469fe8c6ed50a287
Top:    ca2388b9fec3713cd1c0ee00adb0ce3ac2baf5a0
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-26 19:12:47 +0100

Refresh of continue-with-crazy-idea

---

diff --git a/src/draw_funcs.c b/src/draw_funcs.c
index 1867e409..363a85e 100644
--- a/src/draw_funcs.c
+++ b/src/draw_funcs.c
@@ -16,13 +16,13 @@ _draw_pv (PinType *pv, bool draw_hole)
 }
 
 static void
-draw_pin (PinType *pin, BoxType *drawn_area, void *userdata)
+draw_pin (PinType *pin, const BoxType *drawn_area, void *userdata)
 {
   _draw_pv (pin, false);
 }
 
 static void
-draw_pin_mask (PinType *pin, BoxType *drawn_area, void *userdata)
+draw_pin_mask (PinType *pin, const BoxType *drawn_area, void *userdata)
 {
   if (TEST_FLAG (THINDRAWFLAG, PCB) || TEST_FLAG (THINDRAWPOLYFLAG, PCB))
     gui->thindraw_pcb_pv (Output.pmGC, Output.pmGC, pin, false, true);
@@ -31,13 +31,13 @@ draw_pin_mask (PinType *pin, BoxType *drawn_area, void *userdata)
 }
 
 static void
-draw_via (PinType *via, BoxType *drawn_area, void *userdata)
+draw_via (PinType *via, const BoxType *drawn_area, void *userdata)
 {
   _draw_pv (via, false);
 }
 
 static void
-draw_via_mask (PinType *via, BoxType *drawn_area, void *userdata)
+draw_via_mask (PinType *via, const BoxType *drawn_area, void *userdata)
 {
   if (TEST_FLAG (THINDRAWFLAG, PCB) || TEST_FLAG (THINDRAWPOLYFLAG, PCB))
     gui->thindraw_pcb_pv (Output.pmGC, Output.pmGC, via, false, true);
@@ -46,7 +46,7 @@ draw_via_mask (PinType *via, BoxType *drawn_area, void *userdata)
 }
 
 static void
-draw_hole (PinType *pv, BoxType *drawn_area, void *userdata)
+draw_hole (PinType *pv, const BoxType *drawn_area, void *userdata)
 {
   gui->set_line_cap (Output.fgGC, Round_Cap);
   gui->set_line_width (Output.fgGC, 0);
@@ -73,13 +73,13 @@ _draw_pad (hidGC gc, PadType *pad, bool clear, bool mask)
 }
 
 static void
-draw_pad (PadType *pad, BoxType *drawn_area, void *userdata)
+draw_pad (PadType *pad, const BoxType *drawn_area, void *userdata)
 {
   _draw_pad (Output.fgGC, pad, false, false);
 }
 
 static void
-draw_pad_mask (PadType *pad, BoxType *drawn_area, void *userdata)
+draw_pad_mask (PadType *pad, const BoxType *drawn_area, void *userdata)
 {
   if (pad->Mask <= 0)
     return;
@@ -88,7 +88,7 @@ draw_pad_mask (PadType *pad, BoxType *drawn_area, void *userdata)
 }
 
 static void
-draw_pad_paste (PadType *pad, BoxType *drawn_area, void *userdata)
+draw_pad_paste (PadType *pad, const BoxType *drawn_area, void *userdata)
 {
   if (TEST_FLAG (NOPASTEFLAG, pad) || pad->Mask <= 0)
     return;
@@ -114,13 +114,13 @@ _draw_line (LineType *line)
 }
 
 static void
-draw_line (LineType *line, BoxType *drawn_area, void *userdata)
+draw_line (LineType *line, const BoxType *drawn_area, void *userdata)
 {
   _draw_line (line);
 }
 
 static void
-draw_rat (RatType *rat, BoxType *drawn_area, void *userdata)
+draw_rat (RatType *rat, const BoxType *drawn_area, void *userdata)
 {
   if (Settings.RatThickness < 20)
     rat->Thickness = pixel_slop * Settings.RatThickness;
@@ -141,7 +141,7 @@ draw_rat (RatType *rat, BoxType *drawn_area, void *userdata)
 }
 
 static void
-draw_arc (ArcType *arc, BoxType *drawn_area, void *userdata)
+draw_arc (ArcType *arc, const BoxType *drawn_area, void *userdata)
 {
   if (!arc->Thickness)
     return;
@@ -157,7 +157,7 @@ draw_arc (ArcType *arc, BoxType *drawn_area, void *userdata)
 }
 
 static void
-draw_poly (PolygonType *polygon, BoxType *drawn_area, void *userdata)
+draw_poly (PolygonType *polygon, const BoxType *drawn_area, void *userdata)
 {
   if (!polygon->Clipped)
     return;
@@ -193,7 +193,7 @@ line_callback (const BoxType * b, void *cl)
   else if (TEST_FLAG (FOUNDFLAG, line)) gui->set_color (Output.fgGC, PCB->ConnectedColor);
   else                                  gui->set_color (Output.fgGC, layer->Color);
 
-  dapi->draw_line (line, cl);
+  dapi->draw_line (line, NULL, NULL);
   return 1;
 }
 
@@ -207,12 +207,12 @@ arc_callback (const BoxType * b, void *cl)
   else if (TEST_FLAG (FOUNDFLAG, arc)) gui->set_color (Output.fgGC, PCB->ConnectedColor);
   else                                 gui->set_color (Output.fgGC, layer->Color);
 
-  dapi->draw_arc (arc, cl);
+  dapi->draw_arc (arc, NULL, NULL);
   return 1;
 }
 
 struct poly_info {
-  const BoxType *drawn_area;
+  const const BoxType *drawn_area;
   LayerType *layer;
 };
 
@@ -226,7 +226,7 @@ poly_callback (const BoxType * b, void *cl)
   else if (TEST_FLAG (FOUNDFLAG, polygon)) gui->set_color (Output.fgGC, PCB->ConnectedColor);
   else                                     gui->set_color (Output.fgGC, i->layer->Color);
 
-  dapi->draw_poly (polygon, cl);
+  dapi->draw_poly (polygon, i->drawn_area, NULL);
   return 1;
 }
 
@@ -264,7 +264,7 @@ static int
 pin_inlayer_callback (const BoxType * b, void *cl)
 {
   set_pv_inlayer_color ((PinType *)b, cl, PIN_TYPE);
-  dapi->draw_pin ((PinType *)b, NULL);
+  dapi->draw_pin ((PinType *)b, NULL, NULL);
   return 1;
 }
 
@@ -272,7 +272,7 @@ static int
 via_inlayer_callback (const BoxType * b, void *cl)
 {
   set_pv_inlayer_color ((PinType *)b, cl, VIA_TYPE);
-  dapi->draw_via ((PinType *)b, NULL);
+  dapi->draw_via ((PinType *)b, NULL, NULL);
   return 1;
 }
 
@@ -293,7 +293,7 @@ pad_inlayer_callback (const BoxType * b, void *cl)
       else if (TEST_FLAG (FOUNDFLAG, pad))    gui->set_color (Output.fgGC, PCB->ConnectedColor);
       else                                    gui->set_color (Output.fgGC, layer->Color);
 
-      dapi->draw_pad (pad, NULL);
+      dapi->draw_pad (pad, NULL, NULL);
     }
   return 1;
 }
@@ -312,16 +312,13 @@ hole_callback (const BoxType * b, void *cl)
   else if (TEST_FLAG (SELECTEDFLAG, pv)) gui->set_color (Output.fgGC, PCB->PinSelectedColor);
   else                                   gui->set_color (Output.fgGC, Settings.BlackColor);
 
-  dapi->draw_hole (pv, NULL);
+  dapi->draw_hole (pv, NULL, NULL);
   return 1;
 }
 
 static void
-draw_layer (LayerType *layer, void *userdata)
+draw_layer (LayerType *layer, const BoxType *drawn_area, void *userdata)
 {
-  /* HACK */
-  BoxType *drawn_area = NULL;
-
   int component_group = GetLayerGroupNumberByNumber (component_silk_layer);
   int solder_group = GetLayerGroupNumberByNumber (solder_silk_layer);
   int layer_num = GetLayerNumber (PCB->Data, layer);
diff --git a/src/hid/gerber/gerber.c b/src/hid/gerber/gerber.c
index fbfa430..4429121 100644
--- a/src/hid/gerber/gerber.c
+++ b/src/hid/gerber/gerber.c
@@ -720,7 +720,7 @@ gerber_set_layer (const char *name, int group, int empty)
     {
       if (outline_layer
 	  && outline_layer != PCB->Data->Layer+idx)
-	dapi->draw_layer (outline_layer, NULL); // &region);
+	dapi->draw_layer (outline_layer, &region, NULL);
       else if (!outline_layer)
 	{
 	  hidGC gc = gui->make_gc ();
diff --git a/src/hid/ps/ps.c b/src/hid/ps/ps.c
index c69c548..8024abc 100644
--- a/src/hid/ps/ps.c
+++ b/src/hid/ps/ps.c
@@ -864,7 +864,7 @@ ps_set_layer (const char *name, int group, int empty)
       && strcmp (name, "outline")
       && strcmp (name, "route"))
     {
-      dapi->draw_layer (outline_layer, NULL); // &region);
+      dapi->draw_layer (outline_layer, &region, NULL);
     }
 
   return 1;
