Bottom: 3b5cff184cf0990b5f9e30912c39f70136a60fe9
Top:    f36ac99c2b81360c21d3a88ffbf8d6ee9369d66e
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-22 21:31:19 +0000

Refresh of free_atexit-c-add-leaky_calloc

---

diff --git a/src/free_atexit.c b/src/free_atexit.c
index dc11f12..d5c034e 100644
--- a/src/free_atexit.c
+++ b/src/free_atexit.c
@@ -56,6 +56,15 @@ void *leaky_malloc (size_t size)
   return new_memory + sizeof(leaky_admin_t);
 }
 
+void *leaky_calloc (size_t nmemb, size_t size)
+{
+	size_t size_ = size * nmemb;
+  void *new_memory = leaky_malloc(size_);
+
+	memset(new_memory, 0, size_);
+  return new_memory;
+}
+
 void *leaky_realloc (void* old_memory, size_t size)
 {
   void *new_memory;
diff --git a/src/free_atexit.h b/src/free_atexit.h
index 3b142b6..558b597 100644
--- a/src/free_atexit.h
+++ b/src/free_atexit.h
@@ -23,6 +23,9 @@ void leaky_uninit (void);
 /* allocate memory, remember the pointer and free it after exit from the application */
 void *leaky_malloc (size_t size);
 
+/* same as leaky_malloc but this one wraps calloc() */
+void *leaky_calloc (size_t nmemb, size_t size);
+
 /* reallocate memory, remember the new pointer and free it after exit from the application */
 void *leaky_realloc (void* old_memory, size_t size);
