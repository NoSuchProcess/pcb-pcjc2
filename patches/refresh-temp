Bottom: 702ab65a61023bf143eb516d13b3686f4bbfa2f4
Top:    41e901ad4945ddec63a198a6557c20f47c815093
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-08-28 12:35:14 +0100

Refresh of just-start-chopping-things

---

diff --git a/src/hid/common/extents.c b/src/hid/common/extents.c
index 6cdc135..d641f66 100644
--- a/src/hid/common/extents.c
+++ b/src/hid/common/extents.c
@@ -199,7 +199,7 @@ hid_extents_init (void)
 BoxType *
 hid_get_extents (void *item)
 {
-  BoxType region;
+//  BoxType region;
 
   /* As this isn't a real "HID", we need to ensure we are initialised. */
   hid_extents_init ();
@@ -209,11 +209,13 @@ hid_get_extents (void *item)
   box.X2 = -MAXINT;
   box.Y2 = -MAXINT;
 
+#if 0
   region.X1 = -MAXINT;
   region.Y1 = -MAXINT;
   region.X2 = MAXINT;
   region.Y2 = MAXINT;
   hid_expose_callback (&extents_hid, &region, item);
+#endif
 
   return &box;
 }
diff --git a/src/hid/gcode/gcode.c b/src/hid/gcode/gcode.c
index 07e3d35..749a720 100644
--- a/src/hid/gcode/gcode.c
+++ b/src/hid/gcode/gcode.c
@@ -93,9 +93,9 @@ struct hid_gc_struct
 
 static struct color_struct *black = NULL, *white = NULL;
 static int linewidth = -1;
-static int lastgroup = -1;
+//static int lastgroup = -1;
 static gdImagePtr lastbrush = (gdImagePtr)((void *) -1);
-static int lastcap = -1;
+//static int lastcap = -1;
 static int lastcolor = -1;
 
 /* gd image and file for PNG export */
@@ -360,6 +360,7 @@ gcode_finish_png ()
 void
 gcode_start_png_export ()
 {
+#if 0
   BoxType region;
 
   region.X1 = 0;
@@ -375,6 +376,7 @@ gcode_start_png_export ()
   lastgroup = -1;
 
   hid_expose_callback (&gcode_hid, &region, 0);
+#endif
 }
 
 static void
diff --git a/src/hid/gerber/gerber.c b/src/hid/gerber/gerber.c
index 8829527..d85ddcf 100644
--- a/src/hid/gerber/gerber.c
+++ b/src/hid/gerber/gerber.c
@@ -399,7 +399,7 @@ maybe_close_f (FILE *f)
     }
 }
 
-static BoxType region;
+//static BoxType region;
 
 /* Very similar to layer_type_to_file_name() but appends only a
    three-character suffix compatible with Eagle's defaults.  */
@@ -565,10 +565,12 @@ gerber_do_export (HID_Attr_Val * options)
   lastgroup = -1;
   lastcolor = -1;
 
+#if 0
   region.X1 = 0;
   region.Y1 = 0;
   region.X2 = PCB->MaxWidth;
   region.Y2 = PCB->MaxHeight;
+#endif
 
   pagecount = 1;
   resetApertures ();
@@ -576,11 +578,11 @@ gerber_do_export (HID_Attr_Val * options)
   lastgroup = -1;
   layer_list_idx = 0;
   finding_apertures = 1;
-  hid_expose_callback (&gerber_hid, &region, 0);
+  //hid_expose_callback (&gerber_hid, &region, 0);
 
   layer_list_idx = 0;
   finding_apertures = 0;
-  hid_expose_callback (&gerber_hid, &region, 0);
+  //hid_expose_callback (&gerber_hid, &region, 0);
 
   memcpy (LayerStack, saved_layer_stack, sizeof (LayerStack));
 
@@ -805,7 +807,7 @@ gerber_set_layer (const char *name, int group, int empty)
     {
       if (outline_layer
 	  && outline_layer != PCB->Data->Layer+idx)
-	DrawLayer (outline_layer, &region);
+{}//	DrawLayer (outline_layer, &region);
       else if (!outline_layer)
 	{
 	  hidGC gc = gui->make_gc ();
diff --git a/src/hid/nelma/nelma.c b/src/hid/nelma/nelma.c
index e91594b..b12bdd1 100644
--- a/src/hid/nelma/nelma.c
+++ b/src/hid/nelma/nelma.c
@@ -111,9 +111,9 @@ static HID nelma_hid;
 
 static struct color_struct *black = NULL, *white = NULL;
 static Coord    linewidth = -1;
-static int      lastgroup = -1;
+//static int      lastgroup = -1;
 static gdImagePtr lastbrush = (gdImagePtr)((void *) -1);
-static int      lastcap = -1;
+//static int      lastcap = -1;
 static int      lastcolor = -1;
 
 /* gd image and file for PNG export */
@@ -605,6 +605,7 @@ nelma_finish_png()
 void 
 nelma_start_png_export()
 {
+#if 0
 	BoxType         region;
 
 	region.X1 = 0;
@@ -620,6 +621,7 @@ nelma_start_png_export()
 	lastgroup = -1;
 
 	hid_expose_callback(&nelma_hid, &region, 0);
+#endif
 }
 
 static void 
diff --git a/src/hid/png/png.c b/src/hid/png/png.c
index 61437a0..96a2659 100644
--- a/src/hid/png/png.c
+++ b/src/hid/png/png.c
@@ -440,7 +440,7 @@ png_hid_export_to_file (FILE * the_file, HID_Attr_Val * options)
 	}
     }
 
-  hid_expose_callback (&png_hid, bounds, 0);
+  //hid_expose_callback (&png_hid, bounds, 0);
 
   memcpy (LayerStack, saved_layer_stack, sizeof (LayerStack));
   PCB->Flags = save_flags;
diff --git a/src/hid/ps/eps.c b/src/hid/ps/eps.c
index 903270e..0e4991f 100644
--- a/src/hid/ps/eps.c
+++ b/src/hid/ps/eps.c
@@ -270,7 +270,7 @@ eps_hid_export_to_file (FILE * the_file, HID_Attr_Val * options)
 	   "/a { gsave setlinewidth translate scale 0 0 1 5 3 roll arc stroke grestore} bind def\n");
 
   lastgroup = -1;
-  hid_expose_callback (&eps_hid, bounds, 0);
+  //hid_expose_callback (&eps_hid, bounds, 0);
 
   fprintf (f, "showpage\n");
 
diff --git a/src/hid/ps/ps.c b/src/hid/ps/ps.c
index 2ec89e5..8cab2f9 100644
--- a/src/hid/ps/ps.c
+++ b/src/hid/ps/ps.c
@@ -537,13 +537,13 @@ ps_hid_export_to_file (FILE * the_file, HID_Attr_Val * options)
 
       global.doing_toc = 1;
       global.pagecount = 1;  /* 'pagecount' is modified by hid_expose_callback() call */
-      hid_expose_callback (&ps_hid, &global.region, 0);
+      //hid_expose_callback (&ps_hid, &global.region, 0);
     }
 
   global.pagecount = 1; /* Reset 'pagecount' if single file */
   global.doing_toc = 0;
   ps_set_layer (NULL, 0, -1);  /* reset static vars */
-  hid_expose_callback (&ps_hid, &global.region, 0);
+  //hid_expose_callback (&ps_hid, &global.region, 0);
 
   if (the_file)
     fprintf (the_file, "showpage\n");
@@ -850,7 +850,7 @@ ps_set_layer (const char *name, int group, int empty)
       strcmp (name, "route") != 0
       )
     {
-      DrawLayer (global.outline_layer, &global.region);
+      //DrawLayer (global.outline_layer, &global.region);
     }
 
   return 1;
diff --git a/src/print.c b/src/print.c
index 7e7e412..94f3af6 100644
--- a/src/print.c
+++ b/src/print.c
@@ -115,7 +115,7 @@ text_at (hidGC gc, int x, int y, int align, char *fmt, ...)
   t.X -= w * (align & 3) / 2;
   if (t.X < 0)
     t.X = 0;
-  DrawTextLowLevel (&t, 0);
+  //DrawTextLowLevel (&t, 0);
   if (align & 8)
     fab_line (gc, t.X,
               t.Y + font->MaxHeight * t.Scale / 100 + MIL_TO_COORD(10),
@@ -348,11 +348,11 @@ PrintFab (hidGC gc)
 		       arc->Height, arc->StartAngle, arc->Delta);
       }
       END_LOOP;
-      TEXT_LOOP (layer);
-      {
-	DrawTextLowLevel (text, 0);
-      }
-      END_LOOP;
+      //TEXT_LOOP (layer);
+      //{
+	//DrawTextLowLevel (text, 0);
+      //}
+      //END_LOOP;
       gui->set_line_width (gc, FAB_LINE_W);
       text_at (gc, PCB->MaxWidth / 2, PCB->MaxHeight + MIL_TO_COORD(20), 1,
 	       "Board outline is the centerline of this path");
