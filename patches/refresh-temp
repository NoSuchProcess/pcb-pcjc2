Bottom: 3f111c05bf50285aa7e2075fc8c545f7402f4b60
Top:    eb86680a9f4ace7935796e62044f81b6d082ead4
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2015-01-11 20:36:45 +0000

Refresh of adjust-mask-api-to-include

---

diff --git a/src/hid/batch/batch.c b/src/hid/batch/batch.c
index 13495c9..8d27fa5 100644
--- a/src/hid/batch/batch.c
+++ b/src/hid/batch/batch.c
@@ -177,7 +177,7 @@ batch_destroy_gc (hidGC gc)
 }
 
 static void
-batch_use_mask (hidGC gc, enum mask_mode mode)
+batch_use_mask (HID_DRAW *hid_draw, enum mask_mode mode)
 {
 }
 
diff --git a/src/hid/common/extents.c b/src/hid/common/extents.c
index 75e7753..0a33bf3 100644
--- a/src/hid/common/extents.c
+++ b/src/hid/common/extents.c
@@ -70,7 +70,7 @@ extents_destroy_gc (hidGC gc)
 }
 
 static void
-extents_use_mask (hidGC gc, enum mask_mode mode)
+extents_use_mask (HID_DRAW *hid_draw, enum mask_mode mode)
 {
 }
 
diff --git a/src/hid/common/hidnogui.c b/src/hid/common/hidnogui.c
index eb6b353..d2c1686 100644
--- a/src/hid/common/hidnogui.c
+++ b/src/hid/common/hidnogui.c
@@ -77,7 +77,7 @@ nogui_destroy_gc (hidGC gc)
 }
 
 static void
-nogui_use_mask (hidGC gc, enum mask_mode mode)
+nogui_use_mask (HID_DRAW *hid_draw, enum mask_mode mode)
 {
   CRASH;
 }
diff --git a/src/hid/gcode/gcode.c b/src/hid/gcode/gcode.c
index 0a3473d..a11c0d4 100644
--- a/src/hid/gcode/gcode.c
+++ b/src/hid/gcode/gcode.c
@@ -1197,7 +1197,7 @@ gcode_destroy_gc (hidGC gc)
 }
 
 static void
-gcode_use_mask (hidGC gc, enum mask_mode mode)
+gcode_use_mask (HID_DRAW *hid_draw, enum mask_mode mode)
 {
   /* does nothing */
 }
diff --git a/src/hid/gerber/gerber.c b/src/hid/gerber/gerber.c
index 0db744a..7a7f0af 100644
--- a/src/hid/gerber/gerber.c
+++ b/src/hid/gerber/gerber.c
@@ -956,7 +956,7 @@ gerber_destroy_gc (hidGC gc)
 }
 
 static void
-gerber_use_mask (hidGC gc, enum mask_mode mode)
+gerber_use_mask (HID_DRAW *hid_draw, enum mask_mode mode)
 {
   current_mask = mode;
 }
diff --git a/src/hid/gtk/gtkhid-gdk.c b/src/hid/gtk/gtkhid-gdk.c
index bc613c2..02298a4 100644
--- a/src/hid/gtk/gtkhid-gdk.c
+++ b/src/hid/gtk/gtkhid-gdk.c
@@ -324,7 +324,7 @@ ghid_draw_bg_image (void)
 #define WHICH_GC(gtk_gc) (cur_mask == HID_MASK_CLEAR ? priv->mask_gc : (gtk_gc)->gdk_gc)
 
 void
-ghid_use_mask (hidGC gc, enum mask_mode mode)
+ghid_use_mask (HID_DRAW *hid_draw, enum mask_mode mode)
 {
   static int mask_seq_id = 0;
   GdkColor color;
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 820e4f4..f73b1b7 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -541,7 +541,7 @@ ghid_draw_bg_image (void)
 }
 
 void
-ghid_use_mask (hidGC gc, enum mask_mode mode)
+ghid_use_mask (HID_DRAW *hid_draw, enum mask_mode mode)
 {
   render_priv *priv = gport->render_priv;
   hidgl_instance *hidgl = priv->hidgl;
diff --git a/src/hid/gtk/gui.h b/src/hid/gtk/gui.h
index a14372c..9804460 100644
--- a/src/hid/gtk/gui.h
+++ b/src/hid/gtk/gui.h
@@ -476,7 +476,7 @@ void ghid_pinout_window_show (GHidPort *out, ElementType *Element);
 int ghid_set_layer (const char *name, int group, int empty);
 hidGC ghid_make_gc (void);
 void ghid_destroy_gc (hidGC);
-void ghid_use_mask (hidGC gc, enum mask_mode mode);
+void ghid_use_mask (HID_DRAW *hid_draw, enum mask_mode mode);
 void ghid_set_color (hidGC gc, const char *name);
 void ghid_set_line_cap (hidGC gc, EndCapStyle style);
 void ghid_set_line_width (hidGC gc, Coord width);
diff --git a/src/hid/lesstif/main.c b/src/hid/lesstif/main.c
index 13b4140..bdeb588 100644
--- a/src/hid/lesstif/main.c
+++ b/src/hid/lesstif/main.c
@@ -242,7 +242,7 @@ Location of the @file{pcb-menu.res} file which defines the menu for the lesstif
 
 REGISTER_ATTRIBUTES (lesstif_attribute_list)
 
-static void lesstif_use_mask (hidGC gc, enum mask_mode mode);
+static void lesstif_use_mask (HID_DRAW *hid_draw, enum mask_mode mode);
 static void zoom_max ();
 static void zoom_to (double factor, int x, int y);
 static void zoom_by (double factor, int x, int y);
@@ -3075,7 +3075,7 @@ lesstif_destroy_gc (hidGC gc)
 }
 
 static void
-lesstif_use_mask (hidGC gc, enum mask_mode mode)
+lesstif_use_mask (HID_DRAW *hid_draw, enum mask_mode mode)
 {
   if ((TEST_FLAG (THINDRAWFLAG, PCB) || TEST_FLAG(THINDRAWPOLYFLAG, PCB)) &&
       !use_xrender)
diff --git a/src/hid/nelma/nelma.c b/src/hid/nelma/nelma.c
index a082a5b..783457f 100644
--- a/src/hid/nelma/nelma.c
+++ b/src/hid/nelma/nelma.c
@@ -785,7 +785,7 @@ nelma_destroy_gc(hidGC gc)
 }
 
 static void 
-nelma_use_mask(hidGC gc, enum mask_mode mode)
+nelma_use_mask(HID_DRAW *hid_draw, enum mask_mode mode)
 {
 	/* does nothing */
 }
diff --git a/src/hid/png/png.c b/src/hid/png/png.c
index c2fbf77..45d7468 100644
--- a/src/hid/png/png.c
+++ b/src/hid/png/png.c
@@ -1373,7 +1373,7 @@ png_destroy_gc (hidGC gc)
 }
 
 static void
-png_use_mask (hidGC gc, enum mask_mode mode)
+png_use_mask (HID_DRAW *hid_draw, enum mask_mode mode)
 {
   if (photo_mode)
     return;
diff --git a/src/hid/ps/eps.c b/src/hid/ps/eps.c
index 0963152..7e6604f 100644
--- a/src/hid/ps/eps.c
+++ b/src/hid/ps/eps.c
@@ -441,7 +441,7 @@ eps_destroy_gc (hidGC gc)
 }
 
 static void
-eps_use_mask (hidGC gc, enum mask_mode mode)
+eps_use_mask (HID_DRAW *hid_draw, enum mask_mode mode)
 {
   static int mask_pending = 0;
   switch (mode)
diff --git a/src/hid/ps/ps.c b/src/hid/ps/ps.c
index 8754743..e0b3552 100644
--- a/src/hid/ps/ps.c
+++ b/src/hid/ps/ps.c
@@ -1035,7 +1035,7 @@ ps_destroy_gc (hidGC gc)
 }
 
 static void
-ps_use_mask (hidGC gc, enum mask_mode mode)
+ps_use_mask (HID_DRAW *hid_draw, enum mask_mode mode)
 {
   /* does nothing */
 }
