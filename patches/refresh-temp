Bottom: cd7d87dd98a868e155f6077374e73cae59ebfa8f
Top:    6e9336f1a86e4c94bcac3d230ce0062563ea002c
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-09-05 23:36:06 +0100

Refresh of hid-gtk-connect-up-the-file-ch

---

diff --git a/src/hid/gtk/gui-top-window.c b/src/hid/gtk/gui-top-window.c
index f020043..7426bf3 100644
--- a/src/hid/gtk/gui-top-window.c
+++ b/src/hid/gtk/gui-top-window.c
@@ -355,6 +355,8 @@ disconnect_file_change_monitor (GhidGui *_gui)
   if (_gui->info_bar != NULL)
     gtk_widget_destroy (_gui->info_bar);
   _gui->info_bar = NULL;
+
+  printf ("Disconnect\n");
 }
 
 static void
@@ -369,6 +371,7 @@ connect_file_change_monitor (GhidGui *_gui)
       *PCB->Filename == '\0')
     return;
 
+  printf ("Connecting for %s\n", PCB->Filename);
   file = g_file_new_for_path (PCB->Filename);
 
   /* XXX: Could hook up more error handling for g_file_monitor_file */
@@ -401,8 +404,20 @@ ghid_sync_with_new_layout (void)
 }
 
 void
-ghid_notify_save_pcb (bool done)
-{
+ghid_notify_save_pcb (const char *file, bool done)
+{
+  /* Do nothing if it is not the active PCB file we're watching
+   * that is being saved.
+   *
+   * Ideally, the core ought to notify us for a "SaveAs" type action
+   * so we could re-wire our file-monitor, but it doesn't. This works
+   * however, as the core sets the new PCB file-name before it saves,
+   * and this notification causes us to disconnect our old file-monitor
+   * (pointing at the old file), then we re-connect to the new file.
+   */
+  if (strcmp (file, PCB->Filename) != 0)
+    return;
+
   if (!done)
     disconnect_file_change_monitor (ghidgui);
   else
diff --git a/src/hid/gtk/gui.h b/src/hid/gtk/gui.h
index 95e302b..3a37b66 100644
--- a/src/hid/gtk/gui.h
+++ b/src/hid/gtk/gui.h
@@ -338,7 +338,7 @@ int ghid_drc_window_throw_dialog (void);
 
 /* In gui-top-window.c  */
 void ghid_update_toggle_flags (void);
-void ghid_notify_save_pcb (bool done);
+void ghid_notify_save_pcb (const char *file, bool done);
 void ghid_install_accel_groups (GtkWindow *window, GhidGui *gui);
 void ghid_remove_accel_groups (GtkWindow *window, GhidGui *gui);
