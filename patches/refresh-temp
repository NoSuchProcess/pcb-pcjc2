Bottom: e53615d03912e82ba2e5ea5cc48a492f8c3fff26
Top:    c4c1c89f5fc3a5c730d934dce0f9ea9392ad6737
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-21 00:46:34 +0100

Refresh of major-re-write-to-drawing-rout

---

diff --git a/src/draw.c b/src/draw.c
index dc54f89..7874720 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -99,7 +99,7 @@ static void DrawPlainPolygon (LayerTypePtr Layer, PolygonTypePtr Polygon);
 static void AddPart (void *);
 static void SetPVColor (PinTypePtr, int);
 /* static */ void DrawEMark (ElementTypePtr, LocationType, LocationType, bool);
-static void ClearPad (PadTypePtr, bool);
+/* static */ void ClearPad (PadTypePtr, bool);
 /* static */ void DrawHole (PinTypePtr);
 static void DrawMask (BoxType *);
 /* static */ void DrawRats (BoxType *);
@@ -673,7 +673,7 @@ struct pin_info
   LayerTypePtr Layer;
 };
 
-/* static */ int
+static int
 clearPin_callback (const BoxType * b, void *cl)
 {
   PinType *pin = (PinTypePtr) b;
@@ -696,7 +696,7 @@ poly_callback (const BoxType * b, void *cl)
   return 1;
 }
 
-/* static */ int
+static int
 clearPad_callback (const BoxType * b, void *cl)
 {
   PadTypePtr pad = (PadTypePtr) b;
@@ -1144,7 +1144,7 @@ DrawPadNameLowLevel (PadTypePtr Pad)
 /* ---------------------------------------------------------------------------
  * clearance for pads
  */
-static void
+/* static */ void
 ClearPad (PadTypePtr Pad, bool mask)
 {
   DrawPadLowLevel(Output.pmGC, Pad, true, mask);
diff --git a/src/draw.h b/src/draw.h
index 077c575..9bf62b3 100644
--- a/src/draw.h
+++ b/src/draw.h
@@ -75,6 +75,7 @@ void LoadBackgroundImage (char *);
 void UpdateAll (void);
 
 /* TEMPORARY */
+void ClearPad (PadTypePtr, bool);
 void DrawPinOrViaLowLevel (PinTypePtr, bool);
 void DrawPlainPin (PinTypePtr, bool);
 void DrawPlainVia (PinTypePtr, bool);
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 9a833d8..ce9db4e 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1213,79 +1213,28 @@ poly_callback (const BoxType * b, void *cl)
   return 1;
 }
 
-static void
-DrawPadLowLevelSolid (hidGC gc, PadTypePtr Pad, bool clear, bool mask)
+int
+clearPin_callback (const BoxType * b, void *cl)
 {
-  int w = clear ? (mask ? Pad->Mask : Pad->Thickness + Pad->Clearance)
-		: Pad->Thickness;
-
-  if (Pad->Point1.X == Pad->Point2.X &&
-      Pad->Point1.Y == Pad->Point2.Y)
+  PinType *pin = (PinTypePtr) b;
+  struct pin_info *i = (struct pin_info *) cl;
+  if (i->arg)
     {
-      if (TEST_FLAG (SQUAREFLAG, Pad))
-        {
-          int l, r, t, b;
-          l = Pad->Point1.X - w / 2;
-          b = Pad->Point1.Y - w / 2;
-          r = l + w;
-          t = b + w;
-          gui->fill_rect (gc, l, b, r, t);
-        }
+      if (TEST_FLAG (THINDRAWFLAG, PCB) || TEST_FLAG (THINDRAWPOLYFLAG, PCB))
+        gui->thindraw_pcb_pv (Output.pmGC, Output.pmGC, pin, false, true);
       else
-        {
-          gui->fill_circle (gc, Pad->Point1.X, Pad->Point1.Y, w / 2);
-        }
+        gui->fill_pcb_pv (Output.pmGC, Output.pmGC, pin, false, true);
     }
-  else
-    {
-      gui->set_line_cap (gc,
-                         TEST_FLAG (SQUAREFLAG,
-                                    Pad) ? Square_Cap : Round_Cap);
-      gui->set_line_width (gc, w);
-
-      gui->draw_line (gc,
-                      Pad->Point1.X, Pad->Point1.Y,
-                      Pad->Point2.X, Pad->Point2.Y);
-    }
-}
-
-static void
-ClearPadSolid (PadTypePtr Pad, bool mask)
-{
-  DrawPadLowLevelSolid(Output.pmGC, Pad, true, mask);
+  return 1;
 }
 
-static void
-ClearOnlyPinSolid (PinTypePtr Pin, bool mask)
+/* static */ int
+clearPad_callback (const BoxType * b, void *cl)
 {
-  BDimension half =
-    (mask ? Pin->Mask / 2 : (Pin->Thickness + Pin->Clearance) / 2);
-
-  if (!mask && TEST_FLAG (HOLEFLAG, Pin))
-    return;
-  if (half == 0)
-    return;
-  if (!mask && Pin->Clearance <= 0)
-    return;
-
-  /* Clear the area around the pin */
-  if (TEST_FLAG (SQUAREFLAG, Pin))
-    {
-      int l, r, t, b;
-      l = Pin->X - half;
-      b = Pin->Y - half;
-      r = l + half * 2;
-      t = b + half * 2;
-      gui->fill_rect (Output.pmGC, l, b, r, t);
-    }
-  else if (TEST_FLAG (OCTAGONFLAG, Pin))
-    {
-      DrawSpecialPolygon (Output.pmGC, Pin->X, Pin->Y, half * 2, false);
-    }
-  else
-    {
-      gui->fill_circle (Output.pmGC, Pin->X, Pin->Y, half);
-    }
+  PadTypePtr pad = (PadTypePtr) b;
+  if (!XOR (TEST_FLAG (ONSOLDERFLAG, pad), SWAP_IDENT) && pad->Mask)
+    ClearPad (pad, true);
+  return 1;
 }
 
 static int
@@ -1294,7 +1243,7 @@ clearPin_callback_solid (const BoxType * b, void *cl)
   PinTypePtr pin = (PinTypePtr) b;
   struct pin_info *i = (struct pin_info *) cl;
   if (i->arg)
-    ClearOnlyPinSolid (pin, true);
+    gui->fill_pcb_pv (Output.pmGC, Output.pmGC, pin, false, true);
   return 1;
 }
 
@@ -1303,14 +1252,10 @@ clearPad_callback_solid (const BoxType * b, void *cl)
 {
   PadTypePtr pad = (PadTypePtr) b;
   if (!XOR (TEST_FLAG (ONSOLDERFLAG, pad), SWAP_IDENT) && pad->Mask)
-    ClearPadSolid (pad, true);
+    gui->fill_pcb_pad (Output.pmGC, pad, false, true);
   return 1;
 }
 
-int clearPin_callback (const BoxType * b, void *cl);
-int clearPad_callback (const BoxType * b, void *cl);
-
-
 static void
 DrawMask (BoxType * screen)
 {
