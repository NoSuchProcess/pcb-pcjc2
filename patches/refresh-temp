Bottom: 57d92bbd08300d0cd8157c36243332a2ab510dfd
Top:    196cede6baad3bc51a906329b3a4220ef1b40be9
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-08-26 06:57:09 +0100

Refresh of hid-gtk-add-consolidated-api-f

---

diff --git a/src/hid/gtk/gtkhid-gdk.c b/src/hid/gtk/gtkhid-gdk.c
index 24fba3f..35e8ebc 100644
--- a/src/hid/gtk/gtkhid-gdk.c
+++ b/src/hid/gtk/gtkhid-gdk.c
@@ -1361,27 +1361,25 @@ ghid_pcb_to_event_coords (Coord pcb_x, Coord pcb_y, int *event_x, int *event_y)
   return true;
 }
 
-void
-ghid_pan_view_abs (Coord pcb_x, Coord pcb_y, int widget_x, int widget_y)
+static void
+pan_common (GHidPort *port)
 {
-  gport->view_x0 = MAX (0, SIDE_X (pcb_x) - widget_x * gport->zoom);
-  gport->view_y0 = MAX (0, SIDE_Y (pcb_y) - widget_y * gport->zoom);
+  int event_x, event_y;
 
-  /* Don't pan so far to the right or bottom that we see past the board edge */
-  gport->view_x0 = MIN (gport->view_x0, PCB->MaxWidth  - gport->view_width);
-  gport->view_y0 = MIN (gport->view_y0, PCB->MaxHeight - gport->view_height);
+  /* We need to fix up the PCB coordinates corresponding to the last
+   * event so convert it back to event coordinates temporarily. */
+//  ghid_pcb_to_event_coords (gport->pcb_x, gport->pcb_y, &event_x, &event_y);
 
-  /* Don't view above or to the left of the board... ever */
-  gport->view_x0 = MAX (0, gport->view_x0);
-  gport->view_y0 = MAX (0, gport->view_y0);
+  /* Don't pan so far the board is completely off the screen */
+  port->view_x0 = MAX (-port->view_width,  port->view_x0);
+  port->view_y0 = MAX (-port->view_height, port->view_y0);
+  port->view_x0 = MIN ( port->view_x0, PCB->MaxWidth);
+  port->view_y0 = MIN ( port->view_y0, PCB->MaxHeight);
 
-  /* If we can see the entire board and some, then zoom to fit */
-  if (gport->view_width  > PCB->MaxWidth  &&
-      gport->view_height > PCB->MaxHeight)
-    {
-      ghid_zoom_view_fit ();
-      return;
-    }
+  ghid_note_event_location (NULL);
+
+  /* Fix up noted event coordinates to match where we clamped */
+//  ghid_event_to_pcb_coords (event_x, event_y, &gport->pcb_x, &gport->pcb_y);
 
   ghidgui->adjustment_changed_holdoff = TRUE;
   gtk_range_set_value (GTK_RANGE (ghidgui->h_range), gport->view_x0);
@@ -1391,6 +1389,24 @@ ghid_pan_view_abs (Coord pcb_x, Coord pcb_y, int widget_x, int widget_y)
   ghid_port_ranges_changed();
 }
 
+void
+ghid_pan_view_abs (Coord pcb_x, Coord pcb_y, int widget_x, int widget_y)
+{
+  gport->view_x0 = SIDE_X (pcb_x) - widget_x * gport->zoom;
+  gport->view_y0 = SIDE_Y (pcb_y) - widget_y * gport->zoom;
+
+  pan_common (gport);
+}
+
+void
+ghid_pan_view_rel (Coord dx, Coord dy)
+{
+  gport->view_x0 += dx;
+  gport->view_y0 += dy;
+
+  pan_common (gport);
+}
+
 
 /* gport->zoom:
  * zoom value is PCB units per screen pixel.  Larger numbers mean zooming
@@ -1399,6 +1415,7 @@ ghid_pan_view_abs (Coord pcb_x, Coord pcb_y, int widget_x, int widget_y)
  * gport->view_width and gport->view_height are in PCB coordinates
  */
 
+#define ALLOW_ZOOM_OUT_BY 5
 void
 ghid_zoom_view_abs (Coord center_x, Coord center_y, double new_zoom)
 {
@@ -1411,7 +1428,7 @@ ghid_zoom_view_abs (Coord center_x, Coord center_y, double new_zoom)
    */
   min_zoom = 1;
   max_zoom = MAX (PCB->MaxWidth  / gport->width,
-                  PCB->MaxHeight / gport->height);
+                  PCB->MaxHeight / gport->height) * ALLOW_ZOOM_OUT_BY;
   new_zoom = MIN (MAX (min_zoom, new_zoom), max_zoom);
 
   if (gport->zoom == new_zoom)
@@ -1422,17 +1439,13 @@ ghid_zoom_view_abs (Coord center_x, Coord center_y, double new_zoom)
 
   gport->zoom = new_zoom;
   pixel_slop = new_zoom;
-  ghid_port_ranges_scale (FALSE);
+  ghid_port_ranges_scale ();
 
-  gport->view_x0 = MAX (0, SIDE_X (center_x) - xtmp * gport->view_width);
-  gport->view_y0 = MAX (0, SIDE_Y (center_y) - ytmp * gport->view_height);
+  gport->view_x0 = SIDE_X (center_x) - xtmp * gport->view_width;
+  gport->view_y0 = SIDE_Y (center_y) - ytmp * gport->view_height;
 
-  ghidgui->adjustment_changed_holdoff = TRUE;
-  gtk_range_set_value (GTK_RANGE (ghidgui->h_range), gport->view_x0);
-  gtk_range_set_value (GTK_RANGE (ghidgui->v_range), gport->view_y0);
-  ghidgui->adjustment_changed_holdoff = FALSE;
+  pan_common (gport);
 
-  ghid_port_ranges_changed ();
   ghid_set_status_line_label ();
 }
 
@@ -1445,6 +1458,7 @@ ghid_zoom_view_rel (Coord center_x, Coord center_y, double factor)
 void
 ghid_zoom_view_fit (void)
 {
+  ghid_pan_view_abs (0, 0, 0, 0);
   ghid_zoom_view_abs (0, 0, MAX (PCB->MaxWidth  / gport->width,
                                  PCB->MaxHeight / gport->height));
 }
