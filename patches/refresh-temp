Bottom: e4374e594b9ceaefadbb3ca353751ec2fdaa6889
Top:    6d1011cf715d93b2ad7814f8074cc5b4716168d5
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-02-21 05:41:06 +0000

Refresh of drop-in-pcb-gl-code-various-me

---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index 3ccc684..a63bc00 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -302,10 +302,11 @@ hidgl_draw_line (int cap, double width, int x1, int y1, int x2, int y2, double s
   int circular_caps = 0;
   int hairline = 0;
 
-  if (width == 0.0) {
+  if (width == 0.0)
     hairline = 1;
-    width = 1.0;
-  }
+
+  if (width < scale)
+    width = scale;
 
   deltax = x2 - x1;
   deltay = y2 - y1;
@@ -336,12 +337,8 @@ hidgl_draw_line (int cap, double width, int x1, int y1, int x2, int y2, double s
   switch (cap) {
     case Trace_Cap:
     case Round_Cap:
-      /* Don't bother capping hairlines */
-      if (hairline) {
-        circular_caps = 1;
-        break;
-      }
-      /* Fall through */
+      circular_caps = 1;
+      break;
 
     case Square_Cap:
     case Beveled_Cap:
@@ -359,7 +356,9 @@ hidgl_draw_line (int cap, double width, int x1, int y1, int x2, int y2, double s
   hidgl_add_triangle (&buffer, x1 - wdx, y1 - wdy,
                                x2 + wdx, y2 + wdy,
                                x1 + wdx, y1 + wdy);
-  if (circular_caps)
+
+  /* Don't bother capping hairlines */
+  if (circular_caps && !hairline)
     {
       draw_cap (width, x1, y1, angle, scale);
       draw_cap (width, x2, y2, angle + 180., scale);
@@ -386,10 +385,11 @@ hidgl_draw_arc (double width, int x, int y, int rx, int ry,
   int i;
   int hairline = 0;
 
-  if (width == 0.0) {
+  if (width == 0.0)
     hairline = 1;
-    width = 1.0;
-  }
+
+  if (width < scale)
+    width = scale;
 
   inner_r = rx - width / 2.;
   outer_r = rx + width / 2.;
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 3332d7e..9e927bd 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -880,23 +880,12 @@ use_gc (hidGC gc)
   ghid_set_color (gc, gc->colorname);
 }
 
-static inline double
-clamp_min_width (double width)
-{
-  double min_width = gport->zoom;
-
-  if (width < min_width)
-    return min_width;
-
-  return width;
-}
-
 void
 ghid_draw_line (hidGC gc, int x1, int y1, int x2, int y2)
 {
   USE_GC (gc);
 
-  hidgl_draw_line (gc->cap, clamp_min_width (gc->width), x1, y1, x2, y2, gport->zoom);
+  hidgl_draw_line (gc->cap, gc->width, x1, y1, x2, y2, gport->zoom);
 }
 
 void
@@ -905,7 +894,7 @@ ghid_draw_arc (hidGC gc, int cx, int cy, int xradius, int yradius,
 {
   USE_GC (gc);
 
-  hidgl_draw_arc (clamp_min_width (gc->width), cx, cy, xradius, yradius,
+  hidgl_draw_arc (gc->width, cx, cy, xradius, yradius,
                   start_angle, delta_angle, gport->zoom);
 }
