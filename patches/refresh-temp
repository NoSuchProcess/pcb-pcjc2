Bottom: ad78c0b19d368489b32b2a5d4704f84aa454d5b0
Top:    e807087314f7bdfffe3f4f19150ea48770a8359e
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-02-07 19:47:43 +0000

Refresh of more-work-on-trying-to-speed-u

---

diff --git a/src/polygon1.c b/src/polygon1.c
index f43de1d..bef40ea 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -1003,7 +1003,7 @@ M_POLYAREA_intersect_separate_isected (jmp_buf * e, POLYAREA *afst,
   do { /* LOOP OVER A's POLYAREA PIECES */
     /* LOOP OVER THE CONTOURS OF THE CURRENT A POLYAREA */
     prev = NULL;
-    for (curcA = a->contours; curcA != NULL; curcA = curcA->next) {
+    for (curcA = a->contours; curcA != NULL; curcA = next) {
       next = curcA->next;
 
       if (curcA->Flags.status != ISECTED) {
@@ -1048,11 +1048,9 @@ M_POLYAREA_separate_isected (POLYAREA *afst, PLINE **a_isected)
 
       /* Unlink from the a contour list, and prepend to the a_isected list */
       if (prev == NULL) {
-        if (next == NULL) {
-          printf ("Need to delete the whole contour!\n");
-        } else {
-          a->contours = next;
-        }
+        if (next == NULL)
+          printf ("M_POLYAREA_separate_isected: Need to delete the whole contour?\n");
+        a->contours = next;
       } else {
         prev->next = next;
       }
@@ -1060,7 +1058,6 @@ M_POLYAREA_separate_isected (POLYAREA *afst, PLINE **a_isected)
       *a_isected = curc;
       r_delete_entry (a->contour_tree, (BoxType *)curc);
     }
-    printf ("seprating things from next contour\n");
   } while ((a = a->f) != afst);
 } /* M_POLYAREA_separate_isected */
 
@@ -2574,7 +2571,9 @@ poly_DelContour (PLINE ** c)
       rtree_t *r = (*c)->tree;
       r_destroy_tree (&r);
     }
-  free (*c), *c = NULL;
+  printf ("Freeing contour *c = %p\n", *c);
+  free (*c);
+  *c = NULL;
 }
 
 void
