Bottom: e1d96a3ae963f6ee6de4725161091b05012768a0
Top:    07293ba8b2b2f35739b06992e21727d3c33bf90b
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-05-14 01:16:09 +0100

Refresh of gtk-gl-add-facility-to-set-an-

---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 409c182..f8e9f12 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -46,6 +46,7 @@ typedef struct render_priv {
   bool in_context;
   int subcomposite_stencil_bit;
   char *current_colorname;
+  int current_alpha;
 } render_priv;
 
 
@@ -54,6 +55,7 @@ typedef struct hid_gc_struct
   HID *me_pointer;
 
   gchar *colorname;
+  double alpha_mult;
   gint width;
   gint cap, join;
   gchar xor;
@@ -173,6 +175,7 @@ ghid_make_gc (void)
   rv = g_new0 (hid_gc_struct, 1);
   rv->me_pointer = &ghid_hid;
   rv->colorname = Settings.BackgroundColor;
+  rv->alpha_mult = 1.0;
   return rv;
 }
 
@@ -358,14 +361,23 @@ set_gl_color_for_gc (hidGC gc)
   double r, g, b, a;
   a = 1.0;
 
+<<<<<<< current
   if (priv->current_colorname != NULL &&
-      strcmp (priv->current_colorname, gc->colorname) == 0)
+      strcmp (priv->current_colorname, gc->colorname) == 0 &&
+      priv->current_alphamult == gc->alpha_mult)
     return;
 
   free (priv->current_colorname);
   priv->current_colorname = NULL;
 
   priv->current_colorname = strdup (gc->colorname);
+=======
+
+  free (priv->current_color);
+  priv->current_color = NULL;
+
+  priv->current_color = strdup (gc->colorname);
+>>>>>>> patched
 
   if (gport->colormap == NULL)
     gport->colormap = gtk_widget_get_colormap (gport->top_window);
@@ -430,6 +442,7 @@ set_gl_color_for_gc (hidGC gc)
     }
   if (1) {
     double maxi, mult;
+    alpha_mult *= priv->alpha_mult;
     if (priv->trans_lines)
       a = a * alpha_mult;
     maxi = r;
@@ -453,11 +466,13 @@ set_gl_color_for_gc (hidGC gc)
 void
 ghid_set_color (hidGC gc, const char *name)
 {
-  current_gc = gc;
-
-  gc->colorname = (char *) name;
+  gc->colorname = (char *)name;
+}
 
-  set_gl_color_for_gc (gc);
+void
+ghid_set_alpha_mult (hidGC gc, double alpha_mult)
+{
+  gc->alpha_mult = alpha_mult;
 }
 
 void
