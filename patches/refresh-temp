Bottom: b13a8842d13e79ec01358d3be7e2657c853e3c0a
Top:    c58c9c4f2d2a4955c2860b65aefa3f0e1c0c3466
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-12-23 00:25:27 +0000

Refresh of hid-gtk-disable-gl-alpha-blend

---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 2b72efd..02d3887 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1083,8 +1083,14 @@ ghid_pinout_preview_expose (GtkWidget *widget,
   ghid_start_drawing (gport, widget);
   hidgl_start_render ();
 
-//  glEnable (GL_BLEND);
-//  glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+#if 0  /* We disable alpha blending here, as hid_expose_callback() does not
+          call set_layer() as appropriate for us to sub-composite rendering
+          from each layer. If we leave alpha-blending on, it means text and
+          overlapping pads are rendered looking very ugly.
+
+  glEnable (GL_BLEND);
+  glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+#endif
 
   glViewport (0, 0, allocation.width, allocation.height);
 
@@ -1109,6 +1115,11 @@ ghid_pinout_preview_expose (GtkWidget *widget,
   glClear (GL_COLOR_BUFFER_BIT | GL_STENCIL_BUFFER_BIT);
   hidgl_reset_stencil_usage ();
 
+  /* Disable the stencil test until we need it - otherwise it gets dirty */
+  glDisable (GL_STENCIL_TEST);
+  glStencilMask (0);
+  glStencilFunc (GL_ALWAYS, 0, 0);
+
   /* call the drawing routine */
   ghid_invalidate_current_gc ();
   glPushMatrix ();
