Bottom: b24f92baa4940b097997a5c730834c7ec1ed1879
Top:    6403a42bfcefd0c5a994818c2c0ec193f5e715f2
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-03-26 12:57:30 +0000

TEMPORARY: Comment out some calls which can trigger an out-of-context redraw

Comment out some DrawMark calls which might be out of context
Comment out some crosshair drawing calls which might be called out of context

Should fix this properly with notificatons to the GUI


---

diff --git a/src/action.c b/src/action.c
index 7493659..27d8e60 100644
--- a/src/action.c
+++ b/src/action.c
@@ -4058,7 +4058,7 @@ ActionMarkCrosshair (int argc, char **argv, int x, int y)
     {
       if (Marked.status)
 	{
-	  DrawMark (true);
+//	  DrawMark (true);
 	  Marked.status = false;
 	}
       else
@@ -4066,16 +4066,16 @@ ActionMarkCrosshair (int argc, char **argv, int x, int y)
 	  Marked.status = true;
 	  Marked.X = Crosshair.X;
 	  Marked.Y = Crosshair.Y;
-	  DrawMark (false);
+//	  DrawMark (false);
 	}
     }
   else if (GetFunctionID (function) == F_Center)
     {
-      DrawMark (true);
+//      DrawMark (true);
       Marked.status = true;
       Marked.X = Crosshair.X;
       Marked.Y = Crosshair.Y;
-      DrawMark (false);
+//      DrawMark (false);
     }
   return 0;
 }
diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index 9243be8..8a561e9 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -361,7 +361,7 @@ ghid_port_key_press_cb (GtkWidget * drawing_area,
   state = (GdkModifierType) (kev->state);
   mk = ghid_modifier_keys_state (&state);
 
-  ghid_show_crosshair (FALSE);
+  //ghid_show_crosshair (FALSE);
 
   handled = TRUE;		/* Start off assuming we handle it */
   switch (ksym)
@@ -466,7 +466,7 @@ ghid_port_button_press_cb (GtkWidget * drawing_area,
   ghid_note_event_location (ev);
   state = (GdkModifierType) (ev->state);
   mk = ghid_modifier_keys_state (&state);
-  ghid_show_crosshair (FALSE);
+  //ghid_show_crosshair (FALSE);
   HideCrosshair (TRUE);
 
   do_mouse_action(ev->button, mk);
@@ -475,7 +475,7 @@ ghid_port_button_press_cb (GtkWidget * drawing_area,
   RestoreCrosshair (TRUE);
   ghid_window_set_name_label (PCB->Name);
   ghid_set_status_line_label ();
-  ghid_show_crosshair (TRUE);
+  //ghid_show_crosshair (TRUE);
   if (!gport->panning)
     g_idle_add (ghid_idle_cb, NULL);
   return TRUE;
@@ -846,7 +846,7 @@ ghid_port_window_leave_cb (GtkWidget * widget,
         snavi_set_led (ghidgui->snavi, FALSE);
     }
 
-  ghid_show_crosshair (FALSE);
+  //ghid_show_crosshair (FALSE);
   out->has_entered = FALSE;
 
   ghid_screen_update ();
