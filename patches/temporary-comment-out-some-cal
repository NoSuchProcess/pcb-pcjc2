Bottom: abc74323cf62f9d465e112ff610576ff22ee0e01
Top:    7f689f865d50797530cb13c98dbe869d6894432a
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-03 00:16:55 +0100

TEMPORARY: Comment out some calls which can trigger an out-of-context redraw

Comment out some DrawMark calls which might be out of context
Comment out some crosshair drawing calls which might be called out of context

Should fix this properly with notificatons to the GUI


---

diff --git a/src/action.c b/src/action.c
index 622711f..1cb874d 100644
--- a/src/action.c
+++ b/src/action.c
@@ -4038,7 +4038,7 @@ ActionMarkCrosshair (int argc, char **argv, int x, int y)
     {
       if (Marked.status)
 	{
-	  DrawMark ();
+//	  DrawMark ();
 	  Marked.status = false;
 	}
       else
@@ -4046,16 +4046,16 @@ ActionMarkCrosshair (int argc, char **argv, int x, int y)
 	  Marked.status = true;
 	  Marked.X = Crosshair.X;
 	  Marked.Y = Crosshair.Y;
-	  DrawMark ();
+//	  DrawMark ();
 	}
     }
   else if (GetFunctionID (function) == F_Center)
     {
-      DrawMark ();
+//      DrawMark ();
       Marked.status = true;
       Marked.X = Crosshair.X;
       Marked.Y = Crosshair.Y;
-      DrawMark ();
+//      DrawMark ();
     }
   return 0;
 }
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 57a1b37..e8a4f57 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -1956,9 +1956,9 @@ PanAction (int argc, char **argv, int x, int y)
     }
   else if (x == on_x && y == on_y)
     {
-      ghid_show_crosshair (FALSE);
+      //ghid_show_crosshair (FALSE);
       ghidgui->auto_pan_on = !ghidgui->auto_pan_on;
-      ghid_show_crosshair (TRUE);
+      //ghid_show_crosshair (TRUE);
     }
 
   return 0;
diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index 8293b0c..39e7c3a 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -343,7 +343,7 @@ ghid_port_key_press_cb (GtkWidget * drawing_area,
   state = (GdkModifierType) (kev->state);
   mk = ghid_modifier_keys_state (&state);
 
-  ghid_show_crosshair (FALSE);
+  //ghid_show_crosshair (FALSE);
 
   handled = TRUE;		/* Start off assuming we handle it */
   switch (ksym)
@@ -448,7 +448,7 @@ ghid_port_button_press_cb (GtkWidget * drawing_area,
   ghid_note_event_location (ev);
   state = (GdkModifierType) (ev->state);
   mk = ghid_modifier_keys_state (&state);
-  ghid_show_crosshair (FALSE);
+  //ghid_show_crosshair (FALSE);
   notify_crosshair_change (false);
 
   do_mouse_action(ev->button, mk);
@@ -457,7 +457,7 @@ ghid_port_button_press_cb (GtkWidget * drawing_area,
   notify_crosshair_change (true);
   ghid_window_set_name_label (PCB->Name);
   ghid_set_status_line_label ();
-  ghid_show_crosshair (TRUE);
+  //ghid_show_crosshair (TRUE);
   if (!gport->panning)
     g_idle_add (ghid_idle_cb, NULL);
   return TRUE;
@@ -811,7 +811,7 @@ ghid_port_window_leave_cb (GtkWidget * widget,
 	}
     }
 
-  ghid_show_crosshair (FALSE);
+  //ghid_show_crosshair (FALSE);
   out->has_entered = FALSE;
 
   ghid_screen_update ();
