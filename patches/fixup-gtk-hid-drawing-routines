Bottom: 519a178062108d32124624ee0852d45f48515045
Top:    a1af77a08d5f279c179a46a368cf594b65d0be28
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-21 02:59:35 +0100

Fixup gtk hid drawing routines for pour support


---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 48cf554..f34df1e 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1227,6 +1227,10 @@ DrawPlainPolygon (LayerTypePtr Layer, PolygonTypePtr Polygon, const BoxType *dra
   if (!Polygon->Clipped)
     return;
 
+  /* Re-use HOLEFLAG to cut out islands */
+  if (TEST_FLAG (HOLEFLAG, Polygon))
+    return;
+
   if (TEST_FLAG (SELECTEDFLAG, Polygon))
     color = Layer->SelectedColor;
   else if (TEST_FLAG (FOUNDFLAG, Polygon))
@@ -1283,6 +1287,38 @@ poly_callback_clearing (const BoxType * b, void *cl)
 }
 
 static int
+pour_callback_no_clear (const BoxType * b, void *cl)
+{
+  struct pin_info *i = (struct pin_info *) cl;
+  PourType *pour = (PourType *)b;
+
+  DrawPour (i->Layer, pour, 0);
+
+  if (pour->PolygonN)
+    {
+      r_search (pour->polygon_tree, i->drawn_area, NULL, poly_callback_no_clear, i);
+    }
+
+  return 1;
+}
+
+  static int
+pour_callback_clearing (const BoxType * b, void *cl)
+{
+  struct pin_info *i = (struct pin_info *) cl;
+  PourType *pour = (PourType *)b;
+
+  DrawPour (i->Layer, pour, 0);
+
+  if (pour->PolygonN)
+    {
+      r_search (pour->polygon_tree, i->drawn_area, NULL, poly_callback_clearing, i);
+    }
+
+  return 1;
+}
+
+static int
 clearPin_callback (const BoxType * b, void *cl)
 {
   PinType *pin = (PinTypePtr) b;
@@ -1420,11 +1456,11 @@ DrawLayerGroup (int group, const BoxType * screen)
       }
 
       /* draw all polygons on this layer */
-      if (Layer->PolygonN) {
+      if (Layer->PourN) {
         info.Layer = Layer;
         info.drawn_area = screen;
-        r_search (Layer->polygon_tree, screen, NULL, poly_callback_no_clear, &info);
-        r_search (Layer->polygon_tree, screen, NULL, poly_callback_clearing, &info);
+        r_search (Layer->pour_tree, screen, NULL, pour_callback_no_clear, &info);
+        r_search (Layer->pour_tree, screen, NULL, pour_callback_clearing, &info);
 
         /* HACK: Subcomposite polygons separately from other layer primitives */
         /* Reset the compositing */
