Bottom: 1b2144ea0b029113a20232ca585d80815d38c954
Top:    af773a7a126469a99f594959222a30b3ba6252cb
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-08-27 16:30:02 +0100

Fixup gtk hid drawing routines for pour support


---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 1a3c402..bd0b689 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1086,6 +1086,10 @@ DrawPlainPolygon (LayerTypePtr Layer, PolygonTypePtr Polygon, const BoxType *dra
   if (!Polygon->Clipped)
     return;
 
+  /* Re-use HOLEFLAG to cut out islands */
+  if (TEST_FLAG (HOLEFLAG, Polygon))
+    return;
+
   if (TEST_FLAG (SELECTEDFLAG, Polygon))
     color = Layer->SelectedColor;
   else if (TEST_FLAG (FOUNDFLAG, Polygon))
@@ -1124,6 +1128,22 @@ poly_callback (const BoxType * b, void *cl)
   return 1;
 }
 
+static int
+pour_callback (const BoxType * b, void *cl)
+{
+  struct pin_info *i = (struct pin_info *) cl;
+  PourType *pour = (PourType *)b;
+
+  DrawPour (i->Layer, pour, 0);
+
+  if (pour->PolygonN)
+    {
+      r_search (pour->polygon_tree, i->drawn_area, NULL, poly_callback, i);
+    }
+
+  return 1;
+}
+
 static void
 DrawPadLowLevelSolid (hidGC gc, PadTypePtr Pad, bool clear, bool mask)
 {
@@ -1319,10 +1339,10 @@ DrawLayerGroup (int group, const BoxType * screen)
       }
 
       /* draw all polygons on this layer */
-      if (Layer->PolygonN) {
+      if (Layer->PourN) {
         info.Layer = Layer;
         info.drawn_area = screen;
-        r_search (Layer->polygon_tree, screen, NULL, poly_callback, &info);
+        r_search (Layer->pour_tree, screen, NULL, pour_callback, &info);
 
         /* HACK: Subcomposite polygons separately from other layer primitives */
         /* Reset the compositing */
