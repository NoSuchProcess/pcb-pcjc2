Bottom: efdca6579df23766e915f06b89ccbfb24822f9a9
Top:    cc001a137c628765665b1bda9e6c78b5e0d0d1d8
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-03-25 19:52:33 +0000

Hack to make pretty translucent polygons in thindraw-poly mode

TODO: Perhaps need some way to configure this.. it might be nice in
non-thindraw mode too. If people want thin-draw to gain extra speed,
rather than have it actually slower (due to fill + outline), then a
way to turn it off would also be useful.



---

diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 834a84d..ad11ba8 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -737,26 +737,30 @@ ghid_set_special_colors (HID_Attribute * ha)
     }
 }
 
+static char *current_color = NULL;
+static double global_alpha_mult = 1.0;
+static int alpha_changed = 0;
 
 void
 ghid_set_color (hidGC gc, const char *name)
 {
   static void *cache = NULL;
-  static char *old_name = NULL;
   hidval cval;
   ColorCache *cc;
   double alpha_mult = 1.0;
   double r, g, b, a;
   a = 1.0;
 
-  if (old_name != NULL)
+  if (!alpha_changed && current_color != NULL)
     {
-      if (strcmp (name, old_name) == 0)
+      if (strcmp (name, current_color) == 0)
         return;
-      free (old_name);
+      free (current_color);
     }
 
-  old_name = strdup (name);
+  alpha_changed = 0;
+
+  current_color = strdup (name);
 
   if (name == NULL)
     {
@@ -830,6 +834,7 @@ ghid_set_color (hidGC gc, const char *name)
     }
   if (1) {
     double maxi, mult;
+    alpha_mult *= global_alpha_mult;
     if (gport->trans_lines)
       a = a * alpha_mult;
     maxi = r;
@@ -851,6 +856,16 @@ ghid_set_color (hidGC gc, const char *name)
 }
 
 void
+ghid_global_alpha_mult (hidGC gc, double alpha_mult)
+{
+  if (alpha_mult != global_alpha_mult) {
+    global_alpha_mult = alpha_mult;
+    alpha_changed = 1;
+    ghid_set_color (gc, current_color);
+  }
+}
+
+void
 ghid_set_line_cap (hidGC gc, EndCapStyle style)
 {
   switch (style)
@@ -966,6 +981,15 @@ ghid_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 }
 
 void
+ghid_thindraw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+{
+  common_thindraw_pcb_polygon (gc, poly, clip_box);
+  ghid_global_alpha_mult (gc, 0.25);
+  ghid_fill_pcb_polygon (gc, poly, clip_box);
+  ghid_global_alpha_mult (gc, 1.0);
+}
+
+void
 ghid_fill_rect (hidGC gc, int x1, int y1, int x2, int y2)
 {
   USE_GC (gc);
@@ -1485,7 +1509,7 @@ HID ghid_hid = {
   ghid_fill_circle,
   ghid_fill_polygon,
   ghid_fill_pcb_polygon,
-  common_thindraw_pcb_polygon,
+  ghid_thindraw_pcb_polygon,
   ghid_fill_rect,
 
   ghid_calibrate,
