Bottom: d614e5774a0b37660203cd6df2f444af75d2aee6
Top:    d0a0b66dff02dfa4876167fefdf76972499cc804
Author: Ineiev <ineiev@users.sourceforge.net>
Date:   2009-02-20 21:36:32 +0300

hid/gtk: Fix disappearing reference mark

Fixes the following symptoms (Bug sf-1882970 reported
by Steven Michalske):

(0) when the cursor leaves the window,
  the mark disappears (with attached objects);
  when the cursor enters again, the mark
  is redrawn only if there are any attached objects;

(1) When there are no attached objects,
  the mark disappears on button press, but is not
  redrawn again when button press and release form
  a click.

(Commit message edited by Peter Clifton <pcjc2@cam.ac.uk>)

Reviewed-by: Peter Clifton <pcjc2@cam.ac.uk>

Closes-bug: lp-699244
Closes-bug: lp-699453


---

diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index f55cabc..2e820a3 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -1,5 +1,3 @@
-/* $Id$ */
-
 /*
  *                            COPYRIGHT
  *
@@ -54,14 +52,7 @@
 
 #define TOOLTIP_UPDATE_DELAY 200
 
-RCSID ("$Id$");
-
 static gint x_pan_speed, y_pan_speed;
-
-/* Set to true if cursor is currently in viewport. This is a hack to prevent
- * Crosshair stack corruption due to unmatching window enter / leave events */
-gboolean cursor_in_viewport = false;
-
 void
 ghid_port_ranges_changed (void)
 {
@@ -453,7 +444,6 @@ ghid_port_button_press_cb (GtkWidget * drawing_area,
 			   GdkEventButton * ev, GtkUIManager * ui)
 {
   ModifierKeysState mk;
-  gboolean drag;
   GdkModifierType state;
 
   /* Reject double and triple click events */
@@ -464,7 +454,6 @@ ghid_port_button_press_cb (GtkWidget * drawing_area,
   mk = ghid_modifier_keys_state (&state);
   ghid_show_crosshair (FALSE);
   HideCrosshair (TRUE);
-  drag = have_crosshair_attachments ();
 
   do_mouse_action(ev->button, mk);
 
@@ -484,26 +473,21 @@ ghid_port_button_release_cb (GtkWidget * drawing_area,
 			     GdkEventButton * ev, GtkUIManager * ui)
 {
   ModifierKeysState mk;
-  gboolean drag;
   GdkModifierType state;
 
   ghid_note_event_location (ev);
   state = (GdkModifierType) (ev->state);
   mk = ghid_modifier_keys_state (&state);
 
-  drag = have_crosshair_attachments ();
-  if (drag)
-    HideCrosshair (TRUE);
+  HideCrosshair (TRUE);
 
   do_mouse_action(ev->button, mk + M_Release);
 
-  if (drag)
-    {
-      AdjustAttachedObjects ();
-      ghid_invalidate_all ();
-      RestoreCrosshair (TRUE);
-      ghid_screen_update ();
-    }
+  AdjustAttachedObjects ();
+  ghid_invalidate_all ();
+  RestoreCrosshair (TRUE);
+  ghid_screen_update ();
+
   ghid_window_set_name_label (PCB->Name);
   ghid_set_status_line_label ();
   g_idle_add (ghid_idle_cb, NULL);
@@ -767,13 +751,7 @@ ghid_port_window_enter_cb (GtkWidget * widget,
     {
       ghid_screen_update ();
     }
-
-  if(! cursor_in_viewport)
-    {
-      RestoreCrosshair (TRUE);
-      cursor_in_viewport = TRUE;
-    }
-	  
+  CrosshairOn (TRUE);
   return FALSE;
 }
 
@@ -865,12 +843,6 @@ ghid_port_window_leave_cb (GtkWidget * widget,
 	}
     }
 
-  if(cursor_in_viewport)
-    {
-      HideCrosshair (TRUE);
-      cursor_in_viewport = FALSE;
-    }
-
   ghid_show_crosshair (FALSE);
   out->has_entered = FALSE;
