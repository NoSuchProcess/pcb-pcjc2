Bottom: a9d74883703de6ab55ef3eed28fc6045e36ac7f5
Top:    64ba82243c1c97f061de371b1549f2eef22604f6
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-10-14 13:20:42 +0100

Add support for depth to triangle rendering routines.

Nasty global depth_state variable should be replaced!


---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index 9389885..48c84ee 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -48,6 +48,7 @@
 RCSID ("$Id: $");
 
 triangle_buffer buffer;
+float global_depth = 0;
 
 #if 0
 triangle_array *
@@ -61,7 +62,7 @@ void
 hidgl_init_triangle_array (triangle_buffer *buffer)
 {
   glEnableClientState (GL_VERTEX_ARRAY);
-  glVertexPointer (2, GL_FLOAT, 0, buffer->triangle_array);
+  glVertexPointer (3, GL_FLOAT, 0, buffer->triangle_array);
   buffer->triangle_count = 0;
   buffer->coord_comp_count = 0;
 }
@@ -787,6 +788,12 @@ hidgl_reset_stencil_usage (void)
   dirty_bits = 0;
 }
 
+void
+hidgl_set_depth (float depth)
+{
+  global_depth = depth;
+}
+
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/hid/common/hidgl.h b/src/hid/common/hidgl.h
index d9afb3d..cf38e16 100644
--- a/src/hid/common/hidgl.h
+++ b/src/hid/common/hidgl.h
@@ -25,12 +25,13 @@
 
 #define TRIANGLE_ARRAY_SIZE 5461
 typedef struct {
-  GLfloat triangle_array [2 * 3 * TRIANGLE_ARRAY_SIZE];
+  GLfloat triangle_array [3 * 3 * TRIANGLE_ARRAY_SIZE];
   unsigned int triangle_count;
   unsigned int coord_comp_count;
 } triangle_buffer;
 
 extern triangle_buffer buffer;
+extern float global_depth;
 
 void hidgl_init_triangle_array (triangle_buffer *buffer);
 void hidgl_flush_triangles (triangle_buffer *buffer);
@@ -48,10 +49,13 @@ hidgl_add_triangle (triangle_buffer *buffer,
   }
   buffer->triangle_array [buffer->coord_comp_count++] = x1;
   buffer->triangle_array [buffer->coord_comp_count++] = y1;
+  buffer->triangle_array [buffer->coord_comp_count++] = global_depth;
   buffer->triangle_array [buffer->coord_comp_count++] = x2;
   buffer->triangle_array [buffer->coord_comp_count++] = y2;
+  buffer->triangle_array [buffer->coord_comp_count++] = global_depth;
   buffer->triangle_array [buffer->coord_comp_count++] = x3;
   buffer->triangle_array [buffer->coord_comp_count++] = y3;
+  buffer->triangle_array [buffer->coord_comp_count++] = global_depth;
   buffer->triangle_count++;
 }
 
@@ -69,5 +73,6 @@ int hidgl_stencil_bits (void);
 int hidgl_assign_clear_stencil_bit (void);
 void hidgl_return_stencil_bit (int bit);
 void hidgl_reset_stencil_usage (void);
+void hidgl_set_depth (float depth);
 
 #endif /* __HIDGL_INCLUDED__  */
