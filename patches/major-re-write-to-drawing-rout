Bottom: 2d100fd7384f46a7e3ae914198b92e35d8880506
Top:    9a30d2cd4335a4927efc158b335abb0627301dce
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-10-22 15:11:02 +0100

Major re-write to drawing routines


---

diff --git a/src/draw.c b/src/draw.c
index 477dfdb..d6558ac 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -88,7 +88,7 @@ static const BoxType *clip_box = NULL;
  */
 static void Redraw (Boolean, BoxTypePtr);
 static void DrawEverything (BoxTypePtr);
-static void DrawTop (const BoxType *);
+/* static */ void DrawTop (const BoxType *);
 static int DrawLayerGroup (int, const BoxType *);
 /* static */ void DrawPinOrViaLowLevel (PinTypePtr, Boolean);
 static void ClearOnlyPin (PinTypePtr, Boolean);
@@ -654,7 +654,7 @@ pad_callback (const BoxType * b, void *cl)
 /* ---------------------------------------------------------------------------
  * draws pins pads and vias
  */
-static void
+/* static */ void
 DrawTop (const BoxType * screen)
 {
   if (PCB->PinOn || doing_assy)
@@ -781,7 +781,7 @@ DrawSilk (int new_swap, int layer, BoxTypePtr drawn_area)
 /* ---------------------------------------------------------------------------
  * draws solder mask layer - this will cover nearly everything
  */
-static void
+/* static */ void
 DrawMask (BoxType * screen)
 {
   struct pin_info info;
diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index c2c3236..dea7717 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -1152,6 +1152,10 @@ DrawPlainPolygon (LayerTypePtr Layer, PolygonTypePtr Polygon, const BoxType *dra
   if (!Polygon->Clipped)
     return;
 
+  /* Re-use HOLEFLAG to cut out islands */
+  if (TEST_FLAG (HOLEFLAG, Polygon))
+    return;
+
   if (TEST_FLAG (SELECTEDFLAG, Polygon))
     color = Layer->SelectedColor;
   else if (TEST_FLAG (FOUNDFLAG, Polygon))
@@ -1190,6 +1194,22 @@ poly_callback (const BoxType * b, void *cl)
   return 1;
 }
 
+static int
+pour_callback (const BoxType * b, void *cl)
+{
+  struct pin_info *i = (struct pin_info *) cl;
+  PourType *pour = (PourType *)b;
+
+  DrawPour (i->Layer, pour, 0);
+
+  if (pour->PolygonN)
+    {
+      r_search (pour->polygon_tree, i->drawn_area, NULL, poly_callback, i);
+    }
+
+  return 1;
+}
+
 static void
 DrawPadLowLevelSolid (hidGC gc, PadTypePtr Pad, Boolean clear, Boolean mask)
 {
@@ -1376,10 +1396,10 @@ DrawLayerGroup (int group, const BoxType * screen)
       }
 
       /* draw all polygons on this layer */
-      if (Layer->PolygonN) {
+      if (Layer->PourN) {
         info.Layer = Layer;
         info.drawn_area = screen;
-        r_search (Layer->polygon_tree, screen, NULL, poly_callback, &info);
+        r_search (Layer->pour_tree, screen, NULL, pour_callback, &info);
 
         /* HACK: Subcomposite polygons separately from other layer primitives */
         /* Reset the compositing */
