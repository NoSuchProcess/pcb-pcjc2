Bottom: 86eb980a9fe002c5251841946baccb9441ed61b0
Top:    dd18943d686585fc7bb01627830fa2aedf597b5c
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-02-19 00:02:12 +0000

Debug polygon stuff



---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index c66daca..2917472 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -689,6 +689,8 @@ hidgl_fill_pcb_polygon (PolygonType *poly, BoxType *clip_box, double scale)
   PLINE *contour;
   struct do_hole_info info;
 
+  printf ("Begin filling pcb polygon\n");
+
 
   global_scale = scale;
 
@@ -747,6 +749,7 @@ hidgl_fill_pcb_polygon (PolygonType *poly, BoxType *clip_box, double scale)
   gluDeleteTess (info.tobj);
   myFreeCombined ();
   free (info.vertices);
+  printf ("End filling pcb polygon\n");
 }
 
 void
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index 96585ad..8eba171 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -1484,7 +1484,7 @@ HID ghid_hid = {
   ghid_draw_rect,
   ghid_fill_circle,
   ghid_fill_polygon,
-  ghid_fill_pcb_polygon,
+  NULL, // ghid_fill_pcb_polygon,
   ghid_fill_rect,
 
   ghid_calibrate,
diff --git a/src/polygon.c b/src/polygon.c
index e16fd55..66c7737 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -271,6 +271,11 @@ ClipOriginal (PolygonType * poly)
   POLYAREA *p, *result;
   int r;
 
+  printf ("Clipping against original contour\n");
+
+  /* Lets not bother for now */
+//  return 1;
+
   p = original_poly (poly);
   r = poly_Boolean_free (poly->Clipped, p, &result, PBO_ISECT);
   if (r != err_ok)
@@ -1052,8 +1057,10 @@ UnsubtractArc (ArcType * arc, LayerType * l, PolygonType * p)
 
   if (!np)
     return 0;
+  printf ("Unsubtract call\n");
   if (!Unsubtract (np, p))
     return 0;
+  printf ("DONE call\n");
   clearPoly (PCB->Data, l, p, (const BoxType *) arc, 2 * UNSUBTRACT_BLOAT);
   return 1;
 }
diff --git a/src/polygon1.c b/src/polygon1.c
index 38b4505..c67a318 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -105,7 +105,7 @@ if (((ptr) = malloc(sizeof(type))) == NULL) \
 #undef DEBUG_JUMP
 #undef DEBUG_GATHER
 #undef DEBUG_ANGLE
-#undef DEBUG
+#define DEBUG
 #ifdef DEBUG
 #define DEBUGP(...) fprintf(stderr, ## __VA_ARGS__)
 #else
@@ -2466,10 +2466,15 @@ poly_AndSubtract_free (POLYAREA * ai, POLYAREA * bi,
     {
 
 #ifdef DEBUG
-      if (!poly_Valid (a))
+      if (!poly_Valid (a)) {
+        printf ("Polygon A fubar\n");
+        *(char *)0 = 0;
 	return -1;
-      if (!poly_Valid (b))
+      }
+      if (!poly_Valid (b)) {
+        printf ("Polygon B fubar\n");
 	return -1;
+      }
 #endif
       M_POLYAREA_intersect (&e, a, b, TRUE);
 
@@ -3098,12 +3103,14 @@ poly_Valid (POLYAREA * p)
 {
   PLINE *c;
 
-  if ((p == NULL) || (p->contours == NULL))
+  if ((p == NULL) || (p->contours == NULL)) {
+    printf ("p or p->contours was NULL\n");
     return FALSE;
+  }
 
   if (p->contours->Flags.orient == PLF_INV || poly_ChkContour (p->contours))
     {
-#ifndef NDEBUG
+//#ifndef NDEBUG
       VNODE *v;
       DEBUGP ("Invalid Outer PLINE\n");
       if (p->contours->Flags.orient == PLF_INV)
@@ -3117,7 +3124,7 @@ poly_Valid (POLYAREA * p)
 	  fprintf (stderr, "Line [%d %d ", v->point[0], v->point[1]);
 	}
       while ((v = v->next) != &p->contours->head);
-#endif
+//#endif
       return FALSE;
     }
   for (c = p->contours->next; c != NULL; c = c->next)
@@ -3125,7 +3132,7 @@ poly_Valid (POLYAREA * p)
       if (c->Flags.orient == PLF_DIR ||
 	  poly_ChkContour (c) || !poly_ContourInContour (p->contours, c))
 	{
-#ifndef NDEBUG
+//#ifndef NDEBUG
 	  VNODE *v;
 	  DEBUGP ("Invalid Inner PLINE orient = %d\n", c->Flags.orient);
 	  if (c->Flags.orient == PLF_DIR)
@@ -3142,7 +3149,7 @@ poly_Valid (POLYAREA * p)
 	      fprintf (stderr, "Line [%d %d ", v->point[0], v->point[1]);
 	    }
 	  while ((v = v->next) != &c->head);
-#endif
+//#endif
 	  return FALSE;
 	}
     }
