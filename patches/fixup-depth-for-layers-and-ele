Bottom: 5a5d17fc39a3148910ce3de16e97da0d7adb1be9
Top:    f7fa72ce07b3ea1bf03cda63e9eafd93a1f1259a
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-04 23:45:12 +0000

Fixup depth for layers and element marks


---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 7190c76..df14e2c 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -107,7 +107,7 @@ compute_depth (int group)
   if (group >= 0 && group < max_group) {
     newgroup = group;
 
-    depth = (max_depth - newgroup * 10) * 200 / gport->zoom;
+    depth = (max_depth - (newgroup - min_phys_group) * 10) * 200 / gport->zoom;
   } else if (SL_TYPE (idx) == SL_MASK) {
     if (SL_SIDE (idx) == SL_TOP_SIDE) {
       depth = (max_depth + 3) * 200 / gport->zoom;
@@ -1703,12 +1703,14 @@ ghid_draw_everything (BoxTypePtr drawn_area)
     gui->set_layer (NULL, SL (FINISHED, 0), 0);
   }
   /* Draw top silkscreen */
-  if (gui->set_layer ("topsilk", SL (SILK, TOP), 0)) {
+  if (!Settings.ShowSolderSide &&
+      gui->set_layer ("topsilk", SL (SILK, TOP), 0)) {
     DrawSilk (0, component_silk_layer, drawn_area);
     gui->set_layer (NULL, SL (FINISHED, 0), 0);
   }
 
-  if (gui->set_layer ("bottomsilk", SL (SILK, BOTTOM), 0)) {
+  if (Settings.ShowSolderSide &&
+      gui->set_layer ("bottomsilk", SL (SILK, BOTTOM), 0)) {
     DrawSilk (1, solder_silk_layer, drawn_area);
     gui->set_layer (NULL, SL (FINISHED, 0), 0);
   }
@@ -1868,13 +1870,6 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
              port->bg_color.green / 65535.,
              port->bg_color.blue / 65535.);
 
-  glBegin (GL_QUADS);
-  glVertex3i (eleft,  etop,    -50);
-  glVertex3i (eright, etop,    -50);
-  glVertex3i (eright, ebottom, -50);
-  glVertex3i (eleft,  ebottom, -50);
-  glEnd ();
-
   /* TODO: Background image */
 
   hidgl_init_triangle_array (&buffer);
@@ -1894,6 +1889,38 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
                              -port->view_x0,
                 ghid_flip_y ? port->view_y0 - PCB->MaxHeight :
                              -port->view_y0, 0);
+
+  if (global_view_2d) {
+    glBegin (GL_QUADS);
+    glVertex3i (0,             0,              0);
+    glVertex3i (PCB->MaxWidth, 0,              0);
+    glVertex3i (PCB->MaxWidth, PCB->MaxHeight, 0);
+    glVertex3i (0,             PCB->MaxHeight, 0);
+    glEnd ();
+  } else {
+    int solder_group;
+    int component_group;
+    int min_phys_group;
+    int max_phys_group;
+    int i;
+
+    solder_group = GetLayerGroupNumberByNumber (solder_silk_layer);
+    component_group = GetLayerGroupNumberByNumber (component_silk_layer);
+
+    min_phys_group = MIN (solder_group, component_group);
+    max_phys_group = MAX (solder_group, component_group);
+
+    glBegin (GL_QUADS);
+    for (i = min_phys_group; i <= max_phys_group; i++) {
+      int depth = compute_depth (i);
+      glVertex3i (0,             0,              depth);
+      glVertex3i (PCB->MaxWidth, 0,              depth);
+      glVertex3i (PCB->MaxWidth, PCB->MaxHeight, depth);
+      glVertex3i (0,             PCB->MaxHeight, depth);
+    }
+    glEnd ();
+  }
+
   // hid_expose_callback (&ghid_hid, &region, 0);
   ghid_draw_everything (&region);
   hidgl_flush_triangles (&buffer);
