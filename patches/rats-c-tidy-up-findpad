Bottom: 4d7ea9054089cff99ab5d1933f2cd035603a55bc
Top:    ac73ff0db6ce5b9611b2e32509949f660411c62c
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-30 13:50:17 +0100

rats.c: Tidy up FindPad()

Changes are aimed to simplify the delta of a future patch relating
to object storage. Moves indexed addressing of object structures to
fewer places.


---

diff --git a/src/rats.c b/src/rats.c
index c6cdb2d..a6e526c 100644
--- a/src/rats.c
+++ b/src/rats.c
@@ -125,54 +125,54 @@ FindPad (char *ElementName, char *PinNum, ConnectionType * conn, bool Same)
   ElementTypePtr element;
   Cardinal i;
 
-  if ((element = SearchElementByName (PCB->Data, ElementName)) != NULL)
+  if ((element = SearchElementByName (PCB->Data, ElementName)) == NULL)
+    return false;
+
+  for (i = 0; i < element->PadN; i++)
     {
-      for (i = 0; i < element->PadN; i++)
-	if (NSTRCMP (PinNum, element->Pad[i].Number) == 0 && (!Same
-							      ||
-							      !TEST_FLAG
-							      (DRCFLAG,
-							       &element->
-							       Pad[i])))
-	  {
-	    conn->type = PAD_TYPE;
-	    conn->ptr2 = &element->Pad[i];
-	    conn->group =
-	      TEST_FLAG (ONSOLDERFLAG, &element->Pad[i]) ? SLayer : CLayer;
-	    if (TEST_FLAG (EDGE2FLAG, &element->Pad[i]))
-	      {
-		conn->X = element->Pad[i].Point2.X;
-		conn->Y = element->Pad[i].Point2.Y;
-	      }
-	    else
-	      {
-		conn->X = element->Pad[i].Point1.X;
-		conn->Y = element->Pad[i].Point1.Y;
-	      }
-	    break;
-	  }
-      if (i == element->PadN)
-	{
-	  for (i = 0; i < element->PinN; i++)
-	    if (!TEST_FLAG (HOLEFLAG, &element->Pin[i]) &&
-		element->Pin[i].Number &&
-		NSTRCMP (PinNum, element->Pin[i].Number) == 0 &&
-		(!Same || !TEST_FLAG (DRCFLAG, &element->Pin[i])))
-	      {
-		conn->type = PIN_TYPE;
-		conn->ptr2 = &element->Pin[i];
-		conn->group = SLayer;	/* any layer will do */
-		conn->X = element->Pin[i].X;
-		conn->Y = element->Pin[i].Y;
-		break;
-	      }
-	  if (i == element->PinN)
-	    return (false);
-	}
-      conn->ptr1 = element;
-      return (true);
+      PadType *pad = &element->Pad[i];
+
+      if (NSTRCMP (PinNum, pad->Number) == 0 &&
+          (!Same || !TEST_FLAG (DRCFLAG, pad)))
+        {
+          conn->type = PAD_TYPE;
+          conn->ptr1 = element;
+          conn->ptr2 = pad;
+          conn->group = TEST_FLAG (ONSOLDERFLAG, pad) ? SLayer : CLayer;
+
+          if (TEST_FLAG (EDGE2FLAG, pad))
+            {
+              conn->X = pad->Point2.X;
+              conn->Y = pad->Point2.Y;
+            }
+          else
+            {
+              conn->X = pad->Point1.X;
+              conn->Y = pad->Point1.Y;
+            }
+          return true;
+        }
     }
-  return (false);
+
+  for (i = 0; i < element->PinN; i++)
+    {
+      PinType *pin = &element->Pin[i];
+
+      if (!TEST_FLAG (HOLEFLAG, pin) &&
+          pin->Number && NSTRCMP (PinNum, pin->Number) == 0 &&
+          (!Same || !TEST_FLAG (DRCFLAG, pin)))
+        {
+          conn->type = PIN_TYPE;
+          conn->ptr1 = element;
+          conn->ptr2 = pin;
+          conn->group = SLayer;        /* any layer will do */
+          conn->X = pin->X;
+          conn->Y = pin->Y;
+          return true;
+        }
+    }
+
+  return false;
 }
 
 /*--------------------------------------------------------------------------
