Bottom: 8fff7a9bec693af39b2971f52b8ea87d4a7a714a
Top:    1622a70dcb0ee968dd8c0302d5f9516c76b7f27c
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-11-19 22:47:43 +0000

draw.c: Add hidGC parameter to DrawTextLowLevel() function

Try to avoid too much delta as we convert these functions to a sensible
API later.


---

diff --git a/src/draw.c b/src/draw.c
index dad41a7..9b45887 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -199,7 +199,7 @@ _draw_pv_name (PinType *pv)
 
   if (gui->gui)
     doing_pinout++;
-  DrawTextLowLevel (&text, 0);
+  DrawTextLowLevel (Output.fgGC, &text, 0);
   if (gui->gui)
     doing_pinout--;
 }
@@ -283,7 +283,7 @@ draw_pad_name (PadType *pad)
   text.Y = box.Y1;
   text.Direction = vert ? 1 : 0;
 
-  DrawTextLowLevel (&text, 0);
+  DrawTextLowLevel (Output.fgGC, &text, 0);
 }
 
 static void
@@ -349,7 +349,7 @@ draw_element_name (ElementType *element)
     gui->graphics->set_color (Output.fgGC, PCB->ElementColor);
   else
     gui->graphics->set_color (Output.fgGC, PCB->InvisibleObjectsColor);
-  DrawTextLowLevel (&ELEMENT_TEXT (PCB, element), PCB->minSlk);
+  DrawTextLowLevel (Output.fgGC, &ELEMENT_TEXT (PCB, element), PCB->minSlk);
 }
 
 static int
@@ -1059,7 +1059,7 @@ text_callback (const BoxType * b, void *cl)
     min_silk_line = PCB->minSlk;
   else
     min_silk_line = PCB->minWid;
-  DrawTextLowLevel (text, min_silk_line);
+  DrawTextLowLevel (Output.fgGC, text, min_silk_line);
   return 1;
 }
 
@@ -1194,7 +1194,7 @@ GatherPadName (PadType *Pad)
  * lowlevel drawing routine for text objects
  */
 void
-DrawTextLowLevel (TextType *Text, Coord min_line_width)
+DrawTextLowLevel (hidGC gc, TextType *Text, Coord min_line_width)
 {
   Coord x = 0;
   unsigned char *string = (unsigned char *) Text->TextString;
@@ -1238,7 +1238,7 @@ DrawTextLowLevel (TextType *Text, Coord min_line_width)
 	      newline.Point1.Y += Text->Y;
 	      newline.Point2.X += Text->X;
 	      newline.Point2.Y += Text->Y;
-	      _draw_line (Output.fgGC, &newline);
+	      _draw_line (gc, &newline);
 	    }
 
 	  /* move on to next cursor position */
@@ -1262,7 +1262,7 @@ DrawTextLowLevel (TextType *Text, Coord min_line_width)
 	  defaultsymbol.Y1 += Text->Y;
 	  defaultsymbol.X2 += Text->X;
 	  defaultsymbol.Y2 += Text->Y;
-	  gui->graphics->fill_rect (Output.fgGC,
+	  gui->graphics->fill_rect (gc,
 	                            defaultsymbol.X1, defaultsymbol.Y1,
 	                            defaultsymbol.X2, defaultsymbol.Y2);
 
diff --git a/src/draw.h b/src/draw.h
index fc19b1a..88e2349 100644
--- a/src/draw.h
+++ b/src/draw.h
@@ -44,7 +44,7 @@ void DrawPadName (PadType *);
 void DrawLine (LayerType *, LineType *);
 void DrawArc (LayerType *, ArcType *);
 void DrawText (LayerType *, TextType *);
-void DrawTextLowLevel (TextType *, Coord);
+void DrawTextLowLevel (hidGC gc, TextType *, Coord);
 void DrawPolygon (LayerType *, PolygonType *);
 void DrawElement (ElementType *);
 void DrawElementName (ElementType *);
diff --git a/src/print.c b/src/print.c
index d494007..27e1c98 100644
--- a/src/print.c
+++ b/src/print.c
@@ -111,7 +111,7 @@ text_at (hidGC gc, int x, int y, int align, char *fmt, ...)
   t.X -= w * (align & 3) / 2;
   if (t.X < 0)
     t.X = 0;
-  DrawTextLowLevel (&t, 0);
+  DrawTextLowLevel (gc, &t, 0);
   if (align & 8)
     fab_line (gc, t.X,
               t.Y + SCALE_TEXT (font->MaxHeight, t.Scale) + MIL_TO_COORD(10),
@@ -346,7 +346,7 @@ PrintFab (hidGC gc)
       END_LOOP;
       TEXT_LOOP (layer);
       {
-	DrawTextLowLevel (text, 0);
+	DrawTextLowLevel (gc, text, 0);
       }
       END_LOOP;
       gui->graphics->set_line_width (gc, FAB_LINE_W);
