Bottom: 47a54729a2f29b1fdb157c0a8738a6e782b38c18
Top:    44afd53886ae7b4e89c45e06646b61691e5b2918
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-11-15 20:58:50 +0000

Island removal fixes

Kept separate for now because they might have unknown side-effects.


---

diff --git a/src/buffer.c b/src/buffer.c
index 66a31c5..8cf8096 100644
--- a/src/buffer.c
+++ b/src/buffer.c
@@ -247,8 +247,8 @@ MoveViaToBuffer (PinTypePtr Via)
 {
   PinTypePtr via;
 
-  RestoreToPours (Source, VIA_TYPE, Via, Via);
   r_delete_entry (Source->via_tree, (BoxType *) Via);
+  RestoreToPours (Source, VIA_TYPE, Via, Via);
   via = GetViaMemory (Dest);
   *via = *Via;
   CLEAR_FLAG (WARNFLAG | FOUNDFLAG, via);
@@ -300,8 +300,8 @@ MoveLineToBuffer (LayerTypePtr Layer, LineTypePtr Line)
   LayerTypePtr lay;
   LineTypePtr line;
 
-  RestoreToPours (Source, LINE_TYPE, Layer, Line);
   r_delete_entry (Layer->line_tree, (BoxTypePtr) Line);
+  RestoreToPours (Source, LINE_TYPE, Layer, Line);
   lay = &Dest->Layer[GetLayerNumber (Source, Layer)];
   line = GetLineMemory (lay);
   *line = *Line;
@@ -330,8 +330,8 @@ MoveArcToBuffer (LayerTypePtr Layer, ArcTypePtr Arc)
   LayerTypePtr lay;
   ArcTypePtr arc;
 
-  RestoreToPours (Source, ARC_TYPE, Layer, Arc);
   r_delete_entry (Layer->arc_tree, (BoxTypePtr) Arc);
+  RestoreToPours (Source, ARC_TYPE, Layer, Arc);
   lay = &Dest->Layer[GetLayerNumber (Source, Layer)];
   arc = GetArcMemory (lay);
   *arc = *Arc;
diff --git a/src/change.c b/src/change.c
index 16a7295..8143ff1 100644
--- a/src/change.c
+++ b/src/change.c
@@ -490,10 +490,10 @@ ChangeViaClearSize (PinTypePtr Via)
     value = PCB->Bloat * 2 + 2;
   if (Via->Clearance == value)
     return NULL;
+  r_delete_entry (PCB->Data->via_tree, (BoxType *) Via);
   RestoreToPours (PCB->Data, VIA_TYPE, Via, Via);
   AddObjectToClearSizeUndoList (VIA_TYPE, Via, Via, Via);
   EraseVia (Via);
-  r_delete_entry (PCB->Data->via_tree, (BoxType *) Via);
   Via->Clearance = value;
   SetPinBoundingBox (Via);
   r_insert_entry (PCB->Data->via_tree, (BoxType *) Via, 0);
@@ -556,10 +556,10 @@ ChangePinClearSize (ElementTypePtr Element, PinTypePtr Pin)
     value = PCB->Bloat * 2 + 2;
   if (Pin->Clearance == value)
     return NULL;
+  r_delete_entry (PCB->Data->pin_tree, &Pin->BoundingBox);
   RestoreToPours (PCB->Data, PIN_TYPE, Element, Pin);
   AddObjectToClearSizeUndoList (PIN_TYPE, Element, Pin, Pin);
   ErasePin (Pin);
-  r_delete_entry (PCB->Data->pin_tree, &Pin->BoundingBox);
   Pin->Clearance = value;
   /* SetElementBB updates all associated rtrees */
   SetElementBoundingBox (PCB->Data, Element, &PCB->Font);
@@ -583,9 +583,9 @@ ChangePadSize (ElementTypePtr Element, PadTypePtr Pad)
     {
       AddObjectToSizeUndoList (PAD_TYPE, Element, Pad, Pad);
       AddObjectToMaskSizeUndoList (PAD_TYPE, Element, Pad, Pad);
+      r_delete_entry (PCB->Data->pad_tree, &Pad->BoundingBox);
       RestoreToPours (PCB->Data, PAD_TYPE, Element, Pad);
       ErasePad (Pad);
-      r_delete_entry (PCB->Data->pad_tree, &Pad->BoundingBox);
       Pad->Mask += value - Pad->Thickness;
       Pad->Thickness = value;
       /* SetElementBB updates all associated rtrees */
@@ -618,9 +618,9 @@ ChangePadClearSize (ElementTypePtr Element, PadTypePtr Pad)
   if (value == Pad->Clearance)
     return NULL;
   AddObjectToClearSizeUndoList (PAD_TYPE, Element, Pad, Pad);
+  r_delete_entry (PCB->Data->pad_tree, &Pad->BoundingBox);
   RestoreToPours (PCB->Data, PAD_TYPE, Element, Pad);
   ErasePad (Pad);
-  r_delete_entry (PCB->Data->pad_tree, &Pad->BoundingBox);
   Pad->Clearance = value;
   /* SetElementBB updates all associated rtrees */
   SetElementBoundingBox (PCB->Data, Element, &PCB->Font);
@@ -748,9 +748,9 @@ ChangeLineClearSize (LayerTypePtr Layer, LineTypePtr Line)
   if (value != Line->Clearance)
     {
       AddObjectToClearSizeUndoList (LINE_TYPE, Layer, Line, Line);
+      r_delete_entry (Layer->line_tree, (BoxTypePtr) Line);
       RestoreToPours (PCB->Data, LINE_TYPE, Layer, Line);
       EraseLine (Line);
-      r_delete_entry (Layer->line_tree, (BoxTypePtr) Line);
       Line->Clearance = value;
       if (Line->Clearance == 0)
 	{
diff --git a/src/misc.c b/src/misc.c
index 05621ea..f5a40b2 100644
--- a/src/misc.c
+++ b/src/misc.c
@@ -1521,8 +1521,8 @@ ChangeArcAngles (LayerTypePtr Layer, ArcTypePtr a,
       new_da = 360;
       new_sa = 0;
     }
-  RestoreToPours (PCB->Data, ARC_TYPE, Layer, a);
   r_delete_entry (Layer->arc_tree, (BoxTypePtr) a);
+  RestoreToPours (PCB->Data, ARC_TYPE, Layer, a);
   AddObjectToChangeAnglesUndoList (ARC_TYPE, a, a, a);
   a->StartAngle = new_sa;
   a->Delta = new_da;
diff --git a/src/move.c b/src/move.c
index e60c021..f9a80bd 100644
--- a/src/move.c
+++ b/src/move.c
@@ -282,8 +282,8 @@ MoveLine (LayerTypePtr Layer, LineTypePtr Line)
 {
   if (Layer->On)
     EraseLine (Line);
-  RestoreToPours (PCB->Data, LINE_TYPE, Layer, Line);
   r_delete_entry (Layer->line_tree, (BoxTypePtr) Line);
+  RestoreToPours (PCB->Data, LINE_TYPE, Layer, Line);
   MOVE_LINE_LOWLEVEL (Line, DeltaX, DeltaY);
   r_insert_entry (Layer->line_tree, (BoxTypePtr) Line, 0);
   ClearFromPours (PCB->Data, LINE_TYPE, Layer, Line);
@@ -301,8 +301,8 @@ MoveLine (LayerTypePtr Layer, LineTypePtr Line)
 static void *
 MoveArc (LayerTypePtr Layer, ArcTypePtr Arc)
 {
-  RestoreToPours (PCB->Data, ARC_TYPE, Layer, Arc);
   r_delete_entry (Layer->arc_tree, (BoxTypePtr) Arc);
+  RestoreToPours (PCB->Data, ARC_TYPE, Layer, Arc);
   if (Layer->On)
     {
       EraseArc (Arc);
@@ -325,8 +325,8 @@ MoveArc (LayerTypePtr Layer, ArcTypePtr Arc)
 static void *
 MoveText (LayerTypePtr Layer, TextTypePtr Text)
 {
-  RestoreToPours (PCB->Data, TEXT_TYPE, Layer, Text);
   r_delete_entry (Layer->text_tree, (BoxTypePtr) Text);
+  RestoreToPours (PCB->Data, TEXT_TYPE, Layer, Text);
   if (Layer->On)
     {
       EraseText (Layer, Text);
@@ -388,8 +388,8 @@ MoveLinePoint (LayerTypePtr Layer, LineTypePtr Line, PointTypePtr Point)
     {
       if (Layer->On)
 	EraseLine (Line);
-      RestoreToPours (PCB->Data, LINE_TYPE, Layer, Line);
       r_delete_entry (Layer->line_tree, &Line->BoundingBox);
+      RestoreToPours (PCB->Data, LINE_TYPE, Layer, Line);
       MOVE (Point->X, Point->Y, DeltaX, DeltaY);
       SetLineBoundingBox (Line);
       r_insert_entry (Layer->line_tree, &Line->BoundingBox, 0);
@@ -659,8 +659,8 @@ MoveTextToLayerLowLevel (LayerTypePtr Source, TextTypePtr Text,
 {
   TextTypePtr new = GetTextMemory (Destination);
 
-  RestoreToPours (PCB->Data, TEXT_TYPE, Source, Text);
   r_delete_entry (Source->text_tree, (BoxTypePtr) Text);
+  RestoreToPours (PCB->Data, TEXT_TYPE, Source, Text);
   /* copy the data and remove it from the former layer */
   *new = *Text;
   *Text = Source->Text[--Source->TextN];
diff --git a/src/pour.c b/src/pour.c
index 7a25e1a..d3713dc 100644
--- a/src/pour.c
+++ b/src/pour.c
@@ -755,7 +755,8 @@ subtract_plow (DataTypePtr Data, LayerTypePtr layer, PourTypePtr pour,
 
   if (np == NULL)
     {
-      printf ("Didn't get a POLYAREA to subtract, so bailing\n");
+      mark_islands (Data, layer, pour, type, ptr1, ptr2);
+      // printf ("Didn't get a POLYAREA to subtract, so bailing\n");
       return 0;
     }
 
@@ -805,6 +806,7 @@ subtract_plow (DataTypePtr Data, LayerTypePtr layer, PourTypePtr pour,
     {
       printf ("Hmm, got pg == NULL in subtract_plow\n");
       poly_Free (&np);
+      mark_islands (Data, layer, pour, type, ptr1, ptr2);
       return -1;
     }
 
@@ -1006,6 +1008,7 @@ add_plow (DataTypePtr Data, LayerTypePtr layer, PourTypePtr pour,
   if (np == NULL)
     {
       printf ("Didn't get a POLYAREA to add, so bailing\n");
+      mark_islands (Data, layer, pour, type, ptr1, ptr2);
       return 0;
     }
 
@@ -1016,6 +1019,7 @@ add_plow (DataTypePtr Data, LayerTypePtr layer, PourTypePtr pour,
   if (np == NULL)
     {
       printf ("POLYAREA to add got clipped away, so bailing\n");
+      mark_islands (Data, layer, pour, type, ptr1, ptr2);
       return 0;
     }
 
@@ -1284,9 +1288,10 @@ PlowPours (DataType * Data, int type, void *ptr1, void *ptr2,
     case POLYGON_TYPE:
     case POUR_TYPE:
       /* the cast works equally well for lines and arcs */
-      if (!ignore_clearflags &&
-          !TEST_FLAG (CLEARLINEFLAG, (LineTypePtr) ptr2))
-        return 0;
+// NEED TO KEEP GOING FOR POURS
+//      if (!ignore_clearflags &&
+//          !TEST_FLAG (CLEARLINEFLAG, (LineTypePtr) ptr2))
+//        return 0;
       /* silk doesn't plow */
       if (GetLayerNumber (Data, ptr1) >= max_layer)
         return 0;
diff --git a/src/rotate.c b/src/rotate.c
index 43efbe5..35cdfa6 100644
--- a/src/rotate.c
+++ b/src/rotate.c
@@ -181,8 +181,8 @@ static void *
 RotateText (LayerTypePtr Layer, TextTypePtr Text)
 {
   EraseText (Layer, Text);
-  RestoreToPours (PCB->Data, TEXT_TYPE, Layer, Text);
   r_delete_entry (Layer->text_tree, (BoxTypePtr) Text);
+  RestoreToPours (PCB->Data, TEXT_TYPE, Layer, Text);
   RotateTextLowLevel (Text, CenterX, CenterY, Number);
   r_insert_entry (Layer->text_tree, (BoxTypePtr) Text, 0);
   ClearFromPours (PCB->Data, TEXT_TYPE, Layer, Text);
@@ -276,8 +276,8 @@ RotateLinePoint (LayerTypePtr Layer, LineTypePtr Line, PointTypePtr Point)
   EraseLine (Line);
   if (Layer)
     {
-      RestoreToPours (PCB->Data, LINE_TYPE, Layer, Line);
       r_delete_entry (Layer->line_tree, (BoxTypePtr) Line);
+      RestoreToPours (PCB->Data, LINE_TYPE, Layer, Line);
     }
   else
     r_delete_entry (PCB->Data->rat_tree, (BoxTypePtr) Line);
@@ -390,8 +390,8 @@ RotateObject (int Type, void *Ptr1, void *Ptr2, void *Ptr3,
       EraseLine (ptr->Line);
       if (ptr->Layer)
 	{
-	  RestoreToPours (PCB->Data, LINE_TYPE, ptr->Layer, ptr->Line);
 	  r_delete_entry (ptr->Layer->line_tree, (BoxType *) ptr->Line);
+	  RestoreToPours (PCB->Data, LINE_TYPE, ptr->Layer, ptr->Line);
 	}
       else
 	r_delete_entry (PCB->Data->rat_tree, (BoxType *) ptr->Line);
