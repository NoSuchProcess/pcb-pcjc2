Bottom: 1ed0c2bdf9e556d37e4bb39b43eb16c2a827bc45
Top:    81ed8a2785e568c0e18190ede2bcbf29507384fb
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-11-19 00:49:05 +0000

Push special case thindraw vs. fill polygon handling into the GUIs

This causes some code duplication, but it keeps the GUI specific
functionality a little cleaner.

---

diff --git a/src/draw.c b/src/draw.c
index d70963e..4a28844 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -799,25 +799,7 @@ poly_callback (const BoxType * b, void *cl)
 
   set_layer_object_color (i->layer, (AnyObjectType *) polygon);
 
-  if (gui->graphics->thindraw_pcb_polygon != NULL &&
-      (TEST_FLAG (THINDRAWFLAG, PCB) ||
-       TEST_FLAG (THINDRAWPOLYFLAG, PCB)))
-    gui->graphics->thindraw_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
-  else
-    gui->graphics->fill_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
-
-  /* If checking planes, thin-draw any pieces which have been clipped away */
-  if (gui->graphics->thindraw_pcb_polygon != NULL &&
-      TEST_FLAG (CHECKPLANESFLAG, PCB) &&
-      !TEST_FLAG (FULLPOLYFLAG, polygon))
-    {
-      PolygonType poly = *polygon;
-
-      for (poly.Clipped = polygon->Clipped->f;
-           poly.Clipped != polygon->Clipped;
-           poly.Clipped = poly.Clipped->f)
-        gui->graphics->thindraw_pcb_polygon (Output.fgGC, &poly, i->drawn_area);
-    }
+  gui->graphics->draw_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
 
   return 1;
 }
diff --git a/src/hid/common/draw_helpers.c b/src/hid/common/draw_helpers.c
index f6fbe71..7d25803 100644
--- a/src/hid/common/draw_helpers.c
+++ b/src/hid/common/draw_helpers.c
@@ -4,6 +4,7 @@
 #include "data.h" /* For global "PCB" variable */
 #include "rotate.h" /* For RotateLineLowLevel() */
 #include "polygon.h"
+#include "draw_helpers.h"
 
 
 static void
@@ -256,6 +257,26 @@ should_compute_no_holes (PolygonType *poly, const BoxType *clip_box)
 #undef BOUNDS_INSIDE_CLIP_THRESHOLD
 
 void
+common_gui_draw_pcb_polygon (hidGC gc, PolygonType *polygon, const BoxType *clip_box)
+{
+  if (TEST_FLAG (THINDRAWFLAG, PCB) || TEST_FLAG (THINDRAWPOLYFLAG, PCB))
+    common_thindraw_pcb_polygon (gc, polygon, clip_box);
+  else
+    common_fill_pcb_polygon (gc, polygon, clip_box);
+
+  /* If checking planes, thin-draw any pieces which have been clipped away */
+  if (TEST_FLAG (CHECKPLANESFLAG, PCB) && !TEST_FLAG (FULLPOLYFLAG, polygon))
+    {
+      PolygonType poly = *polygon;
+
+      for (poly.Clipped = polygon->Clipped->f;
+           poly.Clipped != polygon->Clipped;
+           poly.Clipped = poly.Clipped->f)
+        common_thindraw_pcb_polygon (gc, &poly, clip_box);
+    }
+}
+
+void
 common_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
   if (!poly->NoHolesValid)
@@ -589,8 +610,7 @@ common_draw_helpers_init (HID_DRAW *graphics)
   graphics->draw_pcb_arc         = common_draw_pcb_arc;
   graphics->draw_pcb_text        = common_draw_pcb_text;
 
-  graphics->fill_pcb_polygon     = common_fill_pcb_polygon;
-  graphics->thindraw_pcb_polygon = common_thindraw_pcb_polygon;
+  graphics->draw_pcb_polygon     = common_fill_pcb_polygon;
   graphics->fill_pcb_pad         = common_fill_pcb_pad;
   graphics->thindraw_pcb_pad     = common_thindraw_pcb_pad;
   graphics->fill_pcb_pv          = common_fill_pcb_pv;
diff --git a/src/hid/common/draw_helpers.h b/src/hid/common/draw_helpers.h
index 1e6cb7d..1b59945 100644
--- a/src/hid/common/draw_helpers.h
+++ b/src/hid/common/draw_helpers.h
@@ -1,9 +1,8 @@
-void common_fill_pcb_polygon (hidGC gc, PolygonType *poly,
-                              const BoxType *clip_box);
-void common_thindraw_pcb_polygon (hidGC gc, PolygonType *poly,
-                                  const BoxType *clip_box);
+void common_gui_draw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box);
+void common_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box);
+void common_thindraw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box);
 void common_fill_pcb_pad (hidGC gc, PadType *pad, bool clear, bool mask);
 void common_thindraw_pcb_pad (hidGC gc, PadType *pad, bool clear, bool mask);
-void common_fill_pcb_pv (hidGC gc, PinType *pv, bool drawHole, bool mask);
+void common_fill_pcb_pv (hidGC fg_gc, hidGC bg_gc,  PinType *pv, bool drawHole, bool mask);
 void common_thindraw_pcb_pv (hidGC fg_gc, hidGC bg_gc, PinType *pv, bool drawHole, bool mask);
 void common_draw_helpers_init (HID_DRAW *graphics);
diff --git a/src/hid/common/hidnogui.c b/src/hid/common/hidnogui.c
index bab0bff..e9662d1 100644
--- a/src/hid/common/hidnogui.c
+++ b/src/hid/common/hidnogui.c
@@ -148,7 +148,7 @@ nogui_fill_polygon (hidGC gc, int n_coords, Coord *x, Coord *y)
 }
 
 static void
-nogui_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+nogui_draw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
   CRASH;
 }
@@ -501,7 +501,7 @@ common_nogui_graphics_init (HID_DRAW *graphics)
   graphics->fill_polygon =    nogui_fill_polygon;
   graphics->fill_rect =       nogui_fill_rect;
 
-  graphics->fill_pcb_polygon = nogui_fill_pcb_polygon;
+  graphics->draw_pcb_polygon = nogui_draw_pcb_polygon;
   graphics->fill_pcb_pad =     nogui_fill_pcb_pad;
   graphics->thindraw_pcb_pad = nogui_thindraw_pcb_pad;
   graphics->fill_pcb_pv =      nogui_fill_pcb_pv;
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 43172c1..9638bb8 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -575,20 +575,20 @@ ghid_fill_polygon (hidGC gc, int n_coords, Coord *x, Coord *y)
   hidgl_fill_polygon (n_coords, x, y);
 }
 
-void
-ghid_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+static void
+_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
   USE_GC (gc);
 
   hidgl_fill_pcb_polygon (poly, clip_box, gport->view.coord_per_px);
 }
 
-void
-ghid_thindraw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
+static void
+_thindraw_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
   common_thindraw_pcb_polygon (gc, poly, clip_box);
   ghid_set_alpha_mult (gc, 0.25);
-  ghid_fill_pcb_polygon (gc, poly, clip_box);
+  _fill_pcb_polygon (gc, poly, clip_box);
   ghid_set_alpha_mult (gc, 1.0);
 }
 
@@ -600,6 +600,28 @@ ghid_fill_rect (hidGC gc, Coord x1, Coord y1, Coord x2, Coord y2)
   hidgl_fill_rect (x1, y1, x2, y2);
 }
 
+static void
+ghid_draw_pcb_polygon (hidGC gc, PolygonType *polygon, const BoxType *drawn_area)
+{
+  USE_GC (gc);
+
+  if (TEST_FLAG (THINDRAWFLAG, PCB) || TEST_FLAG (THINDRAWPOLYFLAG, PCB))
+    _thindraw_pcb_polygon (gc, polygon, drawn_area);
+  else
+    _fill_pcb_polygon (gc, polygon, drawn_area);
+
+  /* If checking planes, thin-draw any pieces which have been clipped away */
+  if (TEST_FLAG (CHECKPLANESFLAG, PCB) && !TEST_FLAG (FULLPOLYFLAG, polygon))
+    {
+      PolygonType poly = *polygon;
+
+      for (poly.Clipped = polygon->Clipped->f;
+           poly.Clipped != polygon->Clipped;
+           poly.Clipped = poly.Clipped->f)
+        _thindraw_pcb_polygon (gc, &poly, drawn_area);
+    }
+}
+
 void
 ghid_invalidate_lr (int left, int right, int top, int bottom)
 {
@@ -790,8 +812,7 @@ ghid_init_renderer (int *argc, char ***argv, GHidPort *port)
 
   /* Setup HID function pointers specific to the GL renderer*/
   ghid_hid.end_layer = ghid_end_layer;
-  ghid_graphics.fill_pcb_polygon = ghid_fill_pcb_polygon;
-  ghid_graphics.thindraw_pcb_polygon = ghid_thindraw_pcb_polygon;
+  ghid_graphics.draw_pcb_polygon = ghid_draw_pcb_polygon;
 }
 
 void
@@ -881,7 +902,7 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
      we can't use the hidgl polygon drawing routine */
   /* TODO: We could use the GLU tessellator though */
   if (hidgl_stencil_bits() == 0)
-    ghid_graphics.fill_pcb_polygon = common_fill_pcb_polygon;
+    ghid_graphics.draw_pcb_polygon = common_gui_draw_pcb_polygon;
 
   glEnable (GL_BLEND);
   glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index f12fba3..8e39be4 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -2197,6 +2197,8 @@ hid_gtk_init ()
   ghid_graphics.fill_polygon        = ghid_fill_polygon;
   ghid_graphics.fill_rect           = ghid_fill_rect;
 
+  ghid_graphics.draw_pcb_polygon    = common_gui_draw_pcb_polygon;
+
   hid_register_hid (&ghid_hid);
 #include "gtk_lists.h"
 }
diff --git a/src/hid/lesstif/main.c b/src/hid/lesstif/main.c
index 3e2fa01..7caccee 100644
--- a/src/hid/lesstif/main.c
+++ b/src/hid/lesstif/main.c
@@ -4091,6 +4091,8 @@ hid_lesstif_init ()
   lesstif_hid.flush_debug_draw        = lesstif_flush_debug_draw;
   lesstif_hid.finish_debug_draw       = lesstif_finish_debug_draw;
 
+  lesstif_hid.draw_pcb_polygon        = common_gui_draw_pcb_polygon;
+
   lesstif_hid.graphics                = &lesstif_graphics;
 
   lesstif_graphics.make_gc             = lesstif_make_gc;
diff --git a/src/hid/ps/ps.c b/src/hid/ps/ps.c
index 597ff6d..9a95854 100644
--- a/src/hid/ps/ps.c
+++ b/src/hid/ps/ps.c
@@ -1244,7 +1244,7 @@ ps_fill_polygon (hidGC gc, int n_coords, Coord *x, Coord *y)
 }
 
 static void
-ps_fill_pcb_polygon (hidGC gc, PolygonType * poly, const BoxType * clip_box)
+ps_draw_pcb_polygon (hidGC gc, PolygonType * poly, const BoxType * clip_box)
 {
   /* Ignore clip_box, just draw everything */
 
@@ -1518,7 +1518,7 @@ void ps_ps_graphics_init (HID_DRAW *graphics)
   graphics->fill_polygon       = ps_fill_polygon;
   graphics->fill_rect          = ps_fill_rect;
 
-  graphics->fill_pcb_polygon   = ps_fill_pcb_polygon;
+  graphics->draw_pcb_polygon   = ps_draw_pcb_polygon;
 }
 
 void
diff --git a/src/hid_draw.h b/src/hid_draw.h
index 9c08c8d..70b59de 100644
--- a/src/hid_draw.h
+++ b/src/hid_draw.h
@@ -55,8 +55,7 @@ struct hid_draw_st
   void (*draw_pcb_arc) (hidGC gc, ArcType *arc);
   void (*draw_pcb_text) (hidGC gc, TextType *, Coord);
 
-  void (*fill_pcb_polygon) (hidGC gc, PolygonType *poly, const BoxType *clip_box);
-  void (*thindraw_pcb_polygon) (hidGC gc, PolygonType *poly, const BoxType *clip_box);
+  void (*draw_pcb_polygon) (hidGC gc, PolygonType *poly, const BoxType *clip_box);
   void (*fill_pcb_pad) (hidGC gc, PadType *pad, bool clip, bool mask);
   void (*thindraw_pcb_pad) (hidGC gc, PadType *pad, bool clip, bool mask);
   void (*fill_pcb_pv) (hidGC fg_gc, hidGC bg_gc, PinType *pv, bool drawHole, bool mask);
