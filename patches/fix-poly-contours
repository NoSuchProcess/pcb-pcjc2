Bottom: 84d06ae4a4863af87357b5141f286c3d10659379
Top:    cab7408e88a060b4d7e6ee7e6f694eda7b0aa70f
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2015-01-21 22:54:08 +0000

Fix poly contours (?)

XXX: Thermals are not fixed up after frac_circle() changes
XXX: Fix may be coincidental due to minor geometry changes

Fixes bug observed with copper sliver on this layout fragment:

Element["" "" "" "unknown" 1325.00mil 1070.00mil -175.00mil -105.00mil 0 100 ""]
(
  Pad[-85.00mil -39.00mil -79.00mil -39.00mil 34.00mil 30.00mil 40.00mil "2" "2" "square"]

  )

Layer(1 "component")
(
  Line[1245.00mil 1030.00mil 1195.00mil 1030.00mil 12.00mil 20.00mil "clearline"]
  Polygon("clearpoly")
  (
    [5.00mil 5.00mil] [4195.00mil 5.00mil] [4195.00mil 2695.00mil] [5.00mil 2695.00mil]
  )
)



---

diff --git a/src/polygon.c b/src/polygon.c
index 0ce7b4b..35bc10f 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -478,12 +478,11 @@ frac_circle (PLINE * c, Coord X, Coord Y, Vector v, int fraction)
   double e1, e2, t1;
   int i, range;
 
-  poly_InclVertex (c->head.prev, poly_CreateNode (v));
   /* move vector to origin */
   e1 = (v[0] - X) * POLY_CIRC_RADIUS_ADJ;
   e2 = (v[1] - Y) * POLY_CIRC_RADIUS_ADJ;
 
-  /* XXX: */ /* NB: the caller adds the last vertex, hence the -1 */
+  /* XXX */ /* NB: the caller adds the last vertex, hence the -1 */
   range = POLY_CIRC_SEGS / fraction;
   for (i = 0; i < range; i++)
     {
@@ -689,28 +688,39 @@ LinePoly (LineType * L, Coord thick)
       l->Point2.X += dy;
       l->Point2.Y -= dx;
     }
-  v[0] = l->Point1.X - dx;
-  v[1] = l->Point1.Y - dy;
-  if ((contour = poly_NewContour (poly_CreateNode (v))) == NULL)
-    return 0;
+
+
   v[0] = l->Point2.X - dx;
   v[1] = l->Point2.Y - dy;
+  if ((contour = poly_NewContour (poly_CreateNode (v))) == NULL)
+    return 0;
+
   if (TEST_FLAG (SQUAREFLAG,l))
-    poly_InclVertex (contour->head.prev, poly_CreateNode (v));
+    {
+      v[0] = l->Point2.X + dx;
+      v[1] = l->Point2.Y + dy;
+      poly_InclVertex (contour->head.prev, poly_CreateNode (v));
+    }
   else
     frac_circle (contour, l->Point2.X, l->Point2.Y, v, 2);
-  v[0] = l->Point2.X + dx;
-  v[1] = l->Point2.Y + dy;
-  poly_InclVertex (contour->head.prev, poly_CreateNode (v));
+
   v[0] = l->Point1.X + dx;
   v[1] = l->Point1.Y + dy;
+  poly_InclVertex (contour->head.prev, poly_CreateNode (v));
+
   if (TEST_FLAG (SQUAREFLAG,l))
-    poly_InclVertex (contour->head.prev, poly_CreateNode (v));
+    {
+      v[0] = l->Point1.X - dx;
+      v[1] = l->Point1.Y - dy;
+      poly_InclVertex (contour->head.prev, poly_CreateNode (v));
+    }
   else
     frac_circle (contour, l->Point1.X, l->Point1.Y, v, 2);
+
   /* now we have the line contour */
   if (!(np = ContourToPoly (contour)))
     return NULL;
+
   return np;
 }
 
diff --git a/src/polygon.h b/src/polygon.h
index 369efea..0cba2bf 100644
--- a/src/polygon.h
+++ b/src/polygon.h
@@ -34,7 +34,7 @@
 
 /* Implementation constants */
 
-#define POLY_CIRC_SEGS 40
+#define POLY_CIRC_SEGS 8//40
 #define POLY_CIRC_SEGS_F ((float)POLY_CIRC_SEGS)
 
 #if 0
