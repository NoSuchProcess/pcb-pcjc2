Bottom: cb3bb45a40eeb62177b5e30d0f0a619962ad3931
Top:    336be8fce9aa64b49656ef5fb327f195b89a3cac
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-12-23 22:17:03 +0000

Rename ResetFound{LinesAndPolygons,PinsViasAndPads} and ResetConnections

These functions are not specific to the "found" flag, (or the soon to be
introduced "connected" flag, so to avoid confusion, rename them:

  ClearFlagOnLinesAndPolygons ()
  ClearFlagOnPinsViasAndPads ()
  ClearFlagOnAllObjects ()


---

diff --git a/src/action.c b/src/action.c
index 6a2c43a..834a273 100644
--- a/src/action.c
+++ b/src/action.c
@@ -2295,7 +2295,7 @@ ActionConnection (int argc, char **argv, Coord x, Coord y)
 	  }
 
 	case F_ResetLinesAndPolygons:
-	  if (ResetFoundLinesAndPolygons (true, FOUNDFLAG))
+	  if (ClearFlagOnLinesAndPolygons (true, FOUNDFLAG))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
@@ -2303,7 +2303,7 @@ ActionConnection (int argc, char **argv, Coord x, Coord y)
 	  break;
 
 	case F_ResetPinsViasAndPads:
-	  if (ResetFoundPinsViasAndPads (true, FOUNDFLAG))
+	  if (ClearFlagOnPinsViasAndPads (true, FOUNDFLAG))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
@@ -2311,7 +2311,7 @@ ActionConnection (int argc, char **argv, Coord x, Coord y)
 	  break;
 
 	case F_Reset:
-	  if (ResetConnections (true, FOUNDFLAG))
+	  if (ClearFlagOnAllObjects (true, FOUNDFLAG))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
@@ -2748,7 +2748,7 @@ ActionDisplay (int argc, char **argv, Coord childX, Coord childY)
 	  TOGGLE_FLAG (AUTODRCFLAG, PCB);
 	  if (TEST_FLAG (AUTODRCFLAG, PCB) && Settings.Mode == LINE_MODE)
 	    {
-	      if (ResetConnections (true, FOUNDFLAG))
+	      if (ClearFlagOnAllObjects (true, FOUNDFLAG))
 		{
 		  IncrementUndoSerialNumber ();
 		  Draw ();
diff --git a/src/find.c b/src/find.c
index 964e8ae..8c0f404 100644
--- a/src/find.c
+++ b/src/find.c
@@ -2922,7 +2922,7 @@ LookupElementConnections (ElementType *Element, FILE * FP)
   /* reset all currently marked connections */
   User = true;
   TheFlag = FOUNDFLAG;
-  ResetConnections (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG);
   InitConnectionLookup ();
   PrintElementConnections (Element, FP, true);
   SetChangedFlag (true);
@@ -2943,7 +2943,7 @@ LookupConnectionsToAllElements (FILE * FP)
   /* reset all currently marked connections */
   User = false;
   TheFlag = FOUNDFLAG;
-  ResetConnections (false, FOUNDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG);
   InitConnectionLookup ();
 
   ELEMENT_LOOP (PCB->Data);
@@ -2953,12 +2953,12 @@ LookupConnectionsToAllElements (FILE * FP)
       break;
     SEPARATE (FP);
     if (Settings.ResetAfterElement && n != 1)
-      ResetConnections (false, FOUNDFLAG);
+      ClearFlagOnAllObjects (false, FOUNDFLAG);
   }
   END_LOOP;
   if (Settings.RingBellWhenFinished)
     gui->beep ();
-  ResetConnections (false, FOUNDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG);
   FreeConnectionLookupMemory ();
   Redraw ();
 }
@@ -3118,7 +3118,7 @@ LookupUnusedPins (FILE * FP)
   /* reset all currently marked connections */
   User = true;
   TheFlag = FOUNDFLAG;
-  ResetConnections (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG);
   InitConnectionLookup ();
 
   ELEMENT_LOOP (PCB->Data);
@@ -3143,7 +3143,7 @@ LookupUnusedPins (FILE * FP)
  * resets all used flags of pins and vias
  */
 bool
-ResetFoundPinsViasAndPads (bool AndDraw, int flag)
+ClearFlagOnPinsViasAndPads (bool AndDraw, int flag)
 {
   bool change = false;
 
@@ -3199,7 +3199,7 @@ ResetFoundPinsViasAndPads (bool AndDraw, int flag)
  * resets all used flags of LOs
  */
 bool
-ResetFoundLinesAndPolygons (bool AndDraw, int flag)
+ClearFlagOnLinesAndPolygons (bool AndDraw, int flag)
 {
   bool change = false;
 
@@ -3264,12 +3264,12 @@ ResetFoundLinesAndPolygons (bool AndDraw, int flag)
  * resets all found connections
  */
 bool
-ResetConnections (bool AndDraw, int flag)
+ClearFlagOnAllObjects (bool AndDraw, int flag)
 {
   bool change = false;
 
-  change = ResetFoundPinsViasAndPads  (AndDraw, flag) || change;
-  change = ResetFoundLinesAndPolygons (AndDraw, flag) || change;
+  change = ClearFlagOnPinsViasAndPads  (AndDraw, flag) || change;
+  change = ClearFlagOnLinesAndPolygons (AndDraw, flag) || change;
 
   return change;
 }
@@ -3339,7 +3339,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
           DumpList ();
           /* make the flag changes undoable */
           TheFlag = FOUNDFLAG | SELECTEDFLAG;
-          ResetConnections (false, TheFlag);
+          ClearFlagOnAllObjects (false, TheFlag);
           User = true;
           drc = false;
           Bloat = -PCB->Shrink;
@@ -3383,7 +3383,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
     }
   /* now check the bloated condition */
   drc = false;
-  ResetConnections (false, TheFlag);
+  ClearFlagOnAllObjects (false, TheFlag);
   TheFlag = FOUNDFLAG;
   ListStart (What, ptr1, ptr2, ptr3);
   Bloat = PCB->Bloat;
@@ -3393,7 +3393,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
       DumpList ();
       /* make the flag changes undoable */
       TheFlag = FOUNDFLAG | SELECTEDFLAG;
-      ResetConnections (false, TheFlag);
+      ClearFlagOnAllObjects (false, TheFlag);
       User = true;
       drc = false;
       Bloat = 0;
@@ -3444,7 +3444,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
   drc = false;
   DumpList ();
   TheFlag = FOUNDFLAG | SELECTEDFLAG;
-  ResetConnections (false, TheFlag);
+  ClearFlagOnAllObjects (false, TheFlag);
   return (false);
 }
 
@@ -3582,7 +3582,7 @@ DRCAll (void)
 
   TheFlag = FOUNDFLAG | DRCFLAG | SELECTEDFLAG;
 
-  if (ResetConnections (true, TheFlag))
+  if (ClearFlagOnAllObjects (true, TheFlag))
     {
       IncrementUndoSerialNumber ();
       Draw ();
@@ -3636,7 +3636,7 @@ DRCAll (void)
   END_LOOP;
 
   TheFlag = (IsBad) ? DRCFLAG : (FOUNDFLAG | DRCFLAG | SELECTEDFLAG);
-  ResetConnections (false, TheFlag);
+  ClearFlagOnAllObjects (false, TheFlag);
   TheFlag = SELECTEDFLAG;
   /* check minimum widths and polygon clearances */
   if (!IsBad)
diff --git a/src/find.h b/src/find.h
index 9644727..4cc68f8 100644
--- a/src/find.h
+++ b/src/find.h
@@ -52,9 +52,9 @@ void LookupElementConnections (ElementType *, FILE *);
 void LookupConnectionsToAllElements (FILE *);
 void LookupConnection (Coord, Coord, bool, Coord, int, bool AndRats);
 void LookupUnusedPins (FILE *);
-bool ResetFoundLinesAndPolygons (bool, int flag);
-bool ResetFoundPinsViasAndPads (bool, int flag);
-bool ResetConnections (bool, int flag);
+bool ClearFlagOnLinesAndPolygons (bool, int flag);
+bool ClearFlagOnPinsViasAndPads (bool, int flag);
+bool ClearFlagOnAllObjects (bool, int flag);
 void InitConnectionLookup (void);
 void FreeConnectionLookupMemory (void);
 void RatFindHook (int, void *, void *, void *, bool, int flag, bool);
diff --git a/src/hid/gtk/gui-drc-window.c b/src/hid/gtk/gui-drc-window.c
index 70b3a5d..ab929bd 100644
--- a/src/hid/gtk/gui-drc-window.c
+++ b/src/hid/gtk/gui-drc-window.c
@@ -101,7 +101,7 @@ selection_changed_cb (GtkTreeSelection *selection, gpointer user_data)
 
   if (!gtk_tree_selection_get_selected (selection, &model, &iter))
     {
-      if (ResetConnections (true, FOUNDFLAG))
+      if (ClearFlagOnAllObjects (true, FOUNDFLAG))
         {
           IncrementUndoSerialNumber ();
           Draw ();
@@ -115,7 +115,7 @@ selection_changed_cb (GtkTreeSelection *selection, gpointer user_data)
 
   gtk_tree_model_get (model, &iter, DRC_VIOLATION_OBJ_COL, &violation, -1);
 
-  ResetConnections (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG);
 
   if (violation == NULL)
     return;
diff --git a/src/hid/gtk/gui-netlist-window.c b/src/hid/gtk/gui-netlist-window.c
index 103da0c..0454586 100644
--- a/src/hid/gtk/gui-netlist-window.c
+++ b/src/hid/gtk/gui-netlist-window.c
@@ -536,14 +536,14 @@ netlist_select_cb (GtkWidget * widget, gpointer data)
     node_selected_net = NULL;
 
   InitConnectionLookup ();
-  ResetConnections (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG);
 
   for (i = selected_net->EntryN, entry = selected_net->Entry; i; i--, entry++)
     if (SeekPad (entry, &conn, false))
       RatFindHook (conn.type, conn.ptr1, conn.ptr2, conn.ptr2, true, FOUNDFLAG, true);
 
   SelectByFlag (FOUNDFLAG, select_flag);
-  ResetConnections (false, FOUNDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG);
   FreeConnectionLookupMemory ();
   IncrementUndoSerialNumber ();
   Draw ();
diff --git a/src/hid/lesstif/netlist.c b/src/hid/lesstif/netlist.c
index 8104ecd..598d106 100644
--- a/src/hid/lesstif/netlist.c
+++ b/src/hid/lesstif/netlist.c
@@ -133,14 +133,14 @@ nbcb_select_common (LibraryMenuType *net, int pos, int select_flag)
   int i;
 
   InitConnectionLookup ();
-  ResetConnections (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG);
 
   for (i = net->EntryN, entry = net->Entry; i; i--, entry++)
     if (SeekPad (entry, &conn, false))
       RatFindHook (conn.type, conn.ptr1, conn.ptr2, conn.ptr2, true, FOUNDFLAG, true);
 
   SelectByFlag (FOUNDFLAG, select_flag);
-  ResetConnections (false, FOUNDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG);
   FreeConnectionLookupMemory ();
   IncrementUndoSerialNumber ();
   Draw ();
diff --git a/src/rats.c b/src/rats.c
index 9a1c70f..fb1d41f 100644
--- a/src/rats.c
+++ b/src/rats.c
@@ -458,7 +458,7 @@ GatherSubnets (NetListType *Netl, bool NoWarn, bool AndRats)
   for (m = 0; Netl->NetN > 0 && m < Netl->NetN; m++)
     {
       a = &Netl->Net[m];
-      ResetConnections (false, DRCFLAG);
+      ClearFlagOnAllObjects (false, DRCFLAG);
       RatFindHook (a->Connection[0].type, a->Connection[0].ptr1,
                    a->Connection[0].ptr2, a->Connection[0].ptr2,
                    false, DRCFLAG, AndRats);
@@ -537,7 +537,7 @@ GatherSubnets (NetListType *Netl, bool NoWarn, bool AndRats)
       if (!NoWarn)
 	Warned |= CheckShorts (a->Connection[0].menu);
     }
-  ResetConnections (false, DRCFLAG);
+  ClearFlagOnAllObjects (false, DRCFLAG);
   return (Warned);
 }
 
diff --git a/src/report.c b/src/report.c
index a5e45de..baa458d 100644
--- a/src/report.c
+++ b/src/report.c
@@ -546,7 +546,7 @@ ReportFoundPins (int argc, char **argv, Coord x, Coord y)
 }
 
 /* Assumes that we start with a blank connection state,
- * e.g. ResetConnections() has been run.
+ * e.g. ClearFlagOnAllObjects() has been run.
  * Does not add its own changes to the undo system
  */
 static double
@@ -604,10 +604,10 @@ ReportAllNetLengths (int argc, char **argv, Coord x, Coord y)
    *
    * After this, we don't add any changes to the undo system, but
    * ensure we get back to a point where we can Undo() our changes
-   * by resetting the connections with ResetConnections() before
+   * by resetting the connections with ClearFlagOnAllObjects() before
    * calling Undo() at the end of the procedure.
    */
-  ResetConnections (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG);
   IncrementUndoSerialNumber ();
 
   for (ni = 0; ni < PCB->NetlistLib.MenuN; ni++)
@@ -669,14 +669,14 @@ ReportAllNetLengths (int argc, char **argv, Coord x, Coord y)
           length = XYtoNetLength (x, y, &found);
 
           /* Reset connectors for the next lookup */
-          ResetConnections (false, FOUNDFLAG);
+          ClearFlagOnAllObjects (false, FOUNDFLAG);
 
           pcb_sprintf(buf, "%$m*", units_name, length);
           gui->log("Net %s length %s\n", netname, buf);
         }
     }
 
-  ResetConnections (false, FOUNDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG);
   Undo (true);
   return 0;
 }
@@ -695,17 +695,17 @@ ReportNetLength (int argc, char **argv, Coord x, Coord y)
    *
    * After this, we don't add any changes to the undo system, but
    * ensure we get back to a point where we can Undo() our changes
-   * by resetting the connections with ResetConnections() before
+   * by resetting the connections with ClearFlagOnAllObjects() before
    * calling Undo() at the end of the procedure.
    */
-  ResetConnections (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG);
   IncrementUndoSerialNumber ();
 
   length = XYtoNetLength (x, y, &found);
 
   if (!found)
     {
-      ResetConnections (false, FOUNDFLAG);
+      ClearFlagOnAllObjects (false, FOUNDFLAG);
       Undo (true);
       gui->log ("No net under cursor.\n");
       return 1;
@@ -767,7 +767,7 @@ ReportNetLength (int argc, char **argv, Coord x, Coord y)
   END_LOOP;
 
 got_net_name:
-  ResetConnections (false, FOUNDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG);
   Undo (true);
 
   {
@@ -901,16 +901,16 @@ ReportNetLengthByName (char *tofind, int x, int y)
    *
    * After this, we don't add any changes to the undo system, but
    * ensure we get back to a point where we can Undo() our changes
-   * by resetting the connections with ResetConnections() before
+   * by resetting the connections with ClearFlagOnAllObjects() before
    * calling Undo() when we are finished.
    */
-  ResetConnections (true, FOUNDFLAG);
+  ClearFlagOnAllObjects (true, FOUNDFLAG);
   IncrementUndoSerialNumber ();
 
   length = XYtoNetLength (x, y, &found);
   netname = net->Name + 2;
 
-  ResetConnections (false, FOUNDFLAG);
+  ClearFlagOnAllObjects (false, FOUNDFLAG);
   Undo (true);
 
   if (!found)
diff --git a/src/select.c b/src/select.c
index 3b1b670..1762c76 100644
--- a/src/select.c
+++ b/src/select.c
@@ -962,7 +962,7 @@ SelectObjectByName (int Type, char *Pattern, bool select)
   if (Type & NET_TYPE)
     {
       InitConnectionLookup ();
-      changed = ResetConnections (true, FOUNDFLAG) || changed;
+      changed = ClearFlagOnAllObjects (true, FOUNDFLAG) || changed;
 
       MENU_LOOP (&PCB->NetlistLib);
       {
@@ -983,7 +983,7 @@ SelectObjectByName (int Type, char *Pattern, bool select)
       END_LOOP;
 
       changed = SelectByFlag (FOUNDFLAG, select) || changed;
-      changed = ResetConnections (false, FOUNDFLAG) || changed;
+      changed = ClearFlagOnAllObjects (false, FOUNDFLAG) || changed;
       FreeConnectionLookupMemory ();
     }
 
diff --git a/src/set.c b/src/set.c
index f1b6c94..9fcc4dd 100644
--- a/src/set.c
+++ b/src/set.c
@@ -300,7 +300,7 @@ SetMode (int Mode)
       Crosshair.AttachedLine.State = STATE_FIRST;
       if (Mode == LINE_MODE && TEST_FLAG (AUTODRCFLAG, PCB))
 	{
-	  if (ResetConnections (true, FOUNDFLAG))
+	  if (ClearFlagOnAllObjects (true, FOUNDFLAG))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
