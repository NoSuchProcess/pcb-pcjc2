Bottom: 30614bfb0507dc49650b92e75312883b451fb7e9
Top:    f60f9e71e02f55dcdd1a0b5b59045d1ae7d96adc
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-09 23:23:26 +0000

Make HID->prompt_for and HID->fileselect return heap allocated memory

The callers should free this string free()


---

diff --git a/src/action.c b/src/action.c
index 07b2752..75d56ad 100644
--- a/src/action.c
+++ b/src/action.c
@@ -1408,8 +1408,6 @@ NotifyMode (void)
 		    Draw ();
 		  }
 		}
-
-	    /* free memory allocated by gui->prompt_for() */
 	    free (string);
 	  }
 	break;
@@ -4651,7 +4649,8 @@ ActionChangeName (int argc, char **argv, int x, int y)
 	case F_Layout:
 	  name =
 	    gui->prompt_for (_("Enter the layout name:"), EMPTY (PCB->Name));
-	  if (name && ChangeLayoutName (name))	/* XXX memory leak */
+	  /* NB: ChangeLayoutName takes ownership of the passed memory */
+	  if (name && ChangeLayoutName (name))
 	    SetChangedFlag (true);
 	  break;
 
@@ -4659,7 +4658,8 @@ ActionChangeName (int argc, char **argv, int x, int y)
 	case F_Layer:
 	  name = gui->prompt_for (_("Enter the layer name:"),
 				  EMPTY (CURRENT->Name));
-	  if (name && ChangeLayerName (CURRENT, name))	/* XXX memory leak */
+	  /* NB: ChangeLayerName takes ownership of the passed memory */
+	  if (name && ChangeLayerName (CURRENT, name))
 	    SetChangedFlag (true);
 	  break;
 	}
@@ -5951,7 +5951,8 @@ ActionNew (int argc, char **argv, int x, int y)
       CreateNewPCBPost (PCB, 1);
 
       /* setup the new name and reset some values to default */
-      PCB->Name = name;		/* XXX memory leak */
+      free (PCB->Name);
+      PCB->Name = name;
 
       ResetStackAndVisibility ();
       CreateDefaultFont ();
@@ -7622,6 +7623,8 @@ ActionImport (int argc, char **argv, int x, int y)
 	}
       else
 	AttributePut (PCB, "import::disperse", ds);
+      if (ARG (1) == NULL)
+        free (ds);
       return 0;
     }
 
diff --git a/src/change.c b/src/change.c
index df7f454..2545d84 100644
--- a/src/change.c
+++ b/src/change.c
@@ -1079,6 +1079,7 @@ ChangeTextName (LayerTypePtr Layer, TextTypePtr Text)
 bool
 ChangeLayoutName (char *Name)
 {
+  free (PCB->Name);
   PCB->Name = Name;
   hid_action ("PCBChanged");
   return (true);
@@ -1106,6 +1107,7 @@ ChangeElementSide (ElementTypePtr Element, LocationType yoff)
 bool
 ChangeLayerName (LayerTypePtr Layer, char *Name)
 {
+  free (CURRENT->Name);
   CURRENT->Name = Name;
   hid_action ("LayersChanged");
   return (true);
@@ -2280,7 +2282,7 @@ QueryInputAndChangeObjectName (int Type, void *Ptr1, void *Ptr2, void *Ptr3)
     }
   if (name)
     {
-      /* XXX Memory leak!! */
+      /* NB: ChangeObjectName takes ownership of the passed memory */
       char *old = ChangeObjectName (Type, Ptr1, Ptr2, Ptr3, name);
       if (old != (char *) -1)
 	{
diff --git a/src/hid/batch/batch.c b/src/hid/batch/batch.c
index 6e22326..1fa97c7 100644
--- a/src/hid/batch/batch.c
+++ b/src/hid/batch/batch.c
@@ -332,83 +332,6 @@ batch_stop_block_hook (hidval mlpoll)
 {
 }
 
-static void
-batch_log (const char *fmt, ...)
-{
-  va_list ap;
-  va_start (ap, fmt);
-  vprintf (fmt, ap);
-  va_end (ap);
-}
-
-static void
-batch_logv (const char *fmt, va_list ap)
-{
-  vprintf (fmt, ap);
-}
-
-static int
-batch_confirm_dialog (char *msg, ...)
-{
-  int rv;
-
-  do
-    {
-      printf ("%s ? 0=cancel 1=ok : ", msg);
-      fflush (stdout);
-    }
-  while (scanf ("%d", &rv) != 1);
-  return rv;
-}
-
-static int
-batch_close_confirm_dialog ()
-{
-  return batch_confirm_dialog (_("OK to lose data ?"), NULL);
-}
-
-static void
-batch_report_dialog (char *title, char *msg)
-{
-  printf ("--- %s ---\n%s\n", title, msg);
-}
-
-static char *
-batch_prompt_for (const char *msg, const char *default_string)
-{
-  static char buf[1024];
-  char *s;
-
-  if (default_string)
-    printf ("%s [%s] : ", msg, default_string);
-  else
-    printf ("%s : ", msg);
-
-  s = fgets (buf, 1024, stdin);
-  if (default_string && (s == NULL || buf[0] == 0))
-    strcpy (buf, default_string);
-  return buf;
-}
-
-static char *
-batch_fileselect (const char *title, const char *descr,
-		  char *default_file, char *default_ext,
-		  const char *history_tag, int flags)
-{
-  static char buf[1024];
-  char *s;
-
-  if (default_file)
-    printf ("%s [%s] : ", title, default_file);
-  else
-    printf ("%s : ", title);
-
-  s = fgets (buf, 1024, stdin);
-  if (default_file && (s == NULL || buf[0] == 0))
-    strcpy (buf, default_file);
-  return buf;
-}
-
 static int
 batch_attribute_dialog (HID_Attribute * attrs_,
 			int n_attrs_, HID_Attr_Val * results_,
@@ -422,19 +345,6 @@ batch_show_item (void *item)
 {
 }
 
-static void
-batch_beep (void)
-{
-  putchar (7);
-  fflush (stdout);
-}
-
-static int
-batch_progress (int so_far_, int total_, const char *message_)
-{
-  return 0;
-}
-
 HID batch_gui = {
   sizeof (HID),
   "batch",
@@ -475,18 +385,18 @@ HID batch_gui = {
   batch_unwatch_file,
   batch_add_block_hook,
   batch_stop_block_hook,
-  batch_log,
-  batch_logv,
-  batch_confirm_dialog,
-  batch_close_confirm_dialog,
-  batch_report_dialog,
-  batch_prompt_for,
-  batch_fileselect,
+  0 /* batch_log */,
+  0 /* batch_logv */,
+  0 /* batch_confirm_dialog */,
+  0 /* batch_close_confirm_dialog */,
+  0 /* batch_report_dialog */,
+  0 /* batch_prompt_for */,
+  0 /* batch_fileselect */,
   batch_attribute_dialog,
   batch_show_item,
-  batch_beep,
-  batch_progress,
-  0 /* batch_drc_gui */ ,
+  0 /* batch_beep */,
+  0 /* batch_progress */,
+  0 /* batch_drc_gui */,
   0 /* batch_edit_attributes */
 };
 
@@ -495,6 +405,7 @@ HID batch_gui = {
 void
 hid_batch_init ()
 {
+  apply_default_hid (&batch_gui, 0);
   hid_register_hid (&batch_gui);
 #include "batch_lists.h"
 }
diff --git a/src/hid/common/hidnogui.c b/src/hid/common/hidnogui.c
index cfc1ed4..b7f9eea 100644
--- a/src/hid/common/hidnogui.c
+++ b/src/hid/common/hidnogui.c
@@ -302,9 +302,15 @@ nogui_prompt_for (const char *msg, const char *default_string)
     printf ("%s : ", msg);
 
   s = fgets (buf, 1024, stdin);
-  if (default_string && (s == NULL || buf[0] == 0))
-    strcpy (buf, default_string);
-  return buf;
+  if (s == NULL || buf[0] == '\0' || buf[0] == '\r' || buf[0] == '\n')
+    {
+      if (default_string != NULL)
+        return strdup (default_string);
+      else
+        return strdup ("");
+    }
+  else
+    return strdup (buf);
 }
 
 /* FIXME - this could use some enhancement to actually use the other
@@ -322,10 +328,15 @@ nogui_fileselect (const char *title, const char *descr,
   else
     printf ("%s : ", title);
 
-  s = fgets (buf, 1024, stdin);
-  if (default_file && (s == NULL || buf[0] == 0))
-    strcpy (buf, default_file);
-  return buf;
+  if (s == NULL || buf[0] == '\0' || buf[0] == '\r' || buf[0] == '\n')
+    {
+      if (default_file != NULL)
+        return strdup (default_file);
+      else
+        return NULL;
+    }
+  else
+    return strdup (buf);
 }
 
 static int
diff --git a/src/vendor.c b/src/vendor.c
index 39359cc..a296aa1 100644
--- a/src/vendor.c
+++ b/src/vendor.c
@@ -269,11 +269,12 @@ int
 ActionLoadVendorFrom (int argc, char **argv, int x, int y)
 {
   int i;
-  char *fname = NULL, *name = NULL;
+  char *fname = NULL;
   static char *default_file = NULL;
   char *sval;
   Resource *res, *drcres, *drlres;
   int type;
+  bool free_fname = false;
 
   cached_drill = -1;
 
@@ -291,11 +292,10 @@ ActionLoadVendorFrom (int argc, char **argv, int x, int y)
       if (fname == NULL)
 	AFAIL (load_vendor);
 
-      if (default_file != NULL)
-	{
-	  free (default_file);
-	  default_file = NULL;
-	}
+      free_fname = true;
+
+      free (default_file);
+      default_file = NULL;
 
       if (fname && *fname)
 	default_file = strdup (fname);
@@ -459,7 +459,8 @@ ActionLoadVendorFrom (int argc, char **argv, int x, int y)
 
   vendorMapEnable = true;
   apply_vendor_map ();
-  free (name);
+  if (free_fname)
+    free (fname);
   return 0;
 }
