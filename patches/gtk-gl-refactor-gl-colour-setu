Bottom: 867fbf689dbc7fe2866d50a5cfb6d1faaf30b502
Top:    74c3500cf3e1f5cf1df8ac4100ab0efddc996e15
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-05-14 00:54:16 +0100

gtk/gl: Refactor GL colour setup handling


---

diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 2d80bb2..b6f21e5 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -346,8 +346,8 @@ typedef struct
   double blue;
 } ColorCache;
 
-void
-ghid_set_color (hidGC gc, const char *name)
+static void
+set_gl_color_for_gc (hidGC gc)
 {
   render_priv *priv = gport->render_priv;
   static void *cache = NULL;
@@ -362,24 +362,23 @@ ghid_set_color (hidGC gc, const char *name)
 
   if (old_name != NULL)
     {
-      if (strcmp (name, old_name) == 0)
+      if (strcmp (gc->colorname, old_name) == 0)
         return;
       free (old_name);
     }
 
-  old_name = strdup (name);
-  gc->colorname = (char *) name;
+  old_name = strdup (gc->colorname);
 
   if (gport->colormap == NULL)
     gport->colormap = gtk_widget_get_colormap (gport->top_window);
-  if (strcmp (name, "erase") == 0)
+  if (strcmp (gc->colorname, "erase") == 0)
     {
       gc->erase = 1;
       r = gport->bg_color.red   / 65535.;
       g = gport->bg_color.green / 65535.;
       b = gport->bg_color.blue  / 65535.;
     }
-  else if (strcmp (name, "drill") == 0)
+  else if (strcmp (gc->colorname, "drill") == 0)
     {
       gc->erase = 0;
       alpha_mult = 0.85;
@@ -390,19 +389,19 @@ ghid_set_color (hidGC gc, const char *name)
   else
     {
       alpha_mult = 0.7;
-      if (hid_cache_color (0, name, &cval, &cache))
+      if (hid_cache_color (0, gc->colorname, &cval, &cache))
         cc = (ColorCache *) cval.ptr;
       else
         {
           cc = (ColorCache *) malloc (sizeof (ColorCache));
           memset (cc, 0, sizeof (*cc));
           cval.ptr = cc;
-          hid_cache_color (1, name, &cval, &cache);
+          hid_cache_color (1, gc->colorname, &cval, &cache);
         }
 
       if (!cc->color_set)
         {
-          if (gdk_color_parse (name, &cc->color))
+          if (gdk_color_parse (gc->colorname, &cc->color))
             gdk_color_alloc (gport->colormap, &cc->color);
           else
             gdk_color_white (gport->colormap, &cc->color);
@@ -454,6 +453,18 @@ ghid_set_color (hidGC gc, const char *name)
 }
 
 void
+ghid_set_color (hidGC gc, const char *name)
+{
+  render_priv *priv = gport->render_priv;
+
+  current_gc = gc;
+
+  gc->colorname = (char *) name;
+
+  set_gl_color_for_gc (gc);
+}
+
+void
 ghid_set_line_cap (hidGC gc, EndCapStyle style)
 {
   gc->cap = style;
@@ -507,7 +518,7 @@ use_gc (hidGC gc)
 
   current_gc = gc;
 
-  ghid_set_color (gc, gc->colorname);
+  set_gl_colour_for_gc (gc);
   return 1;
 }
