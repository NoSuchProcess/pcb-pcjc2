Bottom: e45ffaa73a74419c01e15bed0fcc72f0c9edc7f0
Top:    a6381e49a58c2406a2fe6e1918d9d18e0b931dad
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-01-26 15:11:17 +0000

Add magic flag to stop pour clipping for off-screen buffers

















---

diff --git a/src/create.c b/src/create.c
index e244739..4cb1a08 100644
--- a/src/create.c
+++ b/src/create.c
@@ -151,6 +151,7 @@ CreateNewPCB (bool SetDefaultNames)
   ptr = (PCBTypePtr)calloc (1, sizeof (PCBType));
   ptr->Data = CreateNewBuffer ();
   ptr->Data->pcb = (PCBTypePtr) ptr;
+  ptr->Data->ClipPours = 1;
 
   ptr->ThermStyle = 4;
   ptr->IsleArea = 2.e8;
diff --git a/src/global.h b/src/global.h
index 6779645..c0a7a70 100644
--- a/src/global.h
+++ b/src/global.h
@@ -417,6 +417,7 @@ typedef struct			/* holds all objects */
    *rat_tree;
   struct PCBType *pcb;
   LayerType Layer[MAX_LAYER + 2];	/* add 2 silkscreen layers */
+  int ClipPours;
 } DataType, *DataTypePtr;
 
 typedef struct			/* holds drill information */
diff --git a/src/pour.c b/src/pour.c
index adb5748..b8d9562 100644
--- a/src/pour.c
+++ b/src/pour.c
@@ -1388,6 +1388,8 @@ PlowPours (DataType * Data, int type, void *ptr1, void *ptr2,
 void
 RestoreToPours (DataType * Data, int type, void *ptr1, void *ptr2)
 {
+  if (!Data->ClipPours)
+    return;
   if (type == POUR_TYPE)
     {
 #warning FIXME Later: Why do we need to do this?
@@ -1400,6 +1402,8 @@ RestoreToPours (DataType * Data, int type, void *ptr1, void *ptr2)
 void
 ClearFromPours (DataType * Data, int type, void *ptr1, void *ptr2)
 {
+  if (!Data->ClipPours)
+    return;
   if (type == POUR_TYPE)
     {
 #warning FIXME Later: Why do we need to do this?
