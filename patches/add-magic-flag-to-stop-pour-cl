Bottom: 1cf5f2060d5d19086e1d3857c2fc9cb2de46e933
Top:    9229161cb151e9812dff41434574af87b478f9fe
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2008-10-12 23:15:14 +0100

Add magic flag to stop pour clipping for off-screen buffers





---

diff --git a/src/create.c b/src/create.c
index e6a0abd..969376f 100644
--- a/src/create.c
+++ b/src/create.c
@@ -142,6 +142,7 @@ CreateNewPCB (Boolean SetDefaultNames)
   ptr = MyCalloc (1, sizeof (PCBType), "CreateNewPCB()");
   ptr->Data = CreateNewBuffer ();
   ptr->Data->pcb = (void *) ptr;
+  ptr->Data->ClipPours = 1;
 
   ptr->ThermStyle = 4;
   ptr->IsleArea = 2.e8;
diff --git a/src/global.h b/src/global.h
index 91851b8..08ae40f 100644
--- a/src/global.h
+++ b/src/global.h
@@ -358,6 +358,7 @@ typedef struct			/* holds all objects */
    *rat_tree;
   struct PCBType *pcb;
   LayerType Layer[MAX_LAYER + 2];	/* add 2 silkscreen layers */
+  int ClipPours;
 } DataType, *DataTypePtr;
 
 typedef struct			/* holds drill information */
diff --git a/src/pour.c b/src/pour.c
index d71d9f4..1a4bce3 100644
--- a/src/pour.c
+++ b/src/pour.c
@@ -1247,6 +1247,8 @@ PlowPours (DataType * Data, int type, void *ptr1, void *ptr2,
 void
 RestoreToPours (DataType * Data, int type, void *ptr1, void *ptr2)
 {
+  if (!Data->ClipPours)
+    return;
   if (type == POUR_TYPE)
     {
 #warning FIXME Later: Why do we need to do this?
@@ -1259,6 +1261,8 @@ RestoreToPours (DataType * Data, int type, void *ptr1, void *ptr2)
 void
 ClearFromPours (DataType * Data, int type, void *ptr1, void *ptr2)
 {
+  if (!Data->ClipPours)
+    return;
   if (type == POUR_TYPE)
     {
 #warning FIXME Later: Why do we need to do this?
