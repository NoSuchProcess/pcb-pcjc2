Bottom: 8b321f48eedb5265eb242d46ffe78e3233cdb31c
Top:    3afd4720d92f9554249b2270e3c4bf8d14d53a3a
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-06-03 23:35:58 +0100

Add magic flag to stop pour clipping for off-screen buffers

















---

diff --git a/src/create.c b/src/create.c
index 69ba61a..9517a12 100644
--- a/src/create.c
+++ b/src/create.c
@@ -139,6 +139,7 @@ CreateNewPCB (bool SetDefaultNames)
   ptr = MyCalloc (1, sizeof (PCBType), "CreateNewPCB()");
   ptr->Data = CreateNewBuffer ();
   ptr->Data->pcb = (void *) ptr;
+  ptr->Data->ClipPours = 1;
 
   ptr->ThermStyle = 4;
   ptr->IsleArea = 2.e8;
diff --git a/src/global.h b/src/global.h
index 5a51eac..a00059d 100644
--- a/src/global.h
+++ b/src/global.h
@@ -409,6 +409,7 @@ typedef struct			/* holds all objects */
    *rat_tree;
   struct PCBType *pcb;
   LayerType Layer[MAX_LAYER + 2];	/* add 2 silkscreen layers */
+  int ClipPours;
 } DataType, *DataTypePtr;
 
 typedef struct			/* holds drill information */
diff --git a/src/pour.c b/src/pour.c
index 24846d4..005e5e2 100644
--- a/src/pour.c
+++ b/src/pour.c
@@ -1284,6 +1284,8 @@ PlowPours (DataType * Data, int type, void *ptr1, void *ptr2,
 void
 RestoreToPours (DataType * Data, int type, void *ptr1, void *ptr2)
 {
+  if (!Data->ClipPours)
+    return;
   if (type == POUR_TYPE)
     {
 #warning FIXME Later: Why do we need to do this?
@@ -1296,6 +1298,8 @@ RestoreToPours (DataType * Data, int type, void *ptr1, void *ptr2)
 void
 ClearFromPours (DataType * Data, int type, void *ptr1, void *ptr2)
 {
+  if (!Data->ClipPours)
+    return;
   if (type == POUR_TYPE)
     {
 #warning FIXME Later: Why do we need to do this?
