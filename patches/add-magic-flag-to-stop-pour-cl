Bottom: c3d6c9b797365691d9448a22cfe5e9b57ebe07b0
Top:    88cbf1a9fee357c4fc14b78d55206288808305a7
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2008-10-13 20:59:59 +0100

Add magic flag to stop pour clipping for off-screen buffers






---

diff --git a/src/create.c b/src/create.c
index 01cfb06..16a096d 100644
--- a/src/create.c
+++ b/src/create.c
@@ -139,6 +139,7 @@ CreateNewPCB (Boolean SetDefaultNames)
   ptr = MyCalloc (1, sizeof (PCBType), "CreateNewPCB()");
   ptr->Data = CreateNewBuffer ();
   ptr->Data->pcb = (void *) ptr;
+  ptr->Data->ClipPours = 1;
 
   ptr->ThermStyle = 4;
   ptr->IsleArea = 2.e8;
diff --git a/src/global.h b/src/global.h
index 91851b8..08ae40f 100644
--- a/src/global.h
+++ b/src/global.h
@@ -358,6 +358,7 @@ typedef struct			/* holds all objects */
    *rat_tree;
   struct PCBType *pcb;
   LayerType Layer[MAX_LAYER + 2];	/* add 2 silkscreen layers */
+  int ClipPours;
 } DataType, *DataTypePtr;
 
 typedef struct			/* holds drill information */
diff --git a/src/pour.c b/src/pour.c
index b27b0fd..17116ff 100644
--- a/src/pour.c
+++ b/src/pour.c
@@ -1237,6 +1237,8 @@ PlowPours (DataType * Data, int type, void *ptr1, void *ptr2,
 void
 RestoreToPours (DataType * Data, int type, void *ptr1, void *ptr2)
 {
+  if (!Data->ClipPours)
+    return;
   if (type == POUR_TYPE)
     {
 #warning FIXME Later: Why do we need to do this?
@@ -1249,6 +1251,8 @@ RestoreToPours (DataType * Data, int type, void *ptr1, void *ptr2)
 void
 ClearFromPours (DataType * Data, int type, void *ptr1, void *ptr2)
 {
+  if (!Data->ClipPours)
+    return;
   if (type == POUR_TYPE)
     {
 #warning FIXME Later: Why do we need to do this?
