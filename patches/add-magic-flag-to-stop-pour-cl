Bottom: 0e6ca9f00f5d4aade30a14909a70f365cab81f53
Top:    d59384ff89ad703a2b8d3b0ed2b301b223d3aea0
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-05-11 15:05:16 +0100

Add magic flag to stop pour clipping for off-screen buffers

















---

diff --git a/src/create.c b/src/create.c
index e911290..1747188 100644
--- a/src/create.c
+++ b/src/create.c
@@ -139,6 +139,7 @@ CreateNewPCB (Boolean SetDefaultNames)
   ptr = MyCalloc (1, sizeof (PCBType), "CreateNewPCB()");
   ptr->Data = CreateNewBuffer ();
   ptr->Data->pcb = (void *) ptr;
+  ptr->Data->ClipPours = 1;
 
   ptr->ThermStyle = 4;
   ptr->IsleArea = 2.e8;
diff --git a/src/global.h b/src/global.h
index d9a4e62..4335c73 100644
--- a/src/global.h
+++ b/src/global.h
@@ -395,6 +395,7 @@ typedef struct			/* holds all objects */
    *rat_tree;
   struct PCBType *pcb;
   LayerType Layer[MAX_LAYER + 2];	/* add 2 silkscreen layers */
+  int ClipPours;
 } DataType, *DataTypePtr;
 
 typedef struct			/* holds drill information */
diff --git a/src/pour.c b/src/pour.c
index d9ee86f..ebac0ac 100644
--- a/src/pour.c
+++ b/src/pour.c
@@ -1284,6 +1284,8 @@ PlowPours (DataType * Data, int type, void *ptr1, void *ptr2,
 void
 RestoreToPours (DataType * Data, int type, void *ptr1, void *ptr2)
 {
+  if (!Data->ClipPours)
+    return;
   if (type == POUR_TYPE)
     {
 #warning FIXME Later: Why do we need to do this?
@@ -1296,6 +1298,8 @@ RestoreToPours (DataType * Data, int type, void *ptr1, void *ptr2)
 void
 ClearFromPours (DataType * Data, int type, void *ptr1, void *ptr2)
 {
+  if (!Data->ClipPours)
+    return;
   if (type == POUR_TYPE)
     {
 #warning FIXME Later: Why do we need to do this?
