Bottom: 5501f15ea3a51038fcd7bd3b35f45943f80045c7
Top:    ba7c7ec12404b9322c32bd17352e15fde47f055f
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-10-20 08:24:18 +0100

Play with display lists and perspective


---

diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index 3715e05..9a95002 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -1632,6 +1632,8 @@ gboolean
 ghid_port_drawing_area_expose_event_cb (GtkWidget * widget,
 					GdkEventExpose * ev, GHidPort * port)
 {
+  static int one_shot = 1;
+  static int display_list;
   BoxType region;
   int eleft, eright, etop, ebottom;
   extern HID ghid_hid;
@@ -1679,15 +1681,35 @@ ghid_port_drawing_area_expose_event_cb (GtkWidget * widget,
 
   glMatrixMode (GL_PROJECTION);
   glLoadIdentity ();
-  glOrtho (0, widget->allocation.width, widget->allocation.height, 0, -100000, 100000);
+//  glOrtho (0, widget->allocation.width, widget->allocation.height, 0, -100000, 100000);
+//  glOrtho (-1, 1, -1, 1, 100, 10000);
+//  glFrustum (0, widget->allocation.width, widget->allocation.height, 0, 10, 1000);
+  glFrustum (-1, 1, -1, 1, 10, 10000);
+//  gluPerspective (30, widget->allocation.width / widget->allocation.height, 10, 1000);
   glMatrixMode (GL_MODELVIEW);
   glLoadIdentity ();
 
+  glScalef (2, 2, 1);
+
+  glTranslatef (-1., 1., 0.);
+  glScalef ( 2. / (float)widget->allocation.width,
+            -2. / (float)widget->allocation.height,
+             1. / 100.);
+
+  glTranslatef (0., 0., -2000.);
   glTranslatef (widget->allocation.width / 2., widget->allocation.height / 2., 0);
   glMultMatrixf (view_matrix);
   glTranslatef (-widget->allocation.width / 2., -widget->allocation.height / 2., 0);
+  glScalef (1., 1., 1. / 3.);
   glGetFloatv (GL_MODELVIEW_MATRIX, last_modelview_matrix);
 
+#if 0
+  if (one_shot) {
+
+    display_list = glGenLists(1);
+    glNewList (display_list, GL_COMPILE);
+#endif
+
   glEnable (GL_STENCIL_TEST);
   glClearColor (gport->offlimits_color.red / 65535.,
                 gport->offlimits_color.green / 65535.,
@@ -1834,6 +1856,15 @@ ghid_port_drawing_area_expose_event_cb (GtkWidget * widget,
   hidgl_flush_triangles (&buffer);
   glPopMatrix ();
 
+#if 0
+    glEndList ();
+    one_shot = 0;
+  } else {
+    /* Second and subsequent times */
+    glCallList (display_list);
+  }
+#endif
+
   ghid_show_crosshair (TRUE);
 
   hidgl_flush_triangles (&buffer);
