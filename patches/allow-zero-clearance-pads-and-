Bottom: c9f98991e92016a2dec93107d3503f5358149424
Top:    a9d877ea86ad8f20202752daf5abdf13636328c5
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-01-13 21:19:29 +0000

Allow zero clearance pads and pins to touch polygons

This was already supported for vias, lets be consistent.


---

diff --git a/src/change.c b/src/change.c
index 2545d84..9a2e80b 100644
--- a/src/change.c
+++ b/src/change.c
@@ -532,7 +532,13 @@ ChangePinClearSize (ElementTypePtr Element, PinTypePtr Pin)
 
   if (TEST_FLAG (LOCKFLAG, Pin))
     return (NULL);
-  value = MIN (MAX_LINESIZE, MAX (value, PCB->Bloat * 2 + 2));
+  value = MIN (MAX_LINESIZE, value);
+  if (value < 0)
+    value = 0;
+  if (Delta < 0 && value < PCB->Bloat * 2)
+    value = 0;
+  if ((Delta > 0 || Absolute) && value < PCB->Bloat * 2)
+    value = PCB->Bloat * 2 + 2;
   if (Pin->Clearance == value)
     return NULL;
   RestoreToPolygon (PCB->Data, PIN_TYPE, Element, Pin);
@@ -587,21 +593,25 @@ ChangePadClearSize (ElementTypePtr Element, PadTypePtr Pad)
 
   if (TEST_FLAG (LOCKFLAG, Pad))
     return (NULL);
-  value = MIN (MAX_LINESIZE, MAX (value, PCB->Bloat * 2 + 2));
-  if (value <= MAX_PADSIZE && value >= MIN_PADSIZE && value != Pad->Clearance)
-    {
-      AddObjectToClearSizeUndoList (PAD_TYPE, Element, Pad, Pad);
-      RestoreToPolygon (PCB->Data, PAD_TYPE, Element, Pad);
-      ErasePad (Pad);
-      r_delete_entry (PCB->Data->pad_tree, &Pad->BoundingBox);
-      Pad->Clearance = value;
-      /* SetElementBB updates all associated rtrees */
-      SetElementBoundingBox (PCB->Data, Element, &PCB->Font);
-      ClearFromPolygon (PCB->Data, PAD_TYPE, Element, Pad);
-      DrawPad (Pad, 0);
-      return (Pad);
-    }
-  return (NULL);
+  value = MIN (MAX_LINESIZE, value);
+  if (value < 0)
+    value = 0;
+  if (Delta < 0 && value < PCB->Bloat * 2)
+    value = 0;
+  if ((Delta > 0 || Absolute) && value < PCB->Bloat * 2)
+    value = PCB->Bloat * 2 + 2;
+  if (value == Pad->Clearance)
+    return NULL;
+  AddObjectToClearSizeUndoList (PAD_TYPE, Element, Pad, Pad);
+  RestoreToPolygon (PCB->Data, PAD_TYPE, Element, Pad);
+  ErasePad (Pad);
+  r_delete_entry (PCB->Data->pad_tree, &Pad->BoundingBox);
+  Pad->Clearance = value;
+  /* SetElementBB updates all associated rtrees */
+  SetElementBoundingBox (PCB->Data, Element, &PCB->Font);
+  ClearFromPolygon (PCB->Data, PAD_TYPE, Element, Pad);
+  DrawPad (Pad, 0);
+  return Pad;
 }
 
 /* ---------------------------------------------------------------------------
diff --git a/src/find.c b/src/find.c
index 613629a..74586a3 100644
--- a/src/find.c
+++ b/src/find.c
@@ -3823,7 +3823,7 @@ drc_callback (DataTypePtr data, LayerTypePtr layer, PolygonTypePtr polygon,
         }
       break;
     case PAD_TYPE:
-      if (pad->Clearance < 2 * PCB->Bloat)
+      if (pad->Clearance && pad->Clearance < 2 * PCB->Bloat)
 	if (IsPadInPolygon(pad,polygon))
 	  {
 	    AddObjectToFlagUndoList (type, ptr1, ptr2, ptr2);
@@ -3833,7 +3833,7 @@ drc_callback (DataTypePtr data, LayerTypePtr layer, PolygonTypePtr polygon,
 	  }
       break;
     case PIN_TYPE:
-      if (pin->Clearance < 2 * PCB->Bloat)
+      if (pin->Clearance && pin->Clearance < 2 * PCB->Bloat)
         {
           AddObjectToFlagUndoList (type, ptr1, ptr2, ptr2);
           SET_FLAG (TheFlag, pin);
