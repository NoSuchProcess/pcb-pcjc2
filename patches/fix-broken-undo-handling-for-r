Bottom: 97f5844150e4f68606a52b7896e5578fb7ab7e5b
Top:    ee79593a7c35cf29aec5bcce8ee79979f91d77c4
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-23 17:19:44 +0000

find.c: Use separate undo and redraw arguments for the Reset*

This separates the conditional execution of drawing updates and undo
related processing. Purely for clarity of the logic, as re-using the
AndDraw parameter to decide whether or not to save undo data seemed
prone to confusion.


---

diff --git a/src/action.c b/src/action.c
index d8e631f..997e29e 100644
--- a/src/action.c
+++ b/src/action.c
@@ -2364,7 +2364,7 @@ ActionConnection (int argc, char **argv, int x, int y)
 	  }
 
 	case F_ResetLinesAndPolygons:
-	  if (ResetFoundLinesAndPolygons (true))
+	  if (ResetFoundLinesAndPolygons (true, true))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
@@ -2372,7 +2372,7 @@ ActionConnection (int argc, char **argv, int x, int y)
 	  break;
 
 	case F_ResetPinsViasAndPads:
-	  if (ResetFoundPinsViasAndPads (true))
+	  if (ResetFoundPinsViasAndPads (true, true))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
@@ -2380,7 +2380,7 @@ ActionConnection (int argc, char **argv, int x, int y)
 	  break;
 
 	case F_Reset:
-	  if (ResetConnections (true))
+	  if (ResetConnections (true, true))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
@@ -2797,7 +2797,7 @@ ActionDisplay (int argc, char **argv, int childX, int childY)
 	  TOGGLE_FLAG (AUTODRCFLAG, PCB);
 	  if (TEST_FLAG (AUTODRCFLAG, PCB) && Settings.Mode == LINE_MODE)
 	    {
-	      if (ResetConnections (true))
+	      if (ResetConnections (true, true))
 		{
 		  IncrementUndoSerialNumber ();
 		  Draw ();
diff --git a/src/autoroute.c b/src/autoroute.c
index 976ef09..2c86270 100644
--- a/src/autoroute.c
+++ b/src/autoroute.c
@@ -985,7 +985,7 @@ CreateRouteData ()
    * this saves on searching the trees to find the nets
    */
   /* use the DRCFLAG to mark objects as they are entered */
-  ResetConnections (false);
+  ResetConnections (false, false);
   Nets = CollectSubnets (false);
   {
     routebox_t *last_net = NULL;
diff --git a/src/find.c b/src/find.c
index 748431e..79d851f 100644
--- a/src/find.c
+++ b/src/find.c
@@ -3220,7 +3220,7 @@ LookupElementConnections (ElementTypePtr Element, FILE * FP)
   /* reset all currently marked connections */
   User = true;
   TheFlag = FOUNDFLAG;
-  ResetConnections (true);
+  ResetConnections (true, true);
   InitConnectionLookup ();
   PrintElementConnections (Element, FP, true);
   SetChangedFlag (true);
@@ -3241,7 +3241,7 @@ LookupConnectionsToAllElements (FILE * FP)
   /* reset all currently marked connections */
   User = false;
   TheFlag = FOUNDFLAG;
-  ResetConnections (false);
+  ResetConnections (false, false);
   InitConnectionLookup ();
 
   ELEMENT_LOOP (PCB->Data);
@@ -3251,12 +3251,12 @@ LookupConnectionsToAllElements (FILE * FP)
       break;
     SEPARATE (FP);
     if (Settings.ResetAfterElement && n != 1)
-      ResetConnections (false);
+      ResetConnections (false, false);
   }
   END_LOOP;
   if (Settings.RingBellWhenFinished)
     gui->beep ();
-  ResetConnections (false);
+  ResetConnections (false, false);
   FreeConnectionLookupMemory ();
   ClearAndRedrawOutput ();
 }
@@ -3413,7 +3413,7 @@ LookupUnusedPins (FILE * FP)
 {
   /* reset all currently marked connections */
   User = true;
-  ResetConnections (true);
+  ResetConnections (true, true);
   InitConnectionLookup ();
 
   ELEMENT_LOOP (PCB->Data);
@@ -3438,7 +3438,7 @@ LookupUnusedPins (FILE * FP)
  * resets all used flags of pins and vias
  */
 bool
-ResetFoundPinsViasAndPads (bool AndDraw)
+ResetFoundPinsViasAndPads (bool save_undo, bool redraw)
 {
   bool change = false;
 
@@ -3446,10 +3446,10 @@ ResetFoundPinsViasAndPads (bool AndDraw)
   {
     if (TEST_FLAG (TheFlag, via))
       {
-        if (AndDraw)
+        if (save_undo)
           AddObjectToFlagUndoList (VIA_TYPE, via, via, via);
         CLEAR_FLAG (TheFlag, via);
-        if (AndDraw)
+        if (redraw)
           DrawVia (via, 0);
         change = true;
       }
@@ -3461,10 +3461,10 @@ ResetFoundPinsViasAndPads (bool AndDraw)
     {
       if (TEST_FLAG (TheFlag, pin))
         {
-          if (AndDraw)
+          if (save_undo)
             AddObjectToFlagUndoList (PIN_TYPE, element, pin, pin);
           CLEAR_FLAG (TheFlag, pin);
-          if (AndDraw)
+          if (redraw)
             DrawPin (pin, 0);
           change = true;
         }
@@ -3474,10 +3474,10 @@ ResetFoundPinsViasAndPads (bool AndDraw)
     {
       if (TEST_FLAG (TheFlag, pad))
         {
-          if (AndDraw)
+          if (save_undo)
             AddObjectToFlagUndoList (PAD_TYPE, element, pad, pad);
           CLEAR_FLAG (TheFlag, pad);
-          if (AndDraw)
+          if (redraw)
             DrawPad (pad, 0);
           change = true;
         }
@@ -3494,7 +3494,7 @@ ResetFoundPinsViasAndPads (bool AndDraw)
  * resets all used flags of LOs
  */
 bool
-ResetFoundLinesAndPolygons (bool AndDraw)
+ResetFoundLinesAndPolygons (bool save_undo, bool redraw)
 {
   bool change = false;
 
@@ -3502,10 +3502,10 @@ ResetFoundLinesAndPolygons (bool AndDraw)
   {
     if (TEST_FLAG (TheFlag, line))
       {
-        if (AndDraw)
+        if (save_undo)
           AddObjectToFlagUndoList (RATLINE_TYPE, line, line, line);
         CLEAR_FLAG (TheFlag, line);
-        if (AndDraw)
+        if (redraw)
           DrawRat (line, 0);
         change = true;
       }
@@ -3515,10 +3515,10 @@ ResetFoundLinesAndPolygons (bool AndDraw)
   {
     if (TEST_FLAG (TheFlag, line))
       {
-        if (AndDraw)
+        if (save_undo)
           AddObjectToFlagUndoList (LINE_TYPE, layer, line, line);
         CLEAR_FLAG (TheFlag, line);
-        if (AndDraw)
+        if (redraw)
           DrawLine (layer, line, 0);
         change = true;
       }
@@ -3528,10 +3528,10 @@ ResetFoundLinesAndPolygons (bool AndDraw)
   {
     if (TEST_FLAG (TheFlag, arc))
       {
-        if (AndDraw)
+        if (save_undo)
           AddObjectToFlagUndoList (ARC_TYPE, layer, arc, arc);
         CLEAR_FLAG (TheFlag, arc);
-        if (AndDraw)
+        if (redraw)
           DrawArc (layer, arc, 0);
         change = true;
       }
@@ -3541,10 +3541,10 @@ ResetFoundLinesAndPolygons (bool AndDraw)
   {
     if (TEST_FLAG (TheFlag, polygon))
       {
-        if (AndDraw)
+        if (save_undo)
           AddObjectToFlagUndoList (POLYGON_TYPE, layer, polygon, polygon);
         CLEAR_FLAG (TheFlag, polygon);
-        if (AndDraw)
+        if (redraw)
           DrawPolygon (layer, polygon, 0);
         change = true;
       }
@@ -3559,12 +3559,12 @@ ResetFoundLinesAndPolygons (bool AndDraw)
  * resets all found connections
  */
 bool
-ResetConnections (bool AndDraw)
+ResetConnections (bool save_undo, bool redraw)
 {
   bool change = false;
 
-  change = ResetFoundPinsViasAndPads  (AndDraw) || change;
-  change = ResetFoundLinesAndPolygons (AndDraw) || change;
+  change = ResetFoundPinsViasAndPads  (save_undo, redraw) || change;
+  change = ResetFoundLinesAndPolygons (save_undo, redraw) || change;
 
   return change;
 }
@@ -3636,7 +3636,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
           DumpList ();
           /* make the flag changes undoable */
           TheFlag = FOUNDFLAG | SELECTEDFLAG;
-          ResetConnections (false);
+          ResetConnections (false, false);
           User = true;
           drc = false;
           Bloat = -PCB->Shrink;
@@ -3685,7 +3685,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
     }
   /* now check the bloated condition */
   drc = false;
-  ResetConnections (false);
+  ResetConnections (false, false);
   TheFlag = FOUNDFLAG;
   ListStart (What, ptr1, ptr2, ptr3);
   Bloat = PCB->Bloat;
@@ -3696,7 +3696,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
       DumpList ();
       /* make the flag changes undoable */
       TheFlag = FOUNDFLAG | SELECTEDFLAG;
-      ResetConnections (false);
+      ResetConnections (false, false);
       User = true;
       drc = false;
       Bloat = 0;
@@ -3754,7 +3754,7 @@ DRCFind (int What, void *ptr1, void *ptr2, void *ptr3)
   drc = false;
   DumpList ();
   TheFlag = FOUNDFLAG | SELECTEDFLAG;
-  ResetConnections (false);
+  ResetConnections (false, false);
   return (false);
 }
 
@@ -3913,7 +3913,7 @@ DRCAll (void)
 
   TheFlag = FOUNDFLAG | DRCFLAG | SELECTEDFLAG;
 
-  if (ResetConnections (true))
+  if (ResetConnections (true, true))
     {
       IncrementUndoSerialNumber ();
       Draw (); /* XXX: Not sure if this is required */
@@ -3967,7 +3967,7 @@ DRCAll (void)
   END_LOOP;
 
   TheFlag = (IsBad) ? DRCFLAG : (FOUNDFLAG | DRCFLAG | SELECTEDFLAG);
-  ResetConnections (false);
+  ResetConnections (false, false);
   TheFlag = SELECTEDFLAG;
   /* check minimum widths and polygon clearances */
   if (!IsBad)
diff --git a/src/find.h b/src/find.h
index 11f23e3..384fe26 100644
--- a/src/find.h
+++ b/src/find.h
@@ -54,9 +54,9 @@ void LookupElementConnections (ElementTypePtr, FILE *);
 void LookupConnectionsToAllElements (FILE *);
 void LookupConnection (LocationType, LocationType, bool, BDimension, int);
 void LookupUnusedPins (FILE *);
-bool ResetFoundLinesAndPolygons (bool);
-bool ResetFoundPinsViasAndPads (bool);
-bool ResetConnections (bool);
+bool ResetFoundLinesAndPolygons (bool save_undo, bool redraw);
+bool ResetFoundPinsViasAndPads (bool save_undo, bool redraw);
+bool ResetConnections (bool save_undo, bool redraw);
 void InitConnectionLookup (void);
 void InitComponentLookup (void);
 void InitLayoutLookup (void);
diff --git a/src/hid/gtk/gui-netlist-window.c b/src/hid/gtk/gui-netlist-window.c
index 3d88554..30dfc80 100644
--- a/src/hid/gtk/gui-netlist-window.c
+++ b/src/hid/gtk/gui-netlist-window.c
@@ -516,14 +516,14 @@ netlist_select_cb (GtkWidget * widget, gpointer data)
     node_selected_net = NULL;
 
   InitConnectionLookup ();
-  ResetConnections (true);
+  ResetConnections (true, true);
 
   for (i = selected_net->EntryN, entry = selected_net->Entry; i; i--, entry++)
     if (SeekPad (entry, &conn, false))
       RatFindHook (conn.type, conn.ptr1, conn.ptr2, conn.ptr2, true);
 
   SelectConnection (select_flag);
-  ResetConnections (false);
+  ResetConnections (false, false);
   FreeConnectionLookupMemory ();
   IncrementUndoSerialNumber ();
   Draw ();
diff --git a/src/hid/lesstif/netlist.c b/src/hid/lesstif/netlist.c
index 906eda7..c7877ae 100644
--- a/src/hid/lesstif/netlist.c
+++ b/src/hid/lesstif/netlist.c
@@ -136,14 +136,14 @@ nbcb_select_common (LibraryMenuTypePtr net, int pos, int select_flag)
   int i;
 
   InitConnectionLookup ();
-  ResetConnections (true);
+  ResetConnections (true, true);
 
   for (i = net->EntryN, entry = net->Entry; i; i--, entry++)
     if (SeekPad (entry, &conn, false))
       RatFindHook (conn.type, conn.ptr1, conn.ptr2, conn.ptr2, true);
 
   SelectConnection (select_flag);
-  ResetConncetions (false);
+  ResetConncetions (false, false);
   FreeConnectionLookupMemory ();
   IncrementUndoSerialNumber ();
   Draw ();
diff --git a/src/rats.c b/src/rats.c
index 061f9aa..e4006a3 100644
--- a/src/rats.c
+++ b/src/rats.c
@@ -463,7 +463,7 @@ GatherSubnets (NetListTypePtr Netl, bool NoWarn, bool AndRats)
   for (m = 0; Netl->NetN > 0 && m < Netl->NetN; m++)
     {
       a = &Netl->Net[m];
-      ResetConnections (false);
+      ResetConnections (false, false);
       RatFindHook (a->Connection[0].type, a->Connection[0].ptr1,
 		   a->Connection[0].ptr2, a->Connection[0].ptr2, AndRats);
       /* now anybody connected to the first point has DRCFLAG set */
@@ -543,7 +543,7 @@ GatherSubnets (NetListTypePtr Netl, bool NoWarn, bool AndRats)
       if (!NoWarn)
 	Warned |= CheckShorts (a->Connection[0].menu);
     }
-  ResetConnections (false);
+  ResetConnections (false, false);
   return (Warned);
 }
 
diff --git a/src/report.c b/src/report.c
index 7ec0370..5dfb3d9 100644
--- a/src/report.c
+++ b/src/report.c
@@ -689,7 +689,7 @@ ReportAllNetLengths (int argc, char **argv, int x, int y)
       continue;
 
     got_one:
-      if (ResetConnections (true))
+      if (ResetConnections (true, true))
 	{
 	  IncrementUndoSerialNumber ();
 	  Draw ();
@@ -708,7 +708,7 @@ ReportNetLength (int argc, char **argv, int x, int y)
   char *netname = 0;
   int found = 0;
 
-  if (ResetConnections (true))
+  if (ResetConnections (true, true))
     {
       IncrementUndoSerialNumber ();
       Draw ();
diff --git a/src/select.c b/src/select.c
index 27a590b..0cfcf62 100644
--- a/src/select.c
+++ b/src/select.c
@@ -1015,7 +1015,7 @@ SelectObjectByName (int Type, char *Pattern, bool Flag)
   if (Type & NET_TYPE)
     {
       InitConnectionLookup ();
-      changed = ResetConnections (true) || changed;
+      changed = ResetConnections (true, true) || changed;
 
       MENU_LOOP (&PCB->NetlistLib);
       {
@@ -1035,7 +1035,7 @@ SelectObjectByName (int Type, char *Pattern, bool Flag)
       END_LOOP;
 
       changed = SelectConnection (Flag) || changed;
-      changed = ResetConnections (false) || changed;
+      changed = ResetConnections (false, false) || changed;
       FreeConnectionLookupMemory ();
     }
 
diff --git a/src/set.c b/src/set.c
index 25267d8..84c37f5 100644
--- a/src/set.c
+++ b/src/set.c
@@ -292,7 +292,7 @@ SetMode (int Mode)
       Crosshair.AttachedLine.State = STATE_FIRST;
       if (Mode == LINE_MODE && TEST_FLAG (AUTODRCFLAG, PCB))
 	{
-	  if (ResetConnections (true))
+	  if (ResetConnections (true, true))
 	    {
 	      IncrementUndoSerialNumber ();
 	      Draw ();
diff --git a/src/toporouter.c b/src/toporouter.c
index bfd494a..7b44ec4 100644
--- a/src/toporouter.c
+++ b/src/toporouter.c
@@ -2799,7 +2799,7 @@ void
 import_clusters(toporouter_t *r)
 {
   NetListListType nets;
-  ResetConnections (false);
+  ResetConnections (false, false);
   nets = CollectSubnets(false);
   NETLIST_LOOP(&nets);
   {
