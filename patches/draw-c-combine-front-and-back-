Bottom: 335652c037c611042518784cfbb9c4fadce8d782
Top:    a295c2070e66415932630202e8ccef10479ac374
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-04-23 15:49:07 +0100

draw.c: Combine front and back element and name callbacks

Pass an integer "side" parameter to determine which is desired


---

diff --git a/src/draw.c b/src/draw.c
index d6dce62..6f76cca 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -66,6 +66,7 @@ RCSID ("$Id$");
 #define	LARGE_TEXT_SIZE			3
 #define	N_TEXT_SIZES			4
 
+#define ON_SIDE(element, side) (TEST_FLAG (ONSOLDERFLAG, element) == (*side == SOLDER_LAYER))
 
 /* ---------------------------------------------------------------------------
  * some local identifiers
@@ -229,51 +230,32 @@ Redraw (bool ClearWindow, BoxTypePtr screen_area)
 }
 
 static int
-backE_callback (const BoxType * b, void *cl)
+element_callback (const BoxType * b, void *cl)
 {
   ElementTypePtr element = (ElementTypePtr) b;
+  int *side = cl;
 
-  if (!FRONT (element))
-    {
-      DrawElementPackage (element, 0);
-    }
+  if (ON_SIDE (element, side))
+    DrawElementPackage (element, 0);
   return 1;
 }
 
 static int
-backN_callback (const BoxType * b, void *cl)
+name_callback (const BoxType * b, void *cl)
 {
   TextTypePtr text = (TextTypePtr) b;
   ElementTypePtr element = (ElementTypePtr) text->Element;
+  int *side = cl;
 
-  if (!FRONT (element) && !TEST_FLAG (HIDENAMEFLAG, element))
+  if (TEST_FLAG (HIDENAMEFLAG, element))
+    return 0;
+
+  if (TEST_FLAG (ONSOLDERFLAG, element) == (*side == SOLDER_LAYER))
     DrawElementName (element, 0);
   return 0;
 }
 
 static int
-backPad_callback (const BoxType * b, void *cl)
-{
-  PadTypePtr pad = (PadTypePtr) b;
-
-  if (!FRONT (pad))
-    DrawPad (pad, 0);
-  return 1;
-}
-
-static int
-frontE_callback (const BoxType * b, void *cl)
-{
-  ElementTypePtr element = (ElementTypePtr) b;
-
-  if (FRONT (element))
-    {
-      DrawElementPackage (element, 0);
-    }
-  return 1;
-}
-
-static int
 EMark_callback (const BoxType * b, void *cl)
 {
   ElementTypePtr element = (ElementTypePtr) b;
@@ -283,17 +265,6 @@ EMark_callback (const BoxType * b, void *cl)
 }
 
 static int
-frontN_callback (const BoxType * b, void *cl)
-{
-  TextTypePtr text = (TextTypePtr) b;
-  ElementTypePtr element = (ElementTypePtr) text->Element;
-
-  if (FRONT (element) && !TEST_FLAG (HIDENAMEFLAG, element))
-    DrawElementName (element, 0);
-  return 0;
-}
-
-static int
 hole_callback (const BoxType * b, void *cl)
 {
   PinTypePtr pin = (PinTypePtr) b;
@@ -392,15 +363,13 @@ DrawEverything (BoxTypePtr drawn_area)
   if (!TEST_FLAG (CHECKPLANESFLAG, PCB)
       && gui->set_layer ("invisible", SL (INVISIBLE, 0), 0))
     {
-      r_search (PCB->Data->pad_tree, drawn_area, NULL, backPad_callback,
-		NULL);
+      side = SWAP_IDENT ? COMPONENT_LAYER : SOLDER_LAYER;
+      r_search (PCB->Data->pad_tree, drawn_area, NULL, pad_callback, &side);
       if (PCB->ElementOn)
 	{
-	  r_search (PCB->Data->element_tree, drawn_area, NULL, backE_callback,
-		    NULL);
-	  r_search (PCB->Data->name_tree[NAME_INDEX (PCB)], drawn_area, NULL,
-		    backN_callback, NULL);
-	  DrawLayer (&(PCB->Data->BACKSILKLAYER), drawn_area);
+	  r_search (PCB->Data->element_tree, drawn_area, NULL, element_callback, &side);
+	  r_search (PCB->Data->name_tree[NAME_INDEX (PCB)], drawn_area, NULL, name_callback, &side);
+	  DrawLayer (&(PCB->Data->Layer[max_copper_layer + side]), drawn_area);
 	}
     }
 
@@ -609,7 +578,9 @@ static int
 pad_callback (const BoxType * b, void *cl)
 {
   PadTypePtr pad = (PadTypePtr) b;
-  if (FRONT (pad))
+  int *side = cl;
+
+  if (TEST_FLAG (ONSOLDERFLAG, pad) == (*side == SOLDER_LAYER))
     DrawPad (pad, 0);
   return 1;
 }
@@ -620,12 +591,14 @@ pad_callback (const BoxType * b, void *cl)
 static void
 DrawTop (const BoxType * screen)
 {
+  int side = SWAP_IDENT ? SOLDER_LAYER : COMPONENT_LAYER;
+
   if (PCB->PinOn || doing_assy)
     {
       /* draw element pins */
       r_search (PCB->Data->pin_tree, screen, NULL, pin_callback, NULL);
       /* draw element pads */
-      r_search (PCB->Data->pad_tree, screen, NULL, pad_callback, NULL);
+      r_search (PCB->Data->pad_tree, screen, NULL, pad_callback, &side);
     }
   /* draw vias */
   if (PCB->ViaOn || doing_assy)
@@ -672,6 +645,7 @@ clearPad_callback (const BoxType * b, void *cl)
 static void
 DrawSilk (int new_swap, int layer, const BoxType * drawn_area)
 {
+  int side = new_swap ? SOLDER_LAYER : COMPONENT_LAYER;
 #if 0
   /* This code is used when you want to mask silk to avoid exposed
      pins and pads.  We decided it was a bad idea to do this
@@ -687,10 +661,8 @@ DrawSilk (int new_swap, int layer, const BoxType * drawn_area)
 #endif
       DrawLayer (LAYER_PTR (layer), drawn_area);
       /* draw package */
-      r_search (PCB->Data->element_tree, drawn_area, NULL, frontE_callback,
-		NULL);
-      r_search (PCB->Data->name_tree[NAME_INDEX (PCB)], drawn_area, NULL,
-		frontN_callback, NULL);
+      r_search (PCB->Data->element_tree, drawn_area, NULL, element_callback, &side);
+      r_search (PCB->Data->name_tree[NAME_INDEX (PCB)], drawn_area, NULL, name_callback, &side);
 #if 0
     }
 
@@ -704,10 +676,8 @@ DrawSilk (int new_swap, int layer, const BoxType * drawn_area)
       gui->use_mask (HID_MASK_AFTER);
       DrawLayer (LAYER_PTR (max_copper_layer + layer), drawn_area);
       /* draw package */
-      r_search (PCB->Data->element_tree, drawn_area, NULL, frontE_callback,
-		NULL);
-      r_search (PCB->Data->name_tree[NAME_INDEX (PCB)], drawn_area, NULL,
-		frontN_callback, NULL);
+      r_search (PCB->Data->element_tree, drawn_area, NULL, element_callback, &side);
+      r_search (PCB->Data->name_tree[NAME_INDEX (PCB)], drawn_area, NULL, name_callback, &side);
     }
   gui->use_mask (HID_MASK_OFF);
 #endif
