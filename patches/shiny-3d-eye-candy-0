Bottom: 0a2d11ad942b55c91feb27b01f535723334ee011
Top:    d5486e28749825934b60fbf04b412c8dd06886bd
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-07-24 16:03:06 +0100

Shiny 3D eye-candy

Experiments in progress - don't expect this to work yet!

Squashed:
  Fix grid extents in 3D view


---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index 992f3e3..6f8055a 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -112,6 +112,7 @@ hidgl_draw_grid (BoxType *drawn_area)
   static int npoints = 0;
   int x1, y1, x2, y2, n, i;
   double x, y;
+  extern float global_depth;
 
   if (!Settings.DrawGrid)
     return;
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 17359b0..c6f60dd 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -132,6 +132,19 @@ ghid_set_layer (const char *name, int group, int empty)
   end_subcomposite ();
   start_subcomposite ();
 
+  /* Drawing is already flushed by {start,end}_subcomposite */
+  if (group >= 0 && group < max_group) {
+    hidgl_set_depth ((max_group - group) * 10);
+  } else {
+    if (SL_TYPE (idx) == SL_SILK) {
+      if (SL_SIDE (idx) == SL_TOP_SIDE && !Settings.ShowSolderSide) {
+        hidgl_set_depth (max_group * 10 + 3);
+      } else {
+        hidgl_set_depth (10 - 3);
+      }
+    }
+  }
+
   if (idx >= 0 && idx < max_copper_layer + 2)
     {
       priv->trans_lines = true;
@@ -755,6 +768,7 @@ ghid_show_crosshair (gboolean paint_new_location)
   int vcd = VCD * gport->zoom;
   static int done_once = 0;
   static GdkColor cross_color;
+  extern float global_depth;
 
   if (!paint_new_location)
     return;
@@ -767,7 +781,7 @@ ghid_show_crosshair (gboolean paint_new_location)
     }
   x = gport->crosshair_x;
   y = gport->crosshair_y;
-  z = 0;
+  z = global_depth;
 
   glEnable (GL_COLOR_LOGIC_OP);
   glLogicOp (GL_XOR);
@@ -789,6 +803,7 @@ ghid_show_crosshair (gboolean paint_new_location)
   if (x >= 0 && paint_new_location && draw_markers)
     {
       glBegin (GL_QUADS);
+
       glVertex3i (SIDE_X (gport->view_x0),                            y - vcd,       z);
       glVertex3i (SIDE_X (gport->view_x0),                            y - vcd + vcw, z);
       glVertex3i (SIDE_X (gport->view_x0 + vcd),                      y - vcd + vcw, z);
@@ -1040,6 +1055,11 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
   hid_expose_callback (&ghid_hid, &region, 0);
   hidgl_flush_triangles (&buffer);
 
+  /* Just prod the drawing code so the current depth gets set to
+     the right value for the layer we are editing */
+  gui->set_layer (NULL, GetLayerGroupNumberByNumber (INDEXOFCURRENT), 0);
+  gui->end_layer ();
+
   ghid_draw_grid (&region);
 
   ghid_invalidate_current_gc ();
@@ -1511,8 +1531,8 @@ ghid_unproject_to_z_plane (int ex, int ey, int vz, int *vx, int *vy)
   mat[1][0] = last_modelview_matrix[0][1];
   mat[1][1] = last_modelview_matrix[1][1];
 
-//    if (determinant_2x2 (mat) < 0.00001)
-//      printf ("Determinant is quite small\n");
+  /*    if (determinant_2x2 (mat) < 0.00001)       */
+  /*      printf ("Determinant is quite small\n"); */
 
   invert_2x2 (mat, inv_mat);
 
diff --git a/src/hid/gtk/gui-output-events.c b/src/hid/gtk/gui-output-events.c
index 9e534f6..28d04e0 100644
--- a/src/hid/gtk/gui-output-events.c
+++ b/src/hid/gtk/gui-output-events.c
@@ -215,6 +215,10 @@ ghid_note_event_location (GdkEventButton * ev)
 {
   gint event_x, event_y;
   gboolean moved;
+  /* FIXME: IFDEF HACK */
+#ifdef ENABLE_GL
+  extern float global_depth; /* FIXME: REMOVE THIS HACK! */
+#endif
 
   if (!ev)
     {
@@ -230,7 +234,7 @@ ghid_note_event_location (GdkEventButton * ev)
   /* FIXME: IFDEF HACK */
 #ifdef ENABLE_GL
   /* Unproject event_x and event_y to world coordinates of the plane we are on */
-  ghid_unproject_to_z_plane (event_x, event_y, 0,
+  ghid_unproject_to_z_plane (event_x, event_y, global_depth,
                              &gport->pcb_x, &gport->pcb_y);
 #else
   gport->pcb_x = VIEW_X (event_x);
