Bottom: 0a31eab561b86f3700198ce8ae3eacd8d4aeb4a5
Top:    614291f180ab4e810246b72778e0e6ecb081dbd4
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-05-03 00:43:48 +0100

Use the stencil buffer more cleverly


---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index f220317..155c125 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -1000,6 +1000,8 @@ hidgl_stencil_bits (void)
   return stencil_bits;
 }
 
+int debug_stencil_clears = 0;
+
 static void
 hidgl_clean_unassigned_stencil (void)
 {
@@ -1009,6 +1011,7 @@ hidgl_clean_unassigned_stencil (void)
   glClearStencil (0);
   glClear (GL_STENCIL_BUFFER_BIT);
   glPopAttrib ();
+  debug_stencil_clears++;
 }
 
 int
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index bd40d90..a763a01 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1988,12 +1988,14 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
                      0, 0, 1, 0,
                      0, 0, 0, 1};
   bool horizon_problem = false;
+  extern int debug_stencil_clears;
 
   ghid_start_drawing (port);
 
   hidgl_in_context (true);
   hidgl_init ();
   check_gl_drawing_ok_hack = true;
+  debug_stencil_clears = 0;
 
   /* If we don't have any stencil bits available,
      we can't use the hidgl polygon drawing routine */
