Bottom: d9b7ac08f9ddc210fc611ff1287b2dd9f4a3c117
Top:    0c51e2f96e2dfe5f331bf68ab1fc50593cdacb63
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2014-06-05 18:44:23 +0100

Add cache for board-outline

This adds a cache of the board outline, to improve rendering speed
when plotting the board with an outline.

The cache is invalidated when the "outline" or "route" layer is
updated. We catch this by bodging the ClearFromPolygon() routine,
which is called for almost all layer geometry changes which might
affect us.

XXX: We really need to add a nicer place to be notified of board
layer changes!


---

diff --git a/src/global.h b/src/global.h
index 8103d1d..a4d28ed 100644
--- a/src/global.h
+++ b/src/global.h
@@ -399,6 +399,8 @@ typedef struct			/* holds all objects */
   struct PCBType *pcb;
   LayerType Layer[MAX_LAYER + 2];	/* add 2 silkscreen layers */
   int polyClip;
+  POLYAREA *outline;
+  bool outline_valid;
 } DataType;
 
 typedef struct			/* holds drill information */
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 52ac73e..dc2f783 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1362,14 +1362,22 @@ GhidDrawMask (int side, BoxType * screen)
   gui->graphics->set_color (out->fgGC, PCB->MaskColor);
   ghid_set_alpha_mult (out->fgGC, thin ? 0.35 : 1.0);
 
-  polygon.Clipped = board_outline_poly ();
+  if (!PCB->Data->outline_valid) {
+
+    if (PCB->Data->outline != NULL)
+      poly_Free (&PCB->Data->outline);
+
+    PCB->Data->outline = board_outline_poly ();
+    PCB->Data->outline_valid = true;
+  }
+
+  polygon.Clipped = PCB->Data->outline;
   polygon.NoHoles = NULL;
   polygon.NoHolesValid = 0;
   polygon.BoundingBox = *screen;
   polygon.Flags = NoFlags ();
   SET_FLAG (FULLPOLYFLAG, &polygon);
   common_fill_pcb_polygon (out->fgGC, &polygon, screen);
-  poly_Free (&polygon.Clipped);
   poly_FreeContours (&polygon.NoHoles);
   /* THE GL fill_pcb_polygon doesn't work whilst masking */
 //  gui->fill_pcb_polygon (out->fgGC, &polygon, screen);
diff --git a/src/mymem.c b/src/mymem.c
index b6b3c30..3c873cf 100644
--- a/src/mymem.c
+++ b/src/mymem.c
@@ -699,6 +699,9 @@ FreeDataMemory (DataType *data)
   if (data == NULL)
     return;
 
+  if (data->outline)
+    poly_Free (&data->outline);
+
   VIA_LOOP (data);
   {
     free (via->Name);
diff --git a/src/polygon.c b/src/polygon.c
index 99b4c8b..17c7f5e 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -1645,6 +1645,16 @@ ClearFromPolygon (DataType * Data, int type, void *ptr1, void *ptr2)
   if (!Data->polyClip)
     return;
 
+  /* XXX: HACK, this is a kludgy place to put a check for recomputing our outline */
+  if (type == LINE_TYPE || type == ARC_TYPE)
+    {
+      LayerType *layer = (LayerType *) ptr1;
+
+      if (strcmp (layer->Name, "outline") == 0 ||
+          strcmp (layer->Name, "route") == 0)
+        Data->outline_valid = false;
+    }
+
   if (type == POLYGON_TYPE)
     InitClip (PCB->Data, (LayerType *) ptr1, (PolygonType *) ptr2);
   else
