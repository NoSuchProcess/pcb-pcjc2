Bottom: f77f63c5974266824695c658fd2d499fb3bcc46b
Top:    71b04bc02df5d2f573f0e6d6864b5765cd63a605
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-12-16 00:04:01 +0000

Add a hacky name-mangling thingy for loading boards













---

diff --git a/src/create.c b/src/create.c
index a199acc..76ecb98 100644
--- a/src/create.c
+++ b/src/create.c
@@ -37,6 +37,7 @@
 #include <memory.h>
 #include <setjmp.h>
 #include <stdlib.h>
+#include <stdio.h>
 
 #include "global.h"
 
@@ -55,6 +56,8 @@
 #include "undo.h"
 #include "vendor.h"
 
+#include <glib.h>
+
 #ifdef HAVE_LIBDMALLOC
 #include <dmalloc.h>
 #endif
@@ -662,6 +665,57 @@ CreateNewHoleInPolygon (PolygonType *Polygon)
   return Polygon;
 }
 
+static char *refdes_map_file = "refdes.map";
+static GHashTable *refdes_map_table = NULL;
+
+void RefdesMapInit (void)
+{
+  FILE *mapfile;
+  char *from = NULL;
+  char *to = NULL;
+
+  refdes_map_table = g_hash_table_new_full (g_str_hash, g_str_equal,
+                                            g_free, g_free);
+
+  if (refdes_map_file == NULL)
+    return;
+
+  printf ("Refdes map file %s\n", refdes_map_file);
+
+  mapfile = fopen (refdes_map_file, "rb");
+
+  if (mapfile == NULL) {
+    fprintf(stderr, "Could not open [%s]\n", refdes_map_file);
+    return;
+  }
+
+  while (!feof(mapfile) && !ferror(mapfile)) {
+    free (from);
+    free (to);
+
+    from = NULL;
+    to = NULL;
+
+    fscanf (mapfile, "%ms %ms\n", &from, &to);
+
+    if (from == NULL || to == NULL)
+      continue;
+
+    g_hash_table_insert (refdes_map_table, g_strdup (from), g_strdup (to));
+
+    printf ("Stashing rename command: %s to %s\n", from, to);
+  }
+
+  free (to);
+  free (from);
+}
+
+
+char *RefdesMapMap (char *from)
+{
+  return g_hash_table_lookup (refdes_map_table, from);
+}
+
 /* ---------------------------------------------------------------------------
  * creates an new element
  * memory is allocated if needed
@@ -678,6 +732,18 @@ CreateNewElement (DataTypePtr Data, ElementTypePtr Element,
   printf("Entered CreateNewElement.....\n");
 #endif
 
+  /* HACK: Mapping between refdes */
+  if (NameOnPCB != NULL) {
+    char *to;
+    to = RefdesMapMap (NameOnPCB);
+    if (to != NULL) {
+//      free (NameOnPCB);
+      printf ("Mapping name from %s to %s\n", NameOnPCB, to);
+      NameOnPCB = malloc (sizeof (char) * (strlen (to) + 1));
+      strcpy (NameOnPCB, to);
+    }
+  }
+
   if (!Element)
     Element = GetElementMemory (Data);
 
diff --git a/src/create.h b/src/create.h
index ccab272..6c74228 100644
--- a/src/create.h
+++ b/src/create.h
@@ -63,6 +63,7 @@ PolygonTypePtr CreateNewPolygon (LayerTypePtr, FlagType);
 PointTypePtr CreateNewPointInPolygon (PolygonTypePtr,
 				      Coord, Coord);
 PolygonType *CreateNewHoleInPolygon (PolygonType *polygon);
+void RefdesMapInit (void);
 ElementTypePtr CreateNewElement (DataTypePtr, ElementTypePtr,
 				 FontTypePtr, FlagType, char *, char *,
 				 char *, Coord, Coord, BYTE,
diff --git a/src/file.c b/src/file.c
index 501b735..dd543aa 100644
--- a/src/file.c
+++ b/src/file.c
@@ -409,6 +409,9 @@ real_load_pcb (char *Filename, bool revert)
   /* mark the default font invalid to know if the file has one */
   newPCB->Font.Valid = false;
 
+  /* Hack, load the mapping file */
+  RefdesMapInit ();
+
   /* new data isn't added to the undo list */
   if (!ParsePCB (PCB, new_filename))
     {
