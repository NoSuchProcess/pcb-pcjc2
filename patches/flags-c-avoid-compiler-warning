Bottom: 8ab05755f359a7795fcb7a5a793866cad03d1855
Top:    2af77d22bdea44f7c9674ec722530d8ab6de44c2
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-09 18:13:45 +0000

flags.c: Avoid compiler warning when casting our OffsetOf value

Strictly, our OffsetOf calculation "could" return a number as large as the
pointer size on the system - so the compiler will complain when we squash
it directly into an int. Casting via a size_t will avoid the warning.

We know our structure offsets are small, so this is safe - if somewhat ugly.


---

diff --git a/src/flags.c b/src/flags.c
index c33cfb6..499e59e 100644
--- a/src/flags.c
+++ b/src/flags.c
@@ -163,7 +163,12 @@ FlagLayerActive (int n)
   return current_layer == n;
 }
 
-#define OffsetOf(a,b) (int)(&(((a *)0)->b))
+/* The cast to (int) is ONLY valid because we know we are
+ * taking offsets on structures where the offset will fit
+ * in an integer variable. It silences compile warnings on
+ * 64bit machines.
+ */
+#define OffsetOf(a,b) (int)(size_t)(&(((a *)0)->b))
 
 HID_Flag flags_flag_list[] = {
   {"style", FlagCurrentStyle, 0},
