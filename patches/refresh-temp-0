Bottom: af9ca868b653d2f9a158c108a259e6aa1fdad9d1
Top:    751a8c1619b9d04d9eef78abf5f0c8c0805ef72b
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-11-12 01:09:18 +0000

Refresh of speed-up-initial-clipping-pour

---

diff --git a/src/pour.c b/src/pour.c
index cea5f75..737cffa 100644
--- a/src/pour.c
+++ b/src/pour.c
@@ -67,6 +67,8 @@ RCSID ("$Id$");
 #define ROUND(x) ((long)(((x) >= 0 ? (x) + 0.5  : (x) - 0.5)))
 
 #define UNSUBTRACT_BLOAT 100
+#define SUBTRACT_PIN_VIA_BATCH_SIZE 100
+#define SUBTRACT_LINE_BATCH_SIZE 20
 
 /* ---------------------------------------------------------------------------
  * local prototypes
@@ -459,13 +461,22 @@ struct cpInfo
   POLYAREA *pg;
   BoxType *region;
   POLYAREA *accumulate;
+  int batch_size;
   jmp_buf env;
 };
 
+static void
+subtract_accumulated (struct cpInfo *info)
+{
+  if (subtract_poly (info->accumulate, &info->pg) < 0)
+    longjmp (info->env, 1);
+  info->accumulate = NULL;
+  info->batch_size = 0;
+}
+
 static int
 pin_sub_callback (const BoxType * b, void *cl)
 {
-  static int counter = 0;
   PinTypePtr pin = (PinTypePtr) b;
   struct cpInfo *info = (struct cpInfo *) cl;
   POLYAREA *np;
@@ -479,15 +490,10 @@ pin_sub_callback (const BoxType * b, void *cl)
     return 0;
 
   unite_poly (np, &info->accumulate);
-  counter ++;
+  info->batch_size ++;
 
-  if (counter == 100)
-    {
-      counter = 0;
-      if (subtract_poly (info->accumulate, &info->pg) < 0)
-        longjmp (info->env, 1);
-      info->accumulate = NULL;
-    }
+  if (info->batch_size == SUBTRACT_PIN_VIA_BATCH_SIZE)
+    subtract_accumulated (info);
 
   return 1;
 }
@@ -539,7 +545,6 @@ pad_sub_callback (const BoxType * b, void *cl)
 static int
 line_sub_callback (const BoxType * b, void *cl)
 {
-  static int counter = 0;
   LineTypePtr line = (LineTypePtr) b;
   struct cpInfo *info = (struct cpInfo *) cl;
   POLYAREA *np;
@@ -555,15 +560,10 @@ line_sub_callback (const BoxType * b, void *cl)
     return 0;
 
   unite_poly (np, &info->accumulate);
-  counter ++;
+  info->batch_size ++;
 
-  if (counter == 100)
-    {
-      counter = 0;
-      if (subtract_poly (info->accumulate, &info->pg) < 0)
-        longjmp (info->env, 1);
-      info->accumulate = NULL;
-    }
+  if (info->batch_size == SUBTRACT_LINE_BATCH_SIZE)
+    subtract_accumulated (info);
 
   return 1;
 }
@@ -666,13 +666,13 @@ ClearPour (DataTypePtr Data, LayerTypePtr Layer, PourType * pour,
     {
       r = 0;
       info.accumulate = NULL;
+      info.batch_size = 0;
       if (info.solder || group == Group (Data, max_layer + COMPONENT_LAYER))
         r += r_search (Data->pad_tree, &region, NULL, pad_sub_callback, &info);
       GROUP_LOOP (Data, group);
       {
         r += r_search (layer->line_tree, &region, NULL, line_sub_callback, &info);
-        subtract_poly (info.accumulate, &info.pg);
-        info.accumulate = NULL;
+        subtract_accumulated (&info);
         r += r_search (layer->arc_tree,  &region, NULL, arc_sub_callback,  &info);
         r += r_search (layer->text_tree, &region, NULL, text_sub_callback, &info);
         r += r_search (layer->pour_tree, &region, NULL, pour_sub_callback, &info);
@@ -680,8 +680,7 @@ ClearPour (DataTypePtr Data, LayerTypePtr Layer, PourType * pour,
       END_LOOP;
       r += r_search (Data->via_tree, &region, NULL, pin_sub_callback, &info);
       r += r_search (Data->pin_tree, &region, NULL, pin_sub_callback, &info);
-      subtract_poly (info.accumulate, &info.pg);
-      info.accumulate = NULL;
+      subtract_accumulated (&info);
     }
 
   *pg = info.pg;
