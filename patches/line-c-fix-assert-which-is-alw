Bottom: 9d0247542acec3eb5a3af45d21eddd0cea7af3e9
Top:    c85dffb55db52a96c2e6c2bc56379108f332c59a
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2011-07-24 00:35:24 +0100

line.c: Fix a bogus compiler warning regarding a (X + c) >= X being always true.

line.c: In function ‘EnforceLineDRC’:
line.c:491:7: warning: assuming signed overflow does not occur when assuming that (X + c) >= X is always true [-Wstrict-overflow]

It would appear that gcc (4.6.1-5ubuntu1) is identifying the conditional
portions of INDEXOFCURRENT which would always evaluate a particular way
if a given condition is met. It is "probably" safe to assume that this
warning manifests due to gcc considering each portion of the INDEXOFCURRENT
definition in turn.

It appears we can avoid this particular warning by temporarily assigning
INDEXOFCURRENT into a variable before we test with it.


---

diff --git a/src/line.c b/src/line.c
index 0411afc..7da09dc 100644
--- a/src/line.c
+++ b/src/line.c
@@ -487,9 +487,13 @@ EnforceLineDRC (void)
   bool shift;
   float r1, r2;
 
+  /* Silence a bogus compiler warning by storing this in a variable */
+  int layer_idx = INDEXOFCURRENT;
+
   if ( gui->mod1_is_pressed() || gui->control_is_pressed () || PCB->RatDraw
-      || INDEXOFCURRENT >= max_copper_layer)
+      || layer_idx >= max_copper_layer)
     return;
+
   rs.X = r45.X = Crosshair.X;
   rs.Y = r45.Y = Crosshair.Y;
   /* first try starting straight */
