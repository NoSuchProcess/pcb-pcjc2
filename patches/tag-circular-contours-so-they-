Bottom: ec49da224a3c2f413a149fb1d081ea865eff6f26
Top:    236ebb54af7ab786f14902be114c9cdd18493ee9
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-11-04 17:49:33 +0000

Tag circular contours so they can be drawn quicker


---

diff --git a/src/hid/common/hidgl.c b/src/hid/common/hidgl.c
index 54c2b3b..76953d1 100644
--- a/src/hid/common/hidgl.c
+++ b/src/hid/common/hidgl.c
@@ -602,10 +602,25 @@ do_hole (const BoxType *b, void *cl)
 {
   struct do_hole_info *info = cl;
   PLINE *curc = (PLINE *) b;
+
   /* Ignore the outer contour - we draw it first explicitly*/
   if (curc->Flags.orient == PLF_DIR) {
     return 0;
   }
+
+  /* If the contour is round, and hidgl_fill_circle would use
+   * less slices than we have vertices to draw it, then call
+   * hidgl_fill_circle to draw this contour.
+   */
+  if (curc->is_round) {
+    double slices = M_PI * 2 * curc->radius /
+                    info->scale / PIXELS_PER_CIRCLINE;
+    if (slices < curc->Count) {
+      hidgl_fill_circle (curc->cx, curc->cy, curc->radius, info->scale);
+      return 1;
+    }
+  }
+
   tesselate_contour (info->tobj, &curc->head, info->vertices);
   return 1;
 }
diff --git a/src/polyarea.h b/src/polyarea.h
index 6652fce..958498b 100644
--- a/src/polyarea.h
+++ b/src/polyarea.h
@@ -99,6 +99,10 @@ struct PLINE
     unsigned int Count;
     double area;
     rtree_t *tree;
+    int is_round;
+    int cx;
+    int cy;
+    int radius;
     struct {
       unsigned int status:3;
       unsigned int orient:1;
diff --git a/src/polygon.c b/src/polygon.c
index 0c8c0cb..22a976c 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -358,6 +358,10 @@ CirclePoly (LocationType x, LocationType y, BDimension radius)
   if ((contour = poly_NewContour (v)) == NULL)
     return NULL;
   frac_circle (contour, x, y, v, 1);
+  contour->is_round = TRUE;
+  contour->cx = x;
+  contour->cy = y;
+  contour->radius = radius;
   return ContourToPoly (contour);
 }
 
diff --git a/src/polygon1.c b/src/polygon1.c
index d27c255..1f5162a 100644
--- a/src/polygon1.c
+++ b/src/polygon1.c
@@ -1872,6 +1872,10 @@ poly_IniContour (PLINE * c)
   c->head.next = c->head.prev = &c->head;
   c->xmin = c->ymin = 0x7fffffff;
   c->xmax = c->ymax = 0x80000000;
+  c->is_round = FALSE;
+  c->cx = 0;
+  c->cy = 0;
+  c->radius = 0;
 }
 
 PLINE *
