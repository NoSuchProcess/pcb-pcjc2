Bottom: 3159dd6d8df231eeff5eec88274679b7afd5f91a
Top:    503b8d85341e58292dcaa7af38191083b414ee5d
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-12-02 14:03:45 +0000

Move polygon->Clipped test out of draw.c and into the HID implementations

This keeps draw.c more consistent between object types.


---

diff --git a/src/draw.c b/src/draw.c
index 4a28844..a2e86a8 100644
--- a/src/draw.c
+++ b/src/draw.c
@@ -794,9 +794,6 @@ poly_callback (const BoxType * b, void *cl)
   struct poly_info *i = cl;
   PolygonType *polygon = (PolygonType *)b;
 
-  if (!polygon->Clipped)
-    return 0;
-
   set_layer_object_color (i->layer, (AnyObjectType *) polygon);
 
   gui->graphics->draw_pcb_polygon (Output.fgGC, polygon, i->drawn_area);
diff --git a/src/hid/common/draw_helpers.c b/src/hid/common/draw_helpers.c
index 9ea5094..bf374ee 100644
--- a/src/hid/common/draw_helpers.c
+++ b/src/hid/common/draw_helpers.c
@@ -259,6 +259,9 @@ should_compute_no_holes (PolygonType *poly, const BoxType *clip_box)
 void
 common_gui_draw_pcb_polygon (hidGC gc, PolygonType *polygon, const BoxType *clip_box)
 {
+  if (polygon->Clipped == NULL)
+    return;
+
   if (TEST_FLAG (THINDRAWFLAG, PCB) || TEST_FLAG (THINDRAWPOLYFLAG, PCB))
     gui->graphics->thindraw_pcb_polygon (gc, polygon, clip_box);
   else
@@ -279,6 +282,9 @@ common_gui_draw_pcb_polygon (hidGC gc, PolygonType *polygon, const BoxType *clip
 void
 common_fill_pcb_polygon (hidGC gc, PolygonType *poly, const BoxType *clip_box)
 {
+  if (poly->Clipped == NULL)
+    return;
+
   if (!poly->NoHolesValid)
     {
       /* If enough of the polygon is on-screen, compute the entire
@@ -328,6 +334,9 @@ void
 common_thindraw_pcb_polygon (hidGC gc, PolygonType *poly,
                              const BoxType *clip_box)
 {
+  if (poly->Clipped == NULL)
+    return;
+
   thindraw_contour (gc, poly->Clipped->contours);
   PolygonHoles (poly, clip_box, thindraw_hole_cb, gc);
 }
