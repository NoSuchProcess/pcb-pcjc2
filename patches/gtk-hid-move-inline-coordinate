Bottom: 40162b03f0d0298c368821e998f6b7b54781a942
Top:    cb5bb38f6bb0038b16a928ec5f6765a8e05b5dd3
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2009-04-06 00:01:16 +0100

GTK HID: Move inline coordinate conversions from gtkhid-main.c to gui.h

This allows other source files easy access to the routines
Vx(), Vy(), Vz() and Px(), Py, Pz().


---

diff --git a/src/hid/gtk/gtkhid-main.c b/src/hid/gtk/gtkhid-main.c
index abf0b3c..c27f857 100644
--- a/src/hid/gtk/gtkhid-main.c
+++ b/src/hid/gtk/gtkhid-main.c
@@ -58,71 +58,17 @@ int ghid_flip_x = 0, ghid_flip_y = 0;
 
 /* ------------------------------------------------------------ */
 
-/* Px converts view->pcb, Vx converts pcb->view */
-      
-static inline int 
-Vx (int x)
-{     
-  int rv;
-  if (ghid_flip_x) 
-    rv = (PCB->MaxWidth - x - gport->view_x0) / gport->zoom + 0.5;
-  else
-    rv = (x - gport->view_x0) / gport->zoom + 0.5;
-  return rv;
-}       
-      
 static inline int 
 Vx2 (int x)
 {     
   return (x - gport->view_x0) / gport->zoom + 0.5;
 }       
-      
-static inline int
-Vy (int y)
-{         
-  int rv;
-  if (ghid_flip_y)
-    rv = (PCB->MaxHeight - y - gport->view_y0) / gport->zoom + 0.5;
-  else
-    rv = (y - gport->view_y0) / gport->zoom + 0.5;
-  return rv;
-}     
         
 static inline int 
 Vy2 (int y)
 {     
   return (y - gport->view_y0) / gport->zoom + 0.5;
 }       
-      
-static inline int
-Vz (int z)
-{           
-  return z / gport->zoom + 0.5;
-}         
-                
-static inline int
-Px (int x)
-{  
-  int rv = x * gport->zoom + gport->view_x0;
-  if (ghid_flip_x)
-    rv = PCB->MaxWidth - (x * gport->zoom + gport->view_x0);
-  return  rv;
-}  
-
-static inline int
-Py (int y)
-{  
-  int rv = y * gport->zoom + gport->view_y0;
-  if (ghid_flip_y)
-    rv = PCB->MaxHeight - (y * gport->zoom + gport->view_y0);
-  return  rv;
-}  
-
-static inline int  
-Pz (int z)
-{
-  return (z * gport->zoom);
-}
 
 /* ------------------------------------------------------------ */
 
diff --git a/src/hid/gtk/gui.h b/src/hid/gtk/gui.h
index c94c2a3..7a46672 100644
--- a/src/hid/gtk/gui.h
+++ b/src/hid/gtk/gui.h
@@ -539,4 +539,59 @@ extern GdkPixmap *XC_hand_source, *XC_hand_mask;
 extern GdkPixmap *XC_lock_source, *XC_lock_mask;
 extern GdkPixmap *XC_clock_source, *XC_clock_mask;
 
+
+/* Coordinate conversions */
+/* Px converts view->pcb, Vx converts pcb->view */
+static inline int
+Vx (int x)
+{
+  int rv;
+  if (ghid_flip_x)
+    rv = (PCB->MaxWidth - x - gport->view_x0) / gport->zoom + 0.5;
+  else
+    rv = (x - gport->view_x0) / gport->zoom + 0.5;
+  return rv;
+}
+
+static inline int
+Vy (int y)
+{
+  int rv;
+  if (ghid_flip_y)
+    rv = (PCB->MaxHeight - y - gport->view_y0) / gport->zoom + 0.5;
+  else
+    rv = (y - gport->view_y0) / gport->zoom + 0.5;
+  return rv;
+}
+
+static inline int
+Vz (int z)
+{
+  return z / gport->zoom + 0.5;
+}
+
+static inline int
+Px (int x)
+{
+  int rv = x * gport->zoom + gport->view_x0;
+  if (ghid_flip_x)
+    rv = PCB->MaxWidth - (x * gport->zoom + gport->view_x0);
+  return  rv;
+}
+
+static inline int
+Py (int y)
+{
+  int rv = y * gport->zoom + gport->view_y0;
+  if (ghid_flip_y)
+    rv = PCB->MaxHeight - (y * gport->zoom + gport->view_y0);
+  return  rv;
+}
+
+static inline int
+Pz (int z)
+{
+  return (z * gport->zoom);
+}
+
 #endif /* __GHID_INCLUDED__  */
