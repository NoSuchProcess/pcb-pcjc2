Bottom: f22565275260c42d273d71cac7aafe787657b348
Top:    98b6b610fdd5b7371afd0bb0864cd7078ed826bc
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2008-10-10 11:17:57 +0100

Make pieces of a clipped polygon a distinct object type


---

diff --git a/src/Makefile.am b/src/Makefile.am
index 6a98d3a..6a482c0 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -104,6 +104,8 @@ PCB_SRCS = \
 	polygon.h \
 	polygon1.c \
 	polyarea.h \
+	pour.c \
+	pour.h \
 	puller.c \
 	print.c \
 	print.h \
diff --git a/src/create.c b/src/create.c
index bbfd52f..d5ea0c9 100644
--- a/src/create.c
+++ b/src/create.c
@@ -605,6 +605,7 @@ CreateNewPolygon (LayerTypePtr Layer, FlagType Flags)
   polygon->Clipped = NULL;
   polygon->NoHoles = NULL;
   polygon->NoHolesValid = 0;
+  polygon->Parent = NULL;
   return (polygon);
 }
 
diff --git a/src/global.h b/src/global.h
index 7763c80..d1e7368 100644
--- a/src/global.h
+++ b/src/global.h
@@ -198,16 +198,28 @@ typedef struct
   void *Element;
 } TextType, *TextTypePtr;
 
+typedef struct			/* holds information about a polygon piece */
+{
+  ANYOBJECTFIELDS;
+  PLINE *contours;
+//  POLYAREA *NoHoles;
+//  POlyAREA *NoHolesValid;
+} PolygonPieceType, *PolygonPieceTypePtr;
+
+
 typedef struct			/* holds information about a polygon */
 {
   ANYOBJECTFIELDS;
-  Cardinal PointN,		/* number of points in polygon */
-    PointMax;			/* max number from malloc() */
-  POLYAREA *Clipped;		/* the clipped region of this polygon */
+  PolygonPieceTypePtr Pieces;
+//  rtree_t *pieces_tree;		/* r_tree for pieces */
+  Cardinal PiecesN;		/* number of pieces */
+  Cardinal PiecesMax;		/* max number from malloc() */
+//  POLYAREA *Clipped;		/* the clipped region of this polygon */
   POLYAREA *NoHoles;		/* the polygon broken into hole-less regions */
   int NoHolesValid;		/* Is the NoHoles polygon up to date? */
   PointTypePtr Points;		/* data */
-} PolygonType, *PolygonTypePtr;
+  PolygonTypePtr *Parent;	/* The parent polygon which defined us */
+};
 
 typedef struct			/* holds information about arcs */
 {
diff --git a/src/macro.h b/src/macro.h
index 819d202..5bae417 100644
--- a/src/macro.h
+++ b/src/macro.h
@@ -391,6 +391,13 @@ extern int mem_any_set (unsigned char *, int);
 	{						\
 		text = &(layer)->Text[n]
 
+#define	POUR_LOOP(layer) do {			\
+	Cardinal		n;			\
+	PolygonTypePtr	pour;			\
+	for (n = (layer)->PourN-1; n != -1; n--)	\
+	{						\
+		pour = &(layer)->Pour[n]
+
 #define	POLYGON_LOOP(layer) do {			\
 	Cardinal		n;			\
 	PolygonTypePtr	polygon;			\
diff --git a/src/mymem.c b/src/mymem.c
index ffa4dad..fba0715 100644
--- a/src/mymem.c
+++ b/src/mymem.c
@@ -399,6 +399,35 @@ GetTextMemory (LayerTypePtr Layer)
 }
 
 /* ---------------------------------------------------------------------------
+ * get next slot for a pour polygon object, allocates memory if necessary
+ */
+PolygonTypePtr
+GetPourMemory (LayerTypePtr Layer)
+{
+  PolygonTypePtr pour = Layer->Pour;
+
+  /* realloc new memory if necessary and clear it */
+  if (Layer->PourN >= Layer->PourMax)
+    {
+      Layer->PourMax += STEP_POUR;
+//      if (Layer->polygon_tree)
+//	r_destroy_tree (&Layer->polygon_tree);
+      pour = MyRealloc (pour, Layer->PourMax * sizeof (PolygonType),
+			   "GetPourMemory()");
+      Layer->Pour = pour;
+      memset (pour + Layer->PourN, 0,
+	      STEP_POUR * sizeof (PolygonType));
+//      Layer->polygon_tree = r_create_tree (NULL, 0, 0);
+//      POLYGON_LOOP (Layer);
+//      {
+//	r_insert_entry (Layer->polygon_tree, (BoxType *) polygon, 0);
+//      }
+//      END_LOOP;
+    }
+  return (pour + Layer->PourN++);
+}
+
+/* ---------------------------------------------------------------------------
  * get next slot for a polygon object, allocates memory if necessary
  */
 PolygonTypePtr
@@ -903,6 +932,12 @@ FreeDataMemory (DataTypePtr Data)
 	  }
 	  END_LOOP;
 	  MYFREE (layer->Polygon);
+	  POUR_LOOP (layer);
+	  {
+	    FreePolygonMemory (pour);
+	  }
+	  END_LOOP;
+	  MYFREE (layer->Pour);
 	  if (layer->line_tree)
 	    r_destroy_tree (&layer->line_tree);
 	  if (layer->arc_tree)
diff --git a/src/mymem.h b/src/mymem.h
index b9d4de1..bbcaec4 100644
--- a/src/mymem.h
+++ b/src/mymem.h
@@ -56,6 +56,7 @@
 #define	STEP_SELECTORENTRY	128
 #define	STEP_REMOVELIST		500
 #define	STEP_UNDOLIST		500
+#define	STEP_POUR		10
 #define	STEP_POLYGON		10
 #define	STEP_POLYGONPOINT	10
 #define	STEP_LIBRARYMENU	10
