Bottom: 9809e2c20a28c52e97c1cfbeaa8a00339ca3a4ba
Top:    28ef4c26e1189bf501da6a3156c19db3b404285e
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-09-10 15:55:51 +0100

Crazy stuff


---

diff --git a/src/hid/gtk/gtkhid-gdk.c b/src/hid/gtk/gtkhid-gdk.c
index 4ae8242..f83b3d0 100644
--- a/src/hid/gtk/gtkhid-gdk.c
+++ b/src/hid/gtk/gtkhid-gdk.c
@@ -71,44 +71,46 @@ hid_gc_struct;
 int
 ghid_set_layer (const char *name, int group, int empty)
 {
-  int idx = group;
-  if (idx >= 0 && idx < max_group)
+  if (group >= 0 && group < max_group)
     {
-      int n = PCB->LayerGroups.Number[group];
-      for (idx = 0; idx < n-1; idx ++)
+      int layer_idx;
+      int entry;
+      for (entry = 0; entry < PCB->LayerGroups.Number[group]; entry ++)
 	{
-	  int ni = PCB->LayerGroups.Entries[group][idx];
-	  if (ni >= 0 && ni < max_copper_layer + 2
-	      && PCB->Data->Layer[ni].On)
-	    break;
+	  layer_idx = PCB->LayerGroups.Entries[group][entry];
+	  /* Only return TRUE for visible non-silk layers.
+	   * NB: Silk layers ocupy layer_idx
+	   * max_copper_layer and max_copper_layer + 1
+	   */
+	  if (layer_idx >= 0 && layer_idx < max_copper_layer &&
+	      PCB->Data->Layer[layer_idx].On)
+	    return TRUE;
 	}
-      idx = PCB->LayerGroups.Entries[group][idx];
+      return FALSE;
     }
 
-  if (idx >= 0 && idx < max_copper_layer + 2)
-    return /*pinout ? 1 : */ PCB->Data->Layer[idx].On;
-  if (idx < 0)
+  /* If we didn't hit a match above, group is being used as a
+     special symbolic layer type, and will be negative. */
+
+  switch (SL_TYPE (group))
     {
-      switch (SL_TYPE (idx))
-	{
-	case SL_INVISIBLE:
-	  return /* pinout ? 0 : */ PCB->InvisibleObjectsOn;
-	case SL_MASK:
-	  if (SL_MYSIDE (idx) /*&& !pinout */ )
-	    return TEST_FLAG (SHOWMASKFLAG, PCB);
-	  return 0;
-	case SL_SILK:
-	  if (SL_MYSIDE (idx) /*|| pinout */ )
-	    return PCB->ElementOn;
-	  return 0;
-	case SL_ASSY:
-	  return 0;
-	case SL_PDRILL:
-	case SL_UDRILL:
-	  return 1;
-	case SL_RATS:
-	  return PCB->RatOn;
-	}
+    case SL_INVISIBLE:
+      return /* pinout ? 0 : */ PCB->InvisibleObjectsOn;
+    case SL_MASK:
+      if (SL_MYSIDE (idx) /*&& !pinout */ )
+        return TEST_FLAG (SHOWMASKFLAG, PCB);
+      return 0;
+    case SL_SILK:
+      if (SL_MYSIDE (idx) /*|| pinout */ )
+        return PCB->ElementOn;
+      return 0;
+    case SL_ASSY:
+      return 0;
+    case SL_PDRILL:
+    case SL_UDRILL:
+      return 1;
+    case SL_RATS:
+      return PCB->RatOn;
     }
   return 0;
 }
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index 0edaa38..9612429 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -1616,20 +1616,36 @@ ghid_draw_everything (BoxTypePtr drawn_area)
   max_phys_group = MAX (solder_group, component_group);
 
   memset (do_group, 0, sizeof (do_group));
-  for (ngroups = 0, i = 0; i < max_group; i++) {
-    int group;
-    int orderi;
-
-    orderi = reverse_layers ? max_group - i - 1 : i;
+  if (global_view_2d)
+    { // Draw in layer stack order when in 2D view
+      int group;
+      int orderi;
+      for (ngroups = 0, i = 0; i < max_copper_layer; i++)
+        {
+          group = GetLayerGroupNumberByNumber (LayerStack[i]);
 
-    // Draw in numerical order when in 3D view
-    group = global_view_2d ? GetLayerGroupNumberByNumber (LayerStack[i]) : orderi;
+          if (!do_group[group])
+            {
+              do_group[group] = 1;
+              drawn_groups[ngroups++] = group;
+            }
+        }
+    }
+  else
+    { // Draw in numerical order when in 3D view
+      int group;
+      int orderi;
+      for (ngroups = 0, i = 0; i < max_group; i++)
+        {
+          group = reverse_layers ? max_group -1 - i : i;
 
-    if (!do_group[group]) {
-      do_group[group] = 1;
-      drawn_groups[ngroups++] = group;
+          if (!do_group[group])
+            {
+              do_group[group] = 1;
+              drawn_groups[ngroups++] = group;
+            }
+        }
     }
-  }
 
   /*
    * first draw all 'invisible' stuff
@@ -1742,13 +1758,13 @@ ghid_draw_everything (BoxTypePtr drawn_area)
   /* Draw top silkscreen */
   if (!Settings.ShowSolderSide &&
       gui->set_layer ("topsilk", SL (SILK, TOP), 0)) {
-    DrawSilk (0, COMPONENT_LAYER, drawn_area);
+    DrawSilk (0, component_silk_layer, drawn_area);
     gui->set_layer (NULL, SL (FINISHED, 0), 0);
   }
 
   if (Settings.ShowSolderSide &&
       gui->set_layer ("bottomsilk", SL (SILK, BOTTOM), 0)) {
-    DrawSilk (1, SOLDER_LAYER, drawn_area);
+    DrawSilk (1, solder_silk_layer, drawn_area);
     gui->set_layer (NULL, SL (FINISHED, 0), 0);
   }
 
@@ -1943,8 +1959,8 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
     int max_phys_group;
     int i;
 
-    solder_group = GetLayerGroupNumberByNumber (max_layer + SOLDER_LAYER);
-    component_group = GetLayerGroupNumberByNumber (max_layer + COMPONENT_LAYER);
+    solder_group = GetLayerGroupNumberByNumber (solder_silk_layer);
+    component_group = GetLayerGroupNumberByNumber (component_silk_layer);
 
     min_phys_group = MIN (solder_group, component_group);
     max_phys_group = MAX (solder_group, component_group);
diff --git a/src/polygon.c b/src/polygon.c
index d72befd..96c9218 100644
--- a/src/polygon.c
+++ b/src/polygon.c
@@ -2035,7 +2035,7 @@ POLYAREA *board_outline_poly ()
   whole_world = RectPoly (-BLOAT_WORLD, BLOAT_WORLD + PCB->MaxWidth,
                           -BLOAT_WORLD, BLOAT_WORLD + PCB->MaxHeight);
 
-  for (i = 0; i < max_layer; i++)
+  for (i = 0; i < max_copper_layer; i++)
     {
       Layer = PCB->Data->Layer + i;
