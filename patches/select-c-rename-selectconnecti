Bottom: 2b4ab12c72afe8503ae8e96a93ab72fa11eb4a4a
Top:    d77978be9ccc29f921d2e9330892682c7584d72b
Author: Peter Clifton <peter@clifton-electronics.co.uk>
Date:   2012-12-22 15:41:50 +0000

select.c: Rename SelectConnection() to SelectByFlag() and add flag parameter


---

diff --git a/src/action.c b/src/action.c
index e77ed2a..6a2c43a 100644
--- a/src/action.c
+++ b/src/action.c
@@ -5424,7 +5424,7 @@ ActionSelect (int argc, char **argv, Coord x, Coord y)
 
 	  /* all found connections */
 	case F_Connection:
-	  if (SelectConnection (true))
+	  if (SelectByFlag (FOUNDFLAG, true))
 	    {
               Draw ();
 	      IncrementUndoSerialNumber ();
@@ -5603,7 +5603,7 @@ ActionUnselect (int argc, char **argv, Coord x, Coord y)
 
 	  /* all found connections */
 	case F_Connection:
-	  if (SelectConnection (false))
+	  if (SelectByFlag (FOUNDFLAG, false))
 	    {
               Draw ();
 	      IncrementUndoSerialNumber ();
diff --git a/src/hid/gtk/gui-netlist-window.c b/src/hid/gtk/gui-netlist-window.c
index 07fdac7..de49802 100644
--- a/src/hid/gtk/gui-netlist-window.c
+++ b/src/hid/gtk/gui-netlist-window.c
@@ -542,7 +542,7 @@ netlist_select_cb (GtkWidget * widget, gpointer data)
     if (SeekPad (entry, &conn, false))
       RatFindHook (conn.type, conn.ptr1, conn.ptr2, conn.ptr2, true, FOUNDFLAG, true);
 
-  SelectConnection (select_flag);
+  SelectByFlag (FOUND_FLAG, select_flag);
   ResetConnections (false, FOUNDFLAG);
   FreeConnectionLookupMemory ();
   IncrementUndoSerialNumber ();
diff --git a/src/hid/lesstif/netlist.c b/src/hid/lesstif/netlist.c
index dae93ef..8104ecd 100644
--- a/src/hid/lesstif/netlist.c
+++ b/src/hid/lesstif/netlist.c
@@ -139,7 +139,7 @@ nbcb_select_common (LibraryMenuType *net, int pos, int select_flag)
     if (SeekPad (entry, &conn, false))
       RatFindHook (conn.type, conn.ptr1, conn.ptr2, conn.ptr2, true, FOUNDFLAG, true);
 
-  SelectConnection (select_flag);
+  SelectByFlag (FOUNDFLAG, select_flag);
   ResetConnections (false, FOUNDFLAG);
   FreeConnectionLookupMemory ();
   IncrementUndoSerialNumber ();
diff --git a/src/select.c b/src/select.c
index 2c27aeb..3b1b670 100644
--- a/src/select.c
+++ b/src/select.c
@@ -700,21 +700,23 @@ SelectedOperation (ObjectFunctionType *F, bool Reset, int type)
 }
 
 /* ----------------------------------------------------------------------
- * selects/unselects all objects which were found during a connection scan
+ * selects/unselects all objects which have (any of) the specified flag(s)
+ * set. (Typically the FOUNDFLAG, assigned during a connection scan).
  * "select" determines if they are to be selected or unselected
+ *
  * returns true if the state of any object has changed
  *
  * text objects and elements cannot be selected by this routine
  */
 bool
-SelectConnection (bool select)
+SelectByFlag (int flag, bool select)
 {
   bool changed = false;
 
   if (PCB->RatOn)
     RAT_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (FOUNDFLAG, line))
+    if (TEST_FLAG (flag, line))
       {
 	AddObjectToFlagUndoList (RATLINE_TYPE, line, line, line);
 	ASSIGN_FLAG (SELECTEDFLAG, select, line);
@@ -726,7 +728,7 @@ SelectConnection (bool select)
 
   VISIBLELINE_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (FOUNDFLAG, line) && !TEST_FLAG (LOCKFLAG, line))
+    if (TEST_FLAG (flag, line) && !TEST_FLAG (LOCKFLAG, line))
       {
 	AddObjectToFlagUndoList (LINE_TYPE, layer, line, line);
 	ASSIGN_FLAG (SELECTEDFLAG, select, line);
@@ -737,7 +739,7 @@ SelectConnection (bool select)
   ENDALL_LOOP;
   VISIBLEARC_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (FOUNDFLAG, arc) && !TEST_FLAG (LOCKFLAG, arc))
+    if (TEST_FLAG (flag, arc) && !TEST_FLAG (LOCKFLAG, arc))
       {
 	AddObjectToFlagUndoList (ARC_TYPE, layer, arc, arc);
 	ASSIGN_FLAG (SELECTEDFLAG, select, arc);
@@ -748,7 +750,7 @@ SelectConnection (bool select)
   ENDALL_LOOP;
   VISIBLEPOLYGON_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (FOUNDFLAG, polygon) && !TEST_FLAG (LOCKFLAG, polygon))
+    if (TEST_FLAG (flag, polygon) && !TEST_FLAG (LOCKFLAG, polygon))
       {
 	AddObjectToFlagUndoList (POLYGON_TYPE, layer, polygon, polygon);
 	ASSIGN_FLAG (SELECTEDFLAG, select, polygon);
@@ -762,7 +764,7 @@ SelectConnection (bool select)
     {
       ALLPIN_LOOP (PCB->Data);
       {
-	if (!TEST_FLAG (LOCKFLAG, element) && TEST_FLAG (FOUNDFLAG, pin))
+	if (!TEST_FLAG (LOCKFLAG, element) && TEST_FLAG (flag, pin))
 	  {
 	    AddObjectToFlagUndoList (PIN_TYPE, element, pin, pin);
 	    ASSIGN_FLAG (SELECTEDFLAG, select, pin);
@@ -773,7 +775,7 @@ SelectConnection (bool select)
       ENDALL_LOOP;
       ALLPAD_LOOP (PCB->Data);
       {
-	if (!TEST_FLAG (LOCKFLAG, element) && TEST_FLAG (FOUNDFLAG, pad))
+	if (!TEST_FLAG (LOCKFLAG, element) && TEST_FLAG (flag, pad))
 	  {
 	    AddObjectToFlagUndoList (PAD_TYPE, element, pad, pad);
 	    ASSIGN_FLAG (SELECTEDFLAG, select, pad);
@@ -787,7 +789,7 @@ SelectConnection (bool select)
   if (PCB->ViaOn)
     VIA_LOOP (PCB->Data);
   {
-    if (TEST_FLAG (FOUNDFLAG, via) && !TEST_FLAG (LOCKFLAG, via))
+    if (TEST_FLAG (flag, via) && !TEST_FLAG (LOCKFLAG, via))
       {
 	AddObjectToFlagUndoList (VIA_TYPE, via, via, via);
 	ASSIGN_FLAG (SELECTEDFLAG, select, via);
@@ -980,7 +982,7 @@ SelectObjectByName (int Type, char *Pattern, bool select)
       }
       END_LOOP;
 
-      changed = SelectConnection (select) || changed;
+      changed = SelectByFlag (FOUNDFLAG, select) || changed;
       changed = ResetConnections (false, FOUNDFLAG) || changed;
       FreeConnectionLookupMemory ();
     }
diff --git a/src/select.h b/src/select.h
index 3e0369f..40e475d 100644
--- a/src/select.h
+++ b/src/select.h
@@ -40,7 +40,7 @@ bool SelectObject (void);
 bool SelectBlock (BoxType *, bool);
 bool SelectedOperation (ObjectFunctionType *, bool, int);
 void *ObjectOperation (ObjectFunctionType *, int, void *, void *, void *);
-bool SelectConnection (bool);
+bool SelectByFlag (int flag, bool select);
 
 #if defined(HAVE_REGCOMP) || defined(HAVE_RE_COMP)
 bool SelectObjectByName (int, char *, bool);
