Bottom: 8b1303f027688329b3d8e3b9c81005adb5f339fe
Top:    136b23529893f0ea4e12ea574e5accfac52673df
Author: Peter Clifton <pcjc2@cam.ac.uk>
Date:   2010-12-25 02:14:07 +0000

Fix mesa crash on startup (for some mesa versions)

I'm not sure why it crashed, but it seems that providing a realize
handler which fiddles with the GL context solves it. I've also
removed a number of superfluous gtk_widget_realize() and an un-warraned
gtk_widget_show_all()

The underlying problem appears to have been fixed in later mesa versions.


---

diff --git a/src/hid/gtk/gtkhid-gdk.c b/src/hid/gtk/gtkhid-gdk.c
index e45e28d..b265b66 100644
--- a/src/hid/gtk/gtkhid-gdk.c
+++ b/src/hid/gtk/gtkhid-gdk.c
@@ -1026,6 +1026,11 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
   return FALSE;
 }
 
+void
+ghid_port_drawing_realize_cb (GtkWidget *widget, gpointer data)
+{
+}
+
 gboolean
 ghid_pinout_preview_expose (GtkWidget *widget,
                             GdkEventExpose *ev)
diff --git a/src/hid/gtk/gtkhid-gl.c b/src/hid/gtk/gtkhid-gl.c
index e75d36b..e2db060 100644
--- a/src/hid/gtk/gtkhid-gl.c
+++ b/src/hid/gtk/gtkhid-gl.c
@@ -993,6 +993,22 @@ ghid_drawing_area_expose_cb (GtkWidget *widget,
   return FALSE;
 }
 
+void
+ghid_port_drawing_realize_cb (GtkWidget *widget, gpointer data)
+{
+  GdkGLContext *glcontext = gtk_widget_get_gl_context (widget);
+  GdkGLDrawable *gldrawable = gtk_widget_get_gl_drawable (widget);
+
+  /*** OpenGL BEGIN ***/
+  if (!gdk_gl_drawable_gl_begin (gldrawable, glcontext))
+    return;
+
+  gdk_gl_drawable_gl_end (gldrawable);
+  /*** OpenGL END ***/
+
+  return;
+}
+
 gboolean
 ghid_pinout_preview_expose (GtkWidget *widget,
                             GdkEventExpose *ev)
diff --git a/src/hid/gtk/gui-top-window.c b/src/hid/gtk/gui-top-window.c
index d6b52e2..729b368 100644
--- a/src/hid/gtk/gui-top-window.c
+++ b/src/hid/gtk/gui-top-window.c
@@ -2140,8 +2140,6 @@ destroy_chart_cb (GtkWidget * widget, GHidPort * port)
   gtk_main_quit ();
 }
 
-
-
 /* 
  * Create the top_window contents.  The config settings should be loaded
  * before this is called.
@@ -2350,6 +2348,9 @@ ghid_build_pcb_top_window (void)
      |  the user does a command entry.
    */
 
+  g_signal_connect (G_OBJECT (gport->drawing_area), "realize",
+		    G_CALLBACK (ghid_port_drawing_realize_cb),
+		    port);
   g_signal_connect (G_OBJECT (gport->drawing_area), "expose_event",
 		    G_CALLBACK (ghid_drawing_area_expose_cb),
 		    port);
@@ -2385,10 +2386,6 @@ ghid_build_pcb_top_window (void)
   ghidgui->creating = FALSE;
 
   gtk_widget_show_all (gport->top_window);
-  gtk_widget_realize (vbox_main);
-  gtk_widget_realize (hbox_middle);
-  gtk_widget_realize (viewport);
-  gtk_widget_realize (gport->drawing_area);
   gdk_window_set_back_pixmap (gport->drawing_area->window, NULL, FALSE);
 
   ghid_route_style_temp_buttons_hide ();
@@ -2704,8 +2701,6 @@ ghid_parse_arguments (int *argc, char ***argv)
   if (Settings.AutoPlace)
     gtk_widget_set_uposition (GTK_WIDGET (window), 10, 10);
 
-  gtk_widget_realize (gport->top_window);
-  gtk_widget_show_all (gport->top_window);
   ghidgui->creating = TRUE;
 }
 
diff --git a/src/hid/gtk/gui.h b/src/hid/gtk/gui.h
index d34af6c..2ad0adc 100644
--- a/src/hid/gtk/gui.h
+++ b/src/hid/gtk/gui.h
@@ -505,6 +505,7 @@ void ghid_end_drawing (GHidPort *port);
 void ghid_screen_update (void);
 gboolean ghid_drawing_area_expose_cb (GtkWidget *, GdkEventExpose *,
                                       GHidPort *);
+void ghid_port_drawing_realize_cb (GtkWidget *, gpointer);
 gboolean ghid_pinout_preview_expose (GtkWidget * widget, GdkEventExpose * ev);
 GdkPixmap *ghid_render_pixmap (int cx, int cy, double zoom,
                                int width, int height, int depth);
